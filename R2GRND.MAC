	.TITLE RBGRND-RED BARON GROUND SEQUENCE
	.CSECT RBGRND
	.ENABL AMA
	.LIST MEB
	.NLIST BYT
	.RADIX 16
;
;	RAM CELLS
;
	.GLOBB UNIV4X,RESULT,VGBRIT,XPOS
	.GLOBB POINTR,SAVX,SAVY,OBJECT
	.GLOBB TEMP1,HORIZN,I4YPOS,VGSTAT
	.GLOBB XCOMP,YCOMP,XPOINT,YPOINT
	.GLOBB O.DPTH
	.GLOBB POTFLG,POTMIN,POTVAL,PTRNGE
	.GLOBB POTUSE,P.CNTR,P.LTCH,SWSTAT
	.GLOBB GAMODE,S.VAL,INTCNT,EXPVAL
	.GLOBB SPIRAL,ST.LED,S.FLAG,SECCNT
	.GLOBB F.CNTR,C.CNTR,CALCNT,$LMTIM
	.GLOBB CALFLG,I.TEMP,$CCTIM,INTFLG
	.GLOBL DB.TRP,SLAMSN
;
;	INTERNAL ENTRY POINTS
;
	.GLOBL PROJECT,POSITH,POSITP
	.GLOBL SETBM,PLACBM,SETGRS
	.GLOBL PLNABZ,ROTABZ,ZAXIS,YAXIS
	.GLOBL XAXIS,D.LOOP,DCMPA0,DECMAP
	.GLOBL DECODE,NMI
;
;	PICTURE DB'S
;
	.GLOBL SSEGS,.SSEG,BULLT1
	.GLOBL BULLDE,PFPNT0,PFOCOL,VCTRMP
	.GLOBL BULLT0,PLNDB
;
;	I/O ADDRESSES
;
	.GLOBL MATHST,MATH,YLOW,YHIGH
	.GLOBL DD.DML,DD.DMM,D.NMHL,D.NMHH
	.GLOBL D.SZXD,MM.XL,MM.XM,MM.YL,MM.YM
	.GLOBL MM.EL,MM.EM,MM.FL,MM.FM
	.GLOBL M.SYM
	.GLOBL POKEY,POTIN,FIRE,TESTSW
	.GLOBL VGON,WATCH,NSERST,CRSHSN
	.GLOBL COINCT
;
;BIT/MASK VALUES
;
	.GLOBL PS.BIT,SH.BIT,CC.BIT,BNRBIT
	.GLOBL FRMECNT,BNRCNT
;
;	EXTERNAL ENTRY POINTS
;
	.GLOBL TRIG,VGCNTR,DPABS,MRSULT
	.GLOBL VGVCTR,VGVTR2,PLPROP,SCOREM
	.GLOBL MODSND,MOOLAH

	.LABL=0
	P.COUNT=2
	FRMECNT=5

	.MACRO MATSTT
	LABL\.LABL
	.ENDM
	
	.MACRO LABL OP
	STAT'OP:BIT A,MATHST
	BMI STAT'OP
	.LABL=.LABL+1
	.ENDM
	
	.MACRO POINTP .X,.Y,.Z
	.BYTE .Z,.X*2,.Y*4
	.ENDM

	.MACRO PFPNTS .X,.Y,.Z	;PLAYFIELD POINT
	.BYTE .X/2,.Y*2
	.ENDM

	.MACRO BBPNTS .X,.Y
	.WORD 0,.X*2,.Y*2
	.ENDM
	
	.MACRO PFCOL .X,.Y
	.WORD .X*8,.Y*8
	.ENDM
	
	.MACRO VV .A	;VISIBLE VECTOR
	.BYTE .A*6+1
	.ENDM
	
	.MACRO BV .A	;BLANK VECTOR
	.BYTE	.A*6
	.ENDM
	
	.MACRO ENDDB	;END OF DB
	.BYTE ^H0FF
	.ENDM
	.SBTTL	NMI
;
;	INTERRUPT OCCURS EVERY 4 MS. [FROM HARDWARE]
;
NMI:	PHA			;SAVE REGISTERS
	TXA
	PHA
	TYA
	PHA
	CLD
;
;POT READING ROUTINE
;
	LDA POTFLG
	BMI 60$			;WAIT FOR COUNTER TO ADJUST TO POT
	AND I,1
	TAX
10$:	STA A,POKEY+0B		;POTGO
	LDA A,POTIN		;GET POT READING
	SEC			;A=POT READING
	SBC ZX,POTMIN		;CHK MIN
	BCS 20$			;BRANCH > MIN
	DEC ZX,POTMIN
	LDA I,0
20$:	CMP ZX,PTRNGE		;CHK RANGE
	BCC 30$			;WITHIN RANGE
	INC ZX,PTRNGE		;ELSE INCREASE
	LDA ZX,PTRNGE
30$:	TAY
	SEC
	SBC ZX,POTVAL		;CHECK FOR NOISE (+3-3) READING
	BCC 50$			;CHECK -3
	LSR			;ELSE CHECK +3
	LSR
	BEQ 60$			;NO CHANGE
40$:	STY ZX,POTVAL		;UPDATE POT VALUE
	INC ZX,POTUSE		;COUNT POT CHANGES
	LDA ZX,POTUSE
	CMP I,100.
	BCC 60$
	INC ZX,POTMIN
	DEC ZX,PTRNGE
	DEC ZX,PTRNGE
	LDA I,0
	STA ZX,POTUSE
	BCS 60$			;ALWAYS
50$:	ADC I,3			;CARRY IS CLR
	BMI 40$			;BEYOND NOISE
60$:	DEC P.CNTR		;COUNT DOWN
	BNE NMTIME		;NO YET
	LDA POTFLG
	EOR I,80		;CHANGE STATUS BIT
	TAX
	BPL 70$			;WAS WAITING
	EOR I,1			;ELSE SWITCH POT LATCH
	TAX
	LDA P.LTCH
	EOR I,PS.BIT
	STA P.LTCH		;CHANGE ANALOG SWITCH
70$:	STX POTFLG
	LDA I,P.COUNT		;COUNT VALUE
	STA P.CNTR
NMTIME:	LDA A,FIRE
	EOR I,40		;START + TRUE
	STA SWSTAT
	LDA I,0
	BIT GAMODE
	BPL 6$			;NO SOUNDS
	LDX S.VAL		;SHOT SOUND TIMER
	BEQ 4$
	LDX I,SH.BIT		;ENABLE BITS
	LDA INTCNT
	AND I,8
	BNE 4$
	LDX I,0
4$:	TXA
	ORA EXPVAL
	ORA SPIRAL
6$:	ORA A,SLAMSN
	ORA ST.LED
	ORA P.LTCH
	STA A,CRSHSN		;SET SOUNDS/POT LATCH/START LED
	TAX
	LDA GAMODE
	ORA $LMTIM
	BNE 10$
	STX A,NSERST
10$:	INC INTCNT		;INCREMENT INT (4 MS) COUNTER
	LDA INTCNT
	CMP I,250.		;250.*.004=1
	BCC 12$
	LDA I,0
	STA INTCNT		;CLR COUNT
	INC SECCNT		;COUNT SECONDS
	BNE 12$
	INC SECCNT+1
12$:	LDA CALFLG		;CHK FRAME(S)
	CMP I,40
	BCS 15$			;3*CALCULATION LOOP TIME W/O FRAME
	TSX
	CPX I,90		;STACK TOO LOW?
	BCS 20$			;NO
15$:	JMP 15$			;WAIT FOR WATCHDOG TO RESTART

20$:	STA A,WATCH		;CLR WATCHDOG
	JSR MOOLAH		;COIN ROUTINE
	LDA I,0
	STA I.TEMP
	LDA I,CC.BIT
	LDX I,2
25$:	LDY ZX,$CCTIM
	BPL 30$
	PHA
	ORA I.TEMP		;SET COIN COUNTER
	STA I.TEMP
	PLA
30$:	ASL
	DEX
	BPL 25$
	LDA I.TEMP
	STA A,COINCT
	DEC C.CNTR		;CALCULATION FRAME CNTR
	BNE 50$
	LDX I,CALCNT
	LDA GAMODE
	AND I,BNRBIT
	BEQ 35$
	LDX I,BNRCNT
35$:	STX C.CNTR
	INC CALFLG
50$:
	DEC F.CNTR		;CHK FOR EOF [END OF FRAME]
	BNE NMEXIT
	LDA I,FRMECNT
	STA F.CNTR		;RESET FRAME COUNT
	INC INTFLG		;FRAME SYNC [EVERY FRMECNT:4 MS]
NMEXIT:	JSR SCOREM
	JSR MODSND		;UPDATE SOUNDS
	BIT S.FLAG		;PROGRAM CALCULATING?
	BPL 10$			;NO
	LDA INTFLG		;EOF (VG) ?
	BEQ 10$			;NO
	BIT A,TESTSW		;ELSE - SO VG HALTED?
	BVC 10$			;NOT YET
	JSR PLPROP
	STA A,VGON		;ELSE - AUTO RESTART & CLR FLAG
	DEC INTFLG		;CLEAR FLAG FOR EOF (VG)
10$:	PLA			;RESTORE REGISTERS
	TAY
	PLA
	TAX
	PLA
	RTI
	.PAGE

	.PAGE
	
	.SBTTL POSITION BEAM
;
;
;
POSITP:	LDA UNIV4X
	STA MATH+4		;X ABOUT CENTER
	LDA UNIV4X+1
	STA MATH+5
	LDA I,0
	STA MATH+6		;Y ABOUT PLAYER POSITION
	STA MATH+7

POSITH:	LDA OBJECT+4		;X DEPTH
	STA OBJECT+6		;Y DEPTH
	LDA OBJECT+5
	STA OBJECT+7
	LDA OBJECT		;X LSB
	STA MATH+8
	LDA OBJECT+1		;X MSB
	STA MATH+9
	SEC
	LDA OBJECT+2		;Y LSB
	SBC I4YPOS		;-EYE POSITION
	STA MATH+0A
	LDA OBJECT+3		;Y MSB
	SBC I4YPOS+1
	STA MATH+0B		;START MM
	MATSTT
	LDA YLOW
	STA XPOS
	LDA YHIGH
	STA MATH+12		;START 2ND MM
	STA XPOS+1
	MATSTT
	LDA YLOW		;Y POSITION
	LDX YHIGH
	STA MATH+0F
	STX MATH+10
	LDA OBJECT+6		;SCALE BY DEPTH
	STA MATH+15
	LDA OBJECT+7
	STA MATH+16
	STA MATH+14		;START DIVIDE
	MATSTT
	CLC
	LDA YLOW
	ADC I,HORIZN
	STA XPOS+2		;Y RESULT LSB
	LDA YHIGH
	ADC I,0
	STA XPOS+3
	LDA OBJECT+4
	STA MATH+15
	LDA OBJECT+5
	STA MATH+16
	LDA XPOS		;SCALE X (LSB)
	STA MATH+0F
	LDA XPOS+1		;SCALE X (MSB)
	STA MATH+10
	STA MATH+14		;START DIVIDE
	MATSTT
	LDY YLOW
	STY XPOS
	LDX YHIGH
	STX XPOS+1
	RTS
;
;
;
SETBM:	TXA			;X,Y = X POSITION (SET SIGN)
	JSR DPABS
	CPX I,3			;X POSITION VISIBLE
	BCS PLAC.0		;NO
	LDY XPOS+2		;Y POSITION LSB
	LDX XPOS+3		;Y POSITION MSB
	JSR DPABS
	CPX I,3			;Y POSITION VISIBLE
	BCS PLAC.0		;NO
PLACBM:	JSR VGCNTR		;CENTER BEAM
	LDA I,0
	STA VGBRIT
	LDX I,XPOS
	JSR VGVCTR		;VCTR TO POSITION
	CLC			;0,0 CENTER OF OBJECT
PLAC.0:	RTS
;
;GROUND SHELL BEAM SET
;
SETGRS:	TXA			;X,Y=X POSITION(SET SIGN)
	JSR DPABS
	CPY I,20
	SBC I,2
	BCS 10$
	LDY XPOS+2		;XPOS+2,+3=Y POSITION
	LDX XPOS+3
	JSR DPABS
	CPY I,88
	SBC I,1
	BCC PLACBM
10$:	RTS
	.PAGE
;
	.SBTTL PROJECT POINTS(TRANSLATE,ROTATE)
;
;
PROJECT:STA POINTR+1
	STX POINTR
PROJ0:
	LDA OBJECT+4		;X DEPTH
	STA MATH+15		; DEPTH @ POINT
	LDA OBJECT+5		;X DEPTH (MSB)
	STA MATH+16		;     (MSB)
	LDX I,0
	LDA NY,POINTR		;X
	BPL 3$
	DEX
3$:	STX TEMP1+1
	ASL
	ROL TEMP1+1
	ASL
	ROL TEMP1+1
	ASL
	ROL TEMP1+1
	ASL
	ROL TEMP1+1
	STA MATH+0F
	LDA TEMP1+1
	STA MATH+10
	STA MATH+14		;START DIVIDE
	MATSTT
	LDA YLOW
	LDX YHIGH
	STA MATH+8
	STX MATH+9
	LDA OBJECT+6		;Y DEPTH
	STA MATH+15
	LDA OBJECT+7
	STA MATH+16		;MSB
	INY
	LDX I,0
	LDA NY,POINTR		;Y(LSB)
	BPL 6$
	DEX
6$:	STX TEMP1
	ASL
	ROL TEMP1
	ASL
	ROL TEMP1
	STA MATH+0F
	LDA TEMP1		;Y(MSB)
	STA MATH+10
	STA MATH+14		;START DIVIDE
	MATSTT
	LDA YLOW
	LDX YHIGH
	STA MATH+0A
	STX MATH+0B
	TYA
	ASL
	STY TEMP1
	ADC TEMP1		;CARRY CLR
	TAX
	MATSTT
	LDA YLOW
	STA AX,DB.TRP-1		;RESULT X LSB
	LDA YHIGH
	STA MATH+12		;START 2ND MM
	STA AX,DB.TRP		;X MSB
	MATSTT
	LDA YHIGH
	STA AX,DB.TRP+2		;Y MSB
	LDA YLOW
	STA AX,DB.TRP+1		;Y LSB
	TYA
	SEC
	SBC I,3			;NEXT POINT (2 BYTES/POINT)
	TAY
	BCC 10$
	JMP PROJ0
10$:	RTS

	.PAGE
	.SBTTL ROTATE,PROJECT,DECODE POINTS
;
;ROTATE PLANE ABOUT Z
;
PLNABZ:	TXA
	ASL
	TAX
	LDA AX,PLNDB
	STA POINTR
	LDA AX,PLNDB+1
	STA POINTR+1
;
;ROTATE ABOUT Z AXIS
;
ROTABZ:	LDA I,0
	STA A,MM.EL		;TRANSLATE ABOUT 0,0,0
	STA A,MM.EM
	STA A,MM.FL
	STA A,MM.FM
;
;ROTATE ABOUT Z
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	LAST POINT OFFSET	BLITZED
;
;USES - SAVY,+1,POINTR,+1
;
ZAXIS:	STY SAVY
	TYA
	ASL
	STA SAVY+1
	LDX I,0
	LDA NY,POINTR		;Z
	BPL 10$
	DEX			;SIGN EXTEND
10$:	LDY SAVY+1
	STA AY,DB.TRP		;Z LSB
	TXA
	STA AY,DB.TRP+1		;Z MSB
	LDY SAVY
	INY
	LDX I,0
	LDA NY,POINTR		;X (*2)
	ASL
	BCC 20$
	DEX			;SIGN EXTEND
20$:	STA A,MM.XL		;X LSB (*4)
	STX A,MM.XM		;X MSB (*4)
	INY
	LDX I,0
	LDA NY,POINTR		;Y (*4)
	BPL 30$
	DEX			;SIGN EXTEND
30$:	STA A,MM.YL		;Y LSB (*4)
	STX A,MM.YM		;Y MSB (*4)
	LDY SAVY+1
	MATSTT
	LDA A,YLOW		;X RESULT (LSB)
	LDX A,YHIGH		;X RESULT (MSB)
	STA A,M.SYM		;START 2ND MULTIPLY
	STA AY,DB.TRP+2
	TXA
	STA AY,DB.TRP+3
	MATSTT
	LDA A,YLOW		;Y RESULT (LSB)
	STA AY,DB.TRP+4
	LDA A,YHIGH		;Y RESULT (MSB)
	STA AY,DB.TRP+5
	LDA SAVY
	SEC
	SBC I,3
	TAY
	BCS ZAXIS
	RTS
;
;ROTATE ABOUT Y
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	LAST POINT OFFSET	BLITZED
;Y	DC			BLITZED
;
;USES - SAVX,TEMP1,RESULT,+1
;CALLS - MRSULT
;
YAXIS:	STX SAVX
	LDA AX,DB.TRP+2		;X LSB
	ASL
	STA TEMP1
	LDA AX,DB.TRP+3		;X MSB
	ROL
	ASL TEMP1
	ROL
	STA A,MM.XM		;X MSB (*4)
	LDA TEMP1
	STA A,MM.XL		;X LSB (*4)
	LDA AX,DB.TRP		;Z LSB
	ASL
	STA TEMP1
	LDA AX,DB.TRP+1		;Z MSB
	ROL
	ASL TEMP1
	ROL
	LDY TEMP1
	STY A,MM.YL		;Z LSB (*4)
	STA A,MM.YM		;Z MSB (*4)
	JSR MRSULT		;DO ROTATION
	LDY SAVX
	STA AY,DB.TRP		;Z (LSB) RESULT
	TXA
	STA AY,DB.TRP+1		;Z (MSB)
	LDA RESULT
	STA AY,DB.TRP+2		;X (LSB)
	LDA RESULT+1
	STA AY,DB.TRP+3		;X (MSB)
	TYA
	SEC
	SBC I,6
	TAX
	BCS YAXIS
	RTS
;
;ROTATE ABOUT X
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	LAST POINT OFFSET	BLITZED
;Y	DC			BLITZED
;
;USES - SAVX,TEMP1,RESULT,+1
;CALLS - MRSULT
;
XAXIS:	STX SAVX
	LDA AX,DB.TRP+4		;Y LSB
	ASL
	STA TEMP1
	LDA AX,DB.TRP+5		;Y MSB
	ROL
	ASL TEMP1
	ROL
	STA A,MM.XM		;Y MSB (*4)
	LDA TEMP1
	STA A,MM.XL		;Y LSB (*4)
	LDA AX,DB.TRP		;Z LSB
	ASL
	STA TEMP1
	LDA AX,DB.TRP+1		;Z MSB
	ROL
	ASL TEMP1
	ROL
	LDY TEMP1
	STY A,MM.YL		;Z LSB (*4)
	STA A,MM.YM		;Z MSB (*4)
	JSR MRSULT		;DO ROTATION
	LDY SAVX
	STA AY,DB.TRP		;Z (LSB) RESULT
	TXA
	STA AY,DB.TRP+1		;Z (MSB)
	LDA RESULT
	STA AY,DB.TRP+4		;Y (LSB)
	LDA RESULT+1
	STA AY,DB.TRP+5		;Y (MSB)
	TYA
	SEC
	SBC I,6
	TAX
	BCS XAXIS
	RTS
;
;PROJECT X & Y BY Z
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	# POINTS * 6		BLITZED
;Y	DC			BLITZED
;
;USES - O.DPTH,+1
;MODIFYS - DB.TRP(S),MBOX(S)
;
D.LOOP:	CLC
	LDA AX,DB.TRP		;Z LSB
	ADC O.DPTH		;+ OBJECT DEPTH
	STA A,DD.DML
	LDA AX,DB.TRP+1		;Z MSB
	ADC O.DPTH+1
	STA A,DD.DMM
	LDA AX,DB.TRP+2		;X  LSB
	STA A,D.NMHL
	LDA AX,DB.TRP+3		;X  MSB
	STA A,D.NMHH
	STA A,D.SZXD		;START DIVISION
	LDY AX,DB.TRP+4		;Y LSB
	MATSTT			;WAIT FOR DIVISION
	LDA A,YLOW
	STA AX,DB.TRP+2		;SCALED X LSB
	LDA A,YHIGH
	STY A,D.NMHL
	LDY AX,DB.TRP+5		;Y MSB
	STY A,D.NMHH
	STA A,D.SZXD		;START DIVISION
	STA AX,DB.TRP+3		;SCALED X MSB
	MATSTT			;WAIT FOR DIVISION
	LDA A,YLOW
	STA AX,DB.TRP+4		;SCALED Y LSB
	LDA A,YHIGH
	STA AX,DB.TRP+5		;SCALED Y MSB
	TXA
	SEC
	SBC I,6
	TAX
	BCS D.LOOP		;DO NEXT POINT
	RTS
;
;DECODE POINT CONNECTION INSTRUCTIONS
;
;DB.TRP CONTAINS 6 BYTE FIELDS OF POINT
;	(Z LSB,Z MSB,X LSB,X MSB,Y LSB ,Y MSB)
;
;	ENTRY			EXIT
;ACC	ADDR OF INSTR.(MSB)	BLITZED
;X	  "	  "   (LSB)	BLITZED
;Y	DC			BLITZED
;
;USES - POINTR,+1,SAVY,VGBRIT,XPOINT,+1,YPOINT,+1,XCOMP,+1
;YCOMP,+1,DB.TRP(S)
;
;CALLS - VGVCTR
;
DCMPA0:	LDY I,0
	STY XPOINT		;INITIAL POINT IS 0,0
	STY XPOINT+1
	STY YPOINT
	STY YPOINT+1

DECMAP:	STA POINTR+1		;INSTRUCTION POINTER
	STX POINTR
	LDY I,0			;START @ BYTE 0
	
DECODE:	LDX I,20		;ASSUME VISIBLE VCTR
	LDA NY,POINTR		;VCTR INSTRUCTION
	CMP I,0FF
	BEQ DECODN		;END POINT CONNECT GRAPH
	STY SAVY		;SAVE INDEX
	LSR			;(D0 = 0 = BLANK VCTR)
	BCS 10$
	LDX I,0			;NO INTENSITY
10$:	STX VGBRIT		;SET INTENSITY
	ASL			;POINT # * 6
	TAX
	LDA AX,DB.TRP+2		;X LSB
	TAY
	SEC
	SBC XPOINT		;- CURRENT X LSB
	STA XCOMP		;X DELTA (LSB)
	STY XPOINT		;BECOMES NEW CURRENT ENDPOINT
	LDA AX,DB.TRP+3		;X MSB
	TAY
	SBC XPOINT+1		;- CURRENT X MSB
	STA XCOMP+1		;X DELTA (MSB)
	STY XPOINT+1		;BECOMES NEW CURRENT
	LDA AX,DB.TRP+4		;Y LSB
	TAY
	SEC
	SBC YPOINT		;- CURRENT Y LSB
	STA YCOMP		;Y DELTA (LSB)
	STY YPOINT		;BECOMES NEW CURRENT ENDPOINT
	LDA AX,DB.TRP+5		;Y MSB
	TAY
	SBC YPOINT+1		;- CURRENT Y MSB
	STA YCOMP+1		;Y DELTA (MSB)
	STY YPOINT+1		;BECOMES NEW CURRENT
	JSR VGVTR2
	LDY SAVY
	INY			;DECODE NEXT BYTE
	BNE DECODE		;ALWAYS
DECODN:	RTS
	.PAGE
	.SBTTL	DISPLAY DB'S
	.RADIX 10
;
SCAPE0:	PFPNTS -128,0,0		;0
	PFPNTS -104,24,32
	PFPNTS -88,24,32
	PFPNTS -64,0,0
	PFPNTS -48,16,16	;4
	PFPNTS -16,24,48
	PFPNTS 0,8,16
	PFPNTS 24,16,32
	PFPNTS 48,0,32		;8
	PFPNTS 64,0,32
	PFPNTS 80,0,32
	PFPNTS 96,24,48
	PFPNTS 120,0,16		;12
	PFPNTS 112,8,24
	PFPNTS 120,20,32
	PFPNTS 128,0,0
	PFPNTS -32,8,16		;16
	PFPNTS -48,0,0
	PFPNTS 8,0,0
	PFPNTS 100,8,100
	PFPNTS 112,0,0		;20
;
SCAPE1:	PFPNTS -128,0,0		;0
	PFPNTS -112,0,16
	PFPNTS -64,12,32
	PFPNTS 0,0,0
	PFPNTS 16,16,32		;4
	PFPNTS 48,16,32
	PFPNTS 64,0,0
	PFPNTS 96,32,32
	PFPNTS 112,8,16		;8
	PFPNTS 104,16,24
	PFPNTS 112,24,32
	PFPNTS 128,0,0
	PFPNTS -48,4,16		;12
	PFPNTS -64,0,0
	PFPNTS 92,16,16
	PFPNTS 104,0,0
;
SCAPE2:	PFPNTS -128,0,0		;0
	PFPNTS -88,8,32
	PFPNTS -64,0,16
	PFPNTS -32,24,32
	PFPNTS -16,0,32		;4
PFPNT0:	PFPNTS 0,0,32
	PFPNTS 16,0,32
	PFPNTS 32,16,32
	PFPNTS 48,16,32		;8
	PFPNTS 64,24,48
	PFPNTS 88,0,0
	PFPNTS 72,16,32
	PFPNTS 96,32,48		;12
	PFPNTS 128,0,0
	PFPNTS -96,0,0
	PFPNTS -40,0,0
	PFPNTS 40,0,0		;16
	PFPNTS 56,8,16
;
SCAPE3:	PFPNTS -128,0,0		;0
	PFPNTS -112,16,32
	PFPNTS -96,16,32
	PFPNTS -64,32,48
	PFPNTS -32,24,32	;4
	PFPNTS 0,0,0
	PFPNTS 16,24,16
	PFPNTS 64,0,32
	PFPNTS 96,0,32		;8
	PFPNTS 104,16,16
	PFPNTS 128,0,0
	PFPNTS -96,0,0
	PFPNTS -56,16,32	;12
	PFPNTS 8,0,0
	PFPNTS 24,8,8
;
SSEGS:	.WORD SCAPE0,SCAPE1,SCAPE2,SCAPE3
;
.SSEG:	.BYTE SCAPE1-SCAPE0-2,SCAPE2-SCAPE1-2
	.BYTE SCAPE3-SCAPE2-2,SSEGS-SCAPE3-2
;
BULLT0:	BBPNTS 6,0
	BBPNTS -6,0
	BBPNTS 0,-6
	BBPNTS 0,6
;
BULLT1:	BBPNTS 4,4
	BBPNTS -4,-4
	BBPNTS 4,-4
	BBPNTS -4,4
;
BULLDE:	BV 0
	VV 1
	VV 2
	VV 3
	VV 0
	VV 2
	BV 1
	VV 3
	ENDDB

PFOCOL:	PFCOL -104,20
	PFCOL -88,32
	PFCOL 48,0
	PFCOL 64,12
	PFCOL 64,0
	PFCOL 80,12
	PFCOL -128,0
	PFCOL -112,12
	PFCOL 16,12
	PFCOL 32,24
	PFCOL 32,12
	PFCOL 48,24
	PFCOL -16,0
	PFCOL 0,12
	PFCOL 0,0
	PFCOL 16,12
	PFCOL 32,12
	PFCOL 48,24
	PFCOL -112,12
	PFCOL -96,24
	PFCOL 64,0
	PFCOL 80,12
	PFCOL 80,0
	PFCOL 96,12
;
VCTRMP:	BV 0
	ENDDB
	.END
                                                                                                                                                                                                                                                      