	.TITLE RBARON-RED BARON (226XX)
	.SBTTL ***************************
	.SBTTL *
	.SBTTL *PROGRAMMER - RICH MOORE
	.SBTTL *CHECKER 
	.SBTTL * ITS ALL DOWN HILL AFTER THE 
	.SBTTL * FIRST QUARTER CENTURY......
	.SBTTL *
	.SBTTL ***************************
	.LIST MEB
	.NLIST BYT

	.LABL=0

	.MACRO .4WORD .A,.B,.C,.D,.E,.F,.G,.H,.I,.J,.K
	.WORD .A*4,.B*4,.C*4,.D*4,.E*4,.F*4,.G*4
	.WORD .H*4,.I*4,.J*4,.K*4
	.ENDM
	
	.MACRO .3WORD .A,.B,.C,.D
	.WORD	3*.A,3*.B,3*.C,3*.D
	.ENDM


	.MACRO .2WORD .A,.B,.C,.D
	.WORD 2*.A,2*.B,2*.C,2*.D
	.ENDM

	.MACRO POINTP .X,.Y,.Z
	.BYTE .Z,.X*2,.Y*4
	.ENDM

	.MACRO PFCOL .X,.Y
	.WORD .X*8,.Y*8
	.ENDM

	.MACRO MATSTT
	LABL \.LABL
	.ENDM
	.MACRO LABL OP
	STAT'OP:	BIT A,MATHST
	BMI STAT'OP
	.LABL=.LABL+1
	.ENDM
	
	.MACRO LAH .X
	LDA I,0
	.ENABL M68
	.=.-1
	.WORD .X
	.=.-1
	.DSABL M68
	.ENDM

	.MACRO LXL .X
	LDX I,0
	.=.-1
	.WORD .X
	.=.-1
	.ENDM

	.MACRO LYL .X
	LDY I,0
	.=.-1
	.WORD .X
	.=.-1
	.ENDM

	.MACRO SOUND .X
	LDY I,.X*8+7
	.ENDM
	.PAGE
	.SBTTL ZERO PAGE
	.RADIX 16
	.ASECT
	.=0000
S.FLAG:	.BLKB 1			;PROGRAM EXECUTION STATE FLAG
BUFFER:	.BLKB 1			;VG BUFFER FLAG
F.CNTR:	.BLKB 1			;VG FRAME TIMER
C.CNTR:	.BLKB 1			;CALCULATION FRAME TIMER
CALFLG:	.BLKB 1			;CALCULATION FRAME SYNC
RAMPTR:	.BLKB 2			;VG RAM POINTER (DESTINATION)
VGLIST	=RAMPTR
POINTR:	.BLKB 2			;STRING /POINT DB POINTER

COPYPT:	.BLKB 2			;COPYRIGHT VGRAM POINTER

XPOS:	.BLKB 4			;X POSITION 
YPOS	=XPOS+2			;Y POSITION
UNIV4X:	.BLKB 4			;UNIVERSE X (* 4)
I4YPOS	=UNIV4X+2		;PLAYER Y POSITION * 4
XCOMP:	.BLKB 4			;X VCTR COMPONENT
YCOMP	=XCOMP+2		;Y COMPONENT
PLOBDB:	.BLKB 1C*3		;PLANE STATUS
P.1ST	=PLOBDB			;DRONE 1
P.2ST	=P.1ST+1C		;DRONE 2
PLSTAT	=P.2ST+1C		;PLANE STATUS
BLOBJ	=PLOBDB			;BLIMP DB
LETR	=PLOBDB			;HIGH SCORE TABLE VARIABLES
OBJECT:	.BLKB 8
O.DPTH	=OBJECT+4
S.XFLG:	.BLKB 1			;SHOT X (GUN) FLAG
TEMP1:	.BLKB 2			;TEMPS
TEMP2:	.BLKB 2
TEMP3:	.BLKB 9
DELTA	=TEMP3
MIN	=TEMP3+4
MAX	=TEMP3+6
TEMP4:	.BLKB 2
	
FLAG:	.BLKB 2			;PLANE UPDATE FLAG
I.TEMP:	.BLKB 1			;INTERRUPT TEMP(NMI)
SAVY:	.BLKB 3			;Y OFFSET SAVE
SAVX:	.BLKB 3			;X OFFSET SAVE
XPOINT:	.BLKB 4			;PREVIOUS X ENDPOINT
YPOINT	=XPOINT+2		;PREVIOUS Y ENDPOINT
DRNFLG:	.BLKB 1			;DRONE PICTURE FLAG
N.OBJ:	.BLKB 1			;# OF PLANE MO'S @ EACH RUN
INTFLG:	.BLKB 1			;INTERRUPT (FRAME) FLAG
INTCNT:	.BLKB 1			;INTERRUPT COUNTER
V.BRIT:	.BLKB 1			;VCTR INTENSITY (IN DECMAP)
VGBRIT:	.BLKB 1			;VCTR BRIGHTNESS
VGSIZE:	.BLKB 1			;VCTR SIZE
PLVALU:	.BLKB 1			;PLANE VALUE (BASED ON DEPTH)* VALFRC/10
BNTIME:	.BLKB 1			;BONUS SCORE TIMER
SCRTAB:	.BLKB 4			;SCORE TABLE
OBJKLD:	.BLKB 2			;OBJECTS KILLED COUNT
BEFLAG:	.BLKB 1			;PLANE BEHIND FLAG
N.PLNZ:	.BLKB 1			;NUMBER OF PLANES COUNT
VALFRC:	.BLKB 2			;VALUE FRACTION
VALMIN	=VALFRC+1		;PLANE VALUE MINIMUM
EXLIFE:	.BLKB 1			;EXTRA LIVES FLAG
GMLEVL:	.BLKB 1			;GAME LEVEL (DIFFICULTY)
GRMODE:	.BLKB 1			;GROUND MODE (D7=GROUND)
				;		(D6=PLANE DISABLE)
ST.LED:	.BLKB 1			;START LED STATUS (D3)
$BCCNT:	.BLKB 1			;BONUS COIN COUNT
$BC:	.BLKB 1			;BONUS COIN(S)
SCORE:	.BLKB 2			;PLAYER SCORE
FRAME:	.BLKB 1			;FRAME COUNTER
SECCNT:	.BLKB 2			;GAME TIME COUNTER
EAWRTE:	.BLKB 1			;EA WRITE FLAG
SCRTIM:	.BLKB 1			;SCORE ITERATION TIMER
LIVES:	.BLKB 1			;PLAYERS LIVES
OPTION:	.BLKB 1			;OPTION STATES
GAMODE:	.BLKB 1			;GAME MODE
				;0000XXXX = ATTRACT
				;0100XXXX = RTP
				;1100XXXX = PLAY
				;0X001011 = 2 COIN MIN ( W/ 1 COIN PRESENT )
				;0X000011 = DISPLAY HSTD
				;XX000111 = HST INPUT MODE
				;00010011 = ATTRACT BANNER
SHMODE:	.BLKB 1			;SHELL MODE
				;(D7=1 2X)
STARTF:	.BLKB 1			;START FLAG(FOR 2 PLAY MIN)
MODECT:	.BLKB 1			;MODE COUNT
GRNDCT:	.BLKB 1			;GROUND COUNT
GRDSP:	.BLKB 1			;GROUND OBJECT DISPLAYCOUNT
NEWCT:	.BLKB 1			;GROUND MODE COUNTER
GTIMER:	.BLKB 2			;GROUND MODE GROBJ TIMEOUT
				;+1 PLANE EXPLOSION
TIMER:	.BLKB 2			;EVENT TIMER
PLDELX:	.BLKB 1			;PLAYER DELTA X
PLDELY:	.BLKB 2			;PLAYER DELTA Y (LSB,MSB)
PFROTN:	.BLKB 2			;HORIZON ROTATION (XXX XQQA AAAA AA.FF)
PFXSCR:	.BLKB 2			;HORIZON POSITION (X LSB,MSB)
DRNSET:	.BLKB 1			;DRONE SELECT
DRNSFL:	.BLKB 1			;DRONE GROWTH FLAG
GREND:	.BLKB 1			;GROUND EOL FLAG
GMEND0:	.BLKB 2			;END LIFE FLAGS (D7=RETURN, D6=RP)
GMEND1	=GMEND0+1		;(D7=EOL
B.HOLE:	.BLKB 1			;BULLET POSITION (@EOL)
EOGTMR:	.BLKB 1			;EOL TIMER
GUN.ST:	.BLKB 1			;GUN OVER HEATED STATUS
SPIRAL:	.BLKB 1			;SPIRAL SOUND STATUS
EXCNTR:	.BLKB 1			;EXPLOSION SHOUND COUNTER
EXPVAL:	.BLKB 1			;EXPLOSION SOUND VALUE
S.VAL:	.BLKB 1			;SHELL SOUND COUNTER
MESTM0:	.BLKB 3			;MESSAGE TIMER (BONUS LIFE)
MESTM1	=MESTM0+1		;MESSAGE TIMER (300 POINTS)
MESTM2	=MESTM1+1		;MESSAGE TIMER (BEHIND YOU)
HSTMER:	.BLKB 1			;HSTB DISPLAY TIMER
ENSIDE:	.BLKB 1			;ENEMY PLANE X ENTER (EXIT) SIDE (D7)
	
POLYL:	.BLKB 2			;RANDOM NUMBERS
POLYH	=POLYL+1
RESULT:	.BLKB 4			;MM RESULT
NUMB1	=RESULT
POTMIN:	.BLKB 2			;POT MINIMUM
POTVAL:	.BLKB 2			;POT VALUE
PTRNGE:	.BLKB 2			;POT RANGE
POTUSE:	.BLKB 2			;POT USE
	
P.CNTR:	.BLKB 1			;POT SELECT COUNTER
POTFLG:	.BLKB 1			;POT FLAG
PLYPRP:	.BLKB 1			;PLAYER PROP OFFSET
PROP.F:	.BLKB 1			;PLANE PROP PICTURE OFFSET
P.LTCH:	.BLKB 1			;POT LATCH STATE
SWSTAT:	.BLKB 1			;SWITCH STATUS
FR.DB:	.BLKB 1			;FIRE SWITCH DEBOUNCE
LANG:	.BLKB 1			;LANGUAGE
	
;COIN ROUTINE VARIABLES

$CMODE:	.BLKB 1			;COIN MODES
$CCTIM:	.BLKB 3			;COIN CNTR TIMER (D7 HIGH TRUE FOR COUNTER) LEFT COUNTER
				;+1 MIDDLE COUNTER
				;+2 RIGHT COUNTER
$PSTSL:	.BLKB 3			;POST COIN SLAM
$LMTIM:	.BLKB 1			;PRE SLAM PROTECTION
$CNCT:	.BLKB 1
$$CRDT:	.BLKB 1			;CREDITS
$CNSTT:	.BLKB 3			;TIMERS FOR COIN DETECTION
$INTCT	=INTCNT			;INT CNTR LONG STRING TIMER
EASRCE:	.BLKB 2			;EA SOURCE POINTER
EAX:	.BLKB 1			;EA ACCESS INDEX
EABC:	.BLKB 1			;BYTE COUNTER
EAFLG:	.BLKB 1			;EA ACTIVITY FLAG
EACS:	.BLKB 1			;CHECKSUM
ATGVAL:	.BLKB 2			;PLANE DISTANCE SOUND VALUE

	.SBTTL PAGE ONE,TWO & THREE
	.=0100
GRSHLS:	.BLKB 5*0E		;GROUND SHELLS (5 SHELLS @ 14. BYTES /)
EAFILL:	.BLKB 2			;EA WRITE FILLER
PRCTIM:	.BLKB 3			;PERCENTAGING TIME
	.BLKB 2			;EA WRITE FILLER
GCOUNT:	.BLKB 8			;# OF GAMES COUNT
GTIME	=GCOUNT+3		;SUM OF GAME TIMES
HSCRES:	.BLKB 5*7		;HIGH SCORES/INITIALS
INITL	=HSCRES+2		;INITIALS
PKYCNT:	.BLKB 2			;POKEY PROTECT COUNTERS
STATUS:	.BLKB 2			;STATUS BYTE ( COPYRIGHT )
				;+1 POKEY PROTECT

SLAMSN:	.BLKB 1			;SLAM SOUND
	.=0200

DB.TRP:	.BLKB 100		;POINT DB (TRANSLATE,ROTATE,PROJECT)


	.=0300

L.PFOB	=11.			;PLAYFIELD OBJECT DATA BASE LENGTH

PFOBJ:	.BLKB L.PFOB*4		;PF OBJECT DB (4 OBJECTS)
SHELLS:	.BLKB 11*8		;SHELL DB (17. SHELLS @ 8 BYTES/)
POINT:	.BLKB 8			;POINTER OFFSET INTO DATA TABLES (IF 0 NOT ACTIVE)
CURRENT:.BLKB 8			;OUTPUT VALUE
FRAMES:	.BLKB 8			;FRAMES UNTIL NEXT CHANGE
COUNT:	.BLKB 8			;COUNT OF TOTAL CHANGES
ATGDEL:	.BLKB 2			;PLANE DISTANCE SOUND DELTA
PKYRAN:	.BLKB 4			;POKY RANDOM
EACNT:	.BLKB 1			;EA ROM COUNT ( MAX )
EABAD:	.BLKB 1			;BAD ENTRY FLAG
BULPOS:	.BLKB 4			;BULLET POSITION
PLYRDL:	.BLKB 4			;PLAYER DELTAS
PFSNDF:	.BLKB 1			;PF SOUND FLAG ( OBJECT # )
PRPDEL:	.BLKB 4			;DELTA PERCENT PLANE
PRMDEL	=PRPDEL+2		;DELTA PERCENT PF OBJECTS (MOUNTAINS)



	.SBTTL	DATA STRUCTURE FORMATS
	.IF EQ,1
PLOBDB	PLANE POSITION		X LSB
+1	"			X MSB
+2	"			Y LSB
+3	"			Y MSB
+4	"			Z LSB PICTURE SIZE
+5	"			Z MSB
+6	STATUS			A E C R @ ED P F
	( A ACTIVE, E EXPLOSION, C CENTER CROSS, R ROTATED , @ SHOOTS,
	ED DRONE EXPLOSION, P PARALLEL DRONE, F FREE DRONE )
+7	STATUS COUNTER
+8	DISPLAY POSITION	X LSB
+9				X MSB
+A				Y LSB
+B				Y MSB
+C	DELTA X LSB
+D		MSB
+E	DELTA Y LSB
+F		MSB
+10	DELTA Z	LSB
+11		MSB
+12	Z ANGLE (X/Y) LSB
+13		      MSB
+14	Y ANGLE (X/Z) LSB
+15		      MSB
+16	X ANGLE (X/Z) LSB
+17		      MSB
+18	OBJECT TYPE
+19	POSITION Z    LSB
+1A		      MSB
+1B	DELTA POS Z


BLOBJ	BLIMP POSITION		X LSB
+1	"			X MSB
+2	"			Y LSB
+3	"			Y MSB
+4	"			Z LSB
+5	"			Z MSB
+6	STATUS			A E 0 0  0 0 0 0
+7	STATUS COUNTER		(EXPLOSION)
+8	DISPLAY POSITION	X LSB
+9				X MSB
+A				Y LSB
+B				Y MSB
+C	DELTA			X LSB
+D				X MSB
+E
+F
+10
+11
+12
+13
+14	Y ANGLE (X/Z)	LSB
+15			MSB
+16
+17
+18	D7 = BLIMP
+19
+1A
+1B


SHELLS	SHELL POSITION	X LSB
+1			X MSB
+2			Y LSB
+3			Y MSB
+4			Z LSB
+5			Z MSG
+6	DELTA Y
+7	D7=ACTIVE


GRSHLS	GROUND SHELL POSITION	X LSB
+1				X MSB
+2				Y LSB
+3				Y MSB
+4				Z LSB
+5	D7=ACTIVE		Z MSB
+6	X DELTA MIDDLE
+7		MSB
+8	Y DELTA MIDDLE
+9		MSB
+A	X DELTA LSB
+B	X FRACTIONAL POS
+C	Y DELTA LSB
+D	Y FRACTIONAL POS


PFOBJ	PF MOUNTAIN POSITION	X LSB
+1				X MSB
+2	DISPLAY DEPTH		X LSB
+3	"			X MSB
+4	"			Y LSB
+5	"			Y MSB
+6	STATUS			A X X X MTN#---
	( A ACTIVE,
	MTN# MOUNTAIN DB OFFSET )
+7	STATUS			B X X X OBJGRP#
	( B BLANKED,
	OBJGRP# OBJECT GROUP OFFSET)
+8	GROUND OBJECT RIGHT STATUS AE X X CNTR 
+9	"	      CENTER	"
+A	"	      LEFT	"


	.ENDC
	.PAGE
	.SBTTL ADDRESSES & CONSTANTS
;
; DEFINITIONS
;
VGMSGA	=316E			;ALPHANUMERIC JSRL TABLE
JSCHR0	=0A84E			;0 CHAR JSRL
MSGS	=VGMSGA+50
ENGMSG	=MSGS+8
FRNMSG	=ENGMSG+02E
SPNMSG	=FRNMSG+02E
GRMMSG	=SPNMSG+02E
CIRCLE	=GRMMSG+02E
HALF	=CIRCLE+16		;1/2 CHARACTER
NOREST	=HALF+10
RCOPYR	=NOREST+12		;ATARI COPYRIGHT MESSAGE
PLY2MN	=RCOPYR+036		;2 PLAYS MINIMUM MESSAGE X LOCATION
CMMESS	=PLY2MN+4
HATCH	=CMMESS+0C
;
;PICTURE DBS' ADDRESSES
;
SINE	=3800			;SINE TABLE
QUADSN	=SINE+082		;QUADRANT SIGNS
PROPS	=QUADSN+4		;PLANE PROP PICTURES
.PROPS	=PROPS+6		;PLANE PROP BUFFER ADDRS (VG)
PFOPOS	=.PROPS+0C		;PF OBJECT SEGMENT START POINT
H.MAP	=PFOPOS+63
SCMAP	=H.MAP+6A		;PF OBJECT DECODE POINTERS
SCLMAP	=SCMAP+40		;PF OBJECT HIGHLIGHT DECODE POINTERS
DB.MAP	=SCLMAP+20		;PLANE DECODE LIST (BACK FACES)
DB.MAR	=DB.MAP+018		;PLANE DECODE LIST (FRONT FACES)
DB.LNS	=DB.MAR+02C		;PLANE DECODE LIST (WING STRUTS)
DBPROP	=DB.LNS+12		;PLANE PROP POINTS (3 ROTATIONS)
LNEPRP	=DBPROP+13D		;PLAYER PROP PICTURES(JSRL TABLE)
COLLD	=LNEPRP+0E		;PLANE COLLISION WINDOW(POINTP FORMAT)

PIECE0	=COLLD+0C		;PLANE EXPLOSION PIECES
PIECE1	=PIECE0+2A
PIECE2	=PIECE1+45
PIECE3	=PIECE2+1B
PLPCDE	=PIECE3+6E		;PLANE EXPL PIECE DECODE POINTERS
PLPCLN	=PLPCDE+8		;PLANE EXPL PIECE OFFSET (POINTP FORMAT)
PLPCL2	=PLPCLN+4		;PLANE EXPL PIECE OFFSET (DB.TRP FORMAT)
DPCTBL	=PLPCL2+0B0		;DRONE EXPL PIECE JSRL POINTERS
DPCDEL	=DPCTBL+0A		;DRONE EXPL VCTR PARAMS
SEQUNA	=DPCDEL+52		;BULLET HOLES RIGHT
SEQUNB	=SEQUNA+032		;BULLET HOLES LEFT
LPLANE	=SEQUNB+0C
EXCRCL	=LPLANE+32		;PF EXPL CIRCLE (VCTR'S W/RTSL)
STAR0	=EXCRCL+36
STAR1	=STAR0+1E
DESTR0	=STAR1+24
DESTR1	=DESTR0+0C
BLIMP	=DESTR1+0E
DBLIMP	=BLIMP+6C
PFODEC	=DBLIMP+4F
PFLOB	=PFODEC+82
.PFLOB	=PFLOB+8
PFOFFS	=.PFLOB+4
.DBPRP	=2A
.COLLD	=0C
.BLMP	=69
.STAR0	=1B
.STAR1	=21
;
;PF OBJECT EQUATES
;
N.PFOB	=3*L.PFOB		;4 PLAYFIELD OBJECTS
P.OBZI	=7F00			;PF OBJECT INITIAL Z
P.OBDZ	=180			;PF OBJECT Y DELTA Z (WHILE ON HORIZON)
P.MAXZ	=1001			;PF OBJECT MAX Z (WHILE ON HORIZON)
PLYMAX	=180*4			;PF HORIZON LINE MAX Y
PLYMIN	=8*4			;PF HORIZON LINE MIN Y
PFPLOW	=80*4			;PLANE MIN ALTITUDE (ABOVE HORIZON)
PFPHI	=140*4			;PLANE MAX ALTITUDE
PF.BRT	=060			;PF HORIZON LINE INTENSITY
HORZ	=1000			;HORIZON DEPTH
PF.QTX	=512.*4			;SEGMENT(X)
PF.SGX	=256.*4			;1/2 SEGMENT(X)
PF.XZ	=1000			;PF OBJECT X DEPTH (WHILE ON HORIZON)
.PFOBJ	=0D0			;PF OBJECT INTENSITY
HORIZN	=40			;HORIZON OFFSET ( Y AXIS)
PCDX	=0C1			;PF CD X MIN
PCDY	=60			;PF CD Y MAX
;
;MOTION OBJECT (PLANE) EQUATES
;
L.OBJ	=28.			;MOTION OBJECT DB=28. BYTES
N.MOB	=2*L.OBJ		;3 MOTION OBJECTS (1 PLANE, 2 DRONES)
P.INDP	=1080			;INITIAL PLANE DEPTH
ACCEL	=30
DRINZ	=1600			;DRONE INITIAL Z
DROFFZ	=1600			;DRONE DISPLAY OFFSET Z
P.MNDM	=11			;PLANE MAX DEPTH*(100) (FOR FLY BY)
P.MNDP	=140			;PLANE MIN. DEPTH
MAXDEL	=-180			;MAX PLANE DELTA (ENTRY)
P.MAXR	=1FF			;90 DEGREE MAX ROTATION
WO.CNT	=5			;5 FRAMES BETWEEN MO
WO.RTN	=10			;W/O RETURNING
WO.END	=80			;W/O @ EOG
.MOTOBJ	=0F0			;MO INTENSITY (MAX)
;
;MO EXPLOSION EQUATES
;
.EXPL1	=6			;6 FRAMES W/FALL
.EXPL2	=12			;12 FRAMES TOTAL SEQUENCE
EX.ACY	=-20			;PLANE FALL ACCELERATE Y (GRAVITY)
.EXPSY	=40			;Y OFFSET
.EXPSX	=10			;X OFFSET
.EXSCP	=-80			;HORIZON SCROLL @ PLAYER DEATH
;
;SHELL EQUATES
;
L.SHL	=8			;SHELL DB =8 BYTES
N.SHL	=12.*L.SHL		;13 SHELLS
GRLSHL	=0E			;GROUND SHELL DB = 14. BYTES
NGRSHL	=GRLSHL*4		;5 GROUND SHELLS
S.MAXZ	=19			;SHELL MAX Z (* 100)
S.DPTH	=100			;INITIAL SHELL DEPTH (Z)
S.INTX	=30			;INITIAL SHELL X POSITION (PLAYER)
S.INTY	=-20
PSHLDY	=0			;PLAYER SHELLS DELTA Y
E.INTY	=30
ESHLDY	=-20
;
;GAME PLAY EQUATES
;
.STGME	=0C0			;START GAME STATUS
.STRTP	=40			;RTP STATUS
.LEVLS	=5			;5 GAME LEVELS
.TIME1	=10			;EOL COUNTS
.TIME2	=1C
STINIT	=18			;SCORE 24.*4 MS.COUNT(SOUND)
DRNPNT	=30.			;300 POINTS/DRONE (OR UNLIT PLANE)
AUDCV	=0

	.SBTTL I/O AND MEMORY ADDRESSES
;
;I/O EQUATES
;
	
VGRAM	=2000			;VECTOR GEN RAM
VGROM	=3000			;VECTOR GEN ROM
VGON	=1200			;VECTOR GEN START ADDR
WATCH	=1400			;WATCHDOG
VGRST	=1600			;VECTOR GEN RESET ADDR
FIRE	=1802			;D7=1 (FIRE)
				;D6=0 (START)
MATHST	=1800			;D7=0 (DONE) =1 (BUSY) MATH BOX
MBSTAT	=MATHST
M.PRDL	=1804			;MATH RESULT LSB
YLOW	=M.PRDL
M.PRDM	=1806			;MATH RESULT MSB
YHIGH	=M.PRDM
CRSHSN	=1808			;D0=POT SELECT
				;D1=SPIRAL
				;D2=SHOT SOUND
				;D3=NOT (START LED)
				;D4-D7=CRASH SOUND
NSERST	=180A			;NOISE RESET D7-D0 AS FOR CRSHSN
POKEY	=1810			;BASE OF POKEY ADDRESSES
POTIN	=POKEY+8		;POT READING D7-D0
TESTSW	=800			;TEST SW D0=RIGHT COIN
				;	 D1=CENTER COIN
				;	 D2=LEFT COIN
				;   	 D3=SLAM
				;	 D4=SELF TEST
				;	 D5=DIAGNOSTIC
				;	 D6=VG HALT
				;	 D7=3 KHZ
OPT0	=0A00			;OPTIONS
				;D0,D1=COIN MODES
				;D2=MECH 2 MULT
				;D3,D4=MECH 3 MULT
				;D5,D6,D7=BONUS COIN MODES
OPT1	=0C00			;OPTIONS
				;D1,D0=FOREIGN LANGUAGE
				;D3,D2=BONUS LIFE SCORE
				;D5,D4=# OF LIVES/GAME
				;D6 = 2 GAME MIN
				;D7 = PERCENTAGING
COINCT	=1000			;COIN COUNTERS D0=RIGHT
				;D1=CENTER
				;D2=LEFT
				;D3 =
				;D4 = VID INVERT X
				;D5 = VID INVERT Y
EACTL	=180C			;EA ROM CONTROL
EACK	=1			;CLOCK BIT
EAC1	=4			;C1 (INVERTED TO)
EAC2	=2			;C2
EACE	=8			;CHIP SELECT
				;C1,C2 FUNCTION
				;0 0 READ MODE
				;0 1 UNDEFINED
				;1 0 WRITE MODE
				;1 1 ERASE MODE
EADAL	=1820			;START OF EA ADDRESSES
EAIN	=1820			;READ ADDR
MATH	=1860			;START OF MATH BOX ADDRESS
MBOXIN	=MATH
;
;DIVIDE HARDWARE ADDRESSES
;
D.NMLL	=MATH+0D		;DIVIDEND (LOW LSB)
D.NMLH	=MATH+0E		;
D.NMHL	=MATH+0F		;
D.NMHH	=MATH+10		;	  (HIGH MSB)
DD.DML	=MATH+15		;DIVISOR (LSB)
DD.DMM	=MATH+16		;	 (MSB)
DD.NL	=MATH+0C		;DIVIDE N (# OF BITS)
D.SZXD	=MATH+14		;START DIVIDE
D.NBIT	=0C			;12. BIT DIVIDE
D.DYPL	=MATH+18		;DISPLAY LOW 16. BITS OF QUOTIENT
D.DYPH	=MATH+19		;DISPLAY TOP 16. BITS OF QUOTIENT
;
;MATRIX MULTIPLY ADDRESS
;
MM.AL	=MATH+0			;COSINE (LSB)
MM.AM	=MATH+1			;	(MSB)
MM.BL	=MATH+2			;SINE (LSB)
MM.BM	=MATH+3			;     (MSB)
MM.EL	=MATH+4			;X TRANSLATE (LSB)
MM.EM	=MATH+5			;	     (MSB)
MM.FL	=MATH+6			;Y TRANSLATE (LSB)
MM.FM	=MATH+7			;	     (MSB)
MM.XL	=MATH+8			;X POINT (LSB)
MM.XM	=MATH+9			;	 (MSB)
MM.YL	=MATH+0A		;Y POINT (LSB)
MM.YM	=MATH+0B		;        (MSB) (START X TERM)
M.SYM	=MATH+12
;
;
;
				;(START Y TERM)
BNRBIT	=10			;BANNER DISLAY BIT
PS.BIT	=1			;POT SELECT BIT D0
EX.MSK	=0F0			;EXPLOSION BITS D7-D4
SH.BIT	=4			;SHOT BIT D2
CM.MSK	=0FF			;COIN MODE MASK
CC.BIT	=1			;RIGHT COIN COUNTER BIT
ST.BIT	=10			;SELF TEST SWITCH BIT
$LAM	=TESTSW			;SLAM ADDRESS
$LMBIT	=8			;SLAM BIT
$COINA	=TESTSW			;COIN ADDRESS
	
CALCNT	=18
BNRCNT	=0C			;BANNER DISPLAY CALCULATION COUNT


;
;RAM CELLS
;
	.GLOBB RAMPTR,POINTR,EASRCE
	.GLOBB TEMP1,TEMP2,TEMP3,TEMP4
	.GLOBB SWSTAT,OBJECT,XCOMP,YCOMP
	.GLOBB LANG,GAMODE,TIMER
	.GLOBB UNIV4X,XPOS,XPOINT,YPOINT
	.GLOBB SAVY,SAVX,RESULT,PFROTN
	.GLOBB HORIZN,I4YPOS,O.DPTH,NUMB1
	
	.GLOBB VGSIZE,XCOMP,VGBRIT,VGLIST,VGSTAT
;
;COIN ROUTINE RAM CELLS & ADDRESS
;
	.GLOBB $CMODE,$INTCT,$COINA,$CCTIM,$CNCT
	.GLOBB $LAM,$LMBIT,$LMTIME,$CNSTT,$PSTSL
	.GLOBB COINCT,$$CRDT,$BCCNT,$BC
	
;
;DYNAMIC VG ROUTINE ENTRY POINTS (&ALPHA JSRL'S)
;
	.GLOBL VGVCTR,VGDOT,VGADD,VGADD2,VGHEX
	.GLOBL VGHALT,VGRTSL,VGSCAL,VGVTR
	.GLOBL VGJSRL,VGJMPL,VGHEXZ,VGSTAT,VGCNTR
	.GLOBL VGVTR1,VGSCA1,VGVTR2
	.GLOBL VGMSGA
	
;
;POT READING RAM CELLS
;
	.GLOBB POTVAL,POTUSE,POTMIN,PTRNGE
	.GLOBB P.CNTR,POTFLG
	
;
;INTERRUPT (TIMING) RAM CELLS & SOUND STATUS RAM CELLS
;
	.GLOBB INTFLG,INTCNT,S.FLAG,FRAME,F.CNTR
	.GLOBB C.CNTR,CALFLG,CALCNT,SECCNT
	.GLOBB I.TEMP,P.LTCH,SPIRAL
	
	.GLOBB EXPVAL,S.VAL,ST.LED
;
;STRING ADDRESSES
;
	.GLOBL MSGS
	.GLOBL HATCH,SSEGS,.SSEG
	.GLOBL BULLT0,BULLT1,BULLDE
	.GLOBL PFOCOL,VCTRMP,BANNER
	.GLOBL .BNNR,PFPNT0,PLNDB
;
;HARDWARE ADDRESS
;
	.GLOBL VGON,VGRAM,VGROM,OPT0,OPT1,FIRE
	.GLOBL WATCH,TESTSW,POTIN
	
	.GLOBL CRSHSN,NSERST
	.GLOBL VGRST,POKEY
	.GLOBL MBOXIN,MBSTAT,YLOW,YHIGH
	.GLOBL MATH,MATHST
	.GLOBL DD.DML,DD.DMM,D.NMHL,D.NMHH
	.GLOBL D.SZXD,MM.XL,MM.XM,MM.YL
	.GLOBL MM.YM,MM.EL,MM.EM,MM.FL
	.GLOBL MM.FM,M.SYM
;
;I/O BIT VALUES
;
	.GLOBL PS.BIT,EX.MSK,SH.BIT,AUDCV
	.GLOBL CC.BIT,ST.BIT,$LMBIT,CM.MSK
	.GLOBL BNRBIT,BNRCNT,SLAMSN
;
;POKEY SOUND ROUTINE RAM CELLS
;
	.GLOBB COUNT,POINT,CURRENT,FRAMES
;
;EXTERNAL ENTRY POINTS
;
	.GLOBL SNDON,LOADRAM,DIGTYS,DIGT1S
	.GLOBL PWRON,MESSAGE,DIGITS,POSITH
	.GLOBL PROJECT,SETBM,PLACBM,SETGRS
	.GLOBL POSITP,EAUPD,STEAROM
	.GLOBL PLNABZ,ROTABZ,ZAXIS,YAXIS
	.GLOBL XAXIS,D.LOOP,DCMPA0,DECMAP
	.GLOBL DECODE,DECIMAL
;
;INTERNAL ENTRY POINTS
;
	.GLOBL START,PLPROP,SCOREM,DPABS
	.GLOBL TRIG,DCMPA0,MRSULT
;
;DISPLAY RAM CELLS
;
	.GLOBL DB.TRP,HSCRES
	.GLOBL EACNT,EABAD,GCOUNT,GTIME
	.GLOBL PRCTIM
	.GLOBB EAX,EABC,EAFLG,EACS
;
;CHECKSUMS
;
	.GLOBL CHKSM2,CHKSM3,CHKSM4,CHKSM5
	.GLOBL CHKSM6,CHKSM7
	.TITLE	RBARON - RED BARON (226XX)
	.=4800
	
	.SBTTL MAIN LOOP
;
;
;

	JMP PWRON		;POWER ON

;
	.SBTTL CHKSUM 2 (4800-4FFF)[FF]
CHKSM2:	.BYTE 05
;
START:	LDA EAFLG
	BNE 10$			;BUSY
	STA EAX
	STA EABC
	LDA I,EAFILL&0FF
	STA EASRCE
	LDA I,EAFILL/100
	STA EASRCE+1		;EA SOURCE = HIGH SCORES/INITIALS
	LDA I,6*6
	STA A,EACNT		;MAX COUNT
	LDA I,20
	STA EAFLG		;READ
10$:	JSR GMINIT		;INITIALIZE PF
	LDA I,20		;HALT FOR FIRST FRAME
	STA A,VGRAM+3
	LDA I,1
	STA A,VGRAM		;INITIALIZE TO BUFFER 0
	LDA I,0E0
	STA A,VGRAM+1
	STA BUFFER		;INITIALIZE BUFFER FLAG (D7 SET)
	LDA I,8
	STA ST.LED		;INITIALIZE START LED OFF
MAIN:	DEC S.FLAG		;<>0 (SET CALCULATION LOOP FLAG)
	LDA A,OPT1
	EOR I,0FF
	STA OPTION		;SET OPTION
	LDA A,OPT0
	EOR I,0FF		;SET COIN MODES
	STA $CMODE		;SET COIN OPTIONS
	JSR EAUPD
	JSR SETDIV
	JSR CREDIT		;CHECK RTP MODE
	JSR STRGME		;START GAME
	LDA GMEND1
	BMI 10$			;END OF LIFE
	LDA GAMODE
	BPL 5$			;ONLY IN PLAY
	JSR POTSCL		;SCALE POT VALUES
	JSR NEWSHL		;GENERATE SHELLS
5$:	LDA GAMODE
	LSR
	BCS 20$			;FREEZE
	BIT GREND
	BVS 20$			;PLAYER RAN INTO GROUND
	JSR PFMOTN		;UPDATE PLAYFIELD
	BIT GRMODE
	BVS 20$			;GROUND SEQUENCE
	JSR NWPLNE		;GENERATE MOTION OBJECTS
10$:	JSR PLMOTN		;UPDATE MOTION OBJECTS (PLANES & DRONES)
20$:	LDA I,VGRAM&0FF00/100	;INITIALIZE RAM POINTER
	LDY I,VGRAM+2&0FF
	BIT BUFFER		;BUFFER # ?
	BPL 25$			; # 1 ( BECOMES 0 )
	LDA I,VGRAM+802&0FF00/100	;ELSE WILL BE BUFFER 1
25$:	STA RAMPTR+1
	STY RAMPTR
	LDA I,NOREST&0FF00/100
	LDY I,NOREST&0FF
	LDX I,12
	JSR LOADRAM
	JSR PFTRIG		;SET PF SINE/COSINE
	LDA GAMODE
	AND I,2
	BNE 40$			;HSTB DISPLAY/INPUT
	LDA GMEND1
	ASL
	ASL
	BMI 35$
	JSR TRNS0
	JSR SCENE		;DISPLAY PLAYFIELD
	JSR GRSMTN		;GROUND SHELLS
	JSR MOTOBJ		;DISPLAY MOTION OBJECTS
	JSR BLMOTN		;MOVE, DISPLAY BLIMP
35$:	JSR SHLMOT		;MOVE, DISPLAY SHELLS (& COLLISION DETECT)

40$:	LDA RAMPTR
	STA COPYPT		;SAVE LOCATION OF COPYRIGHT MESSAGE
	LDA RAMPTR+1
	STA COPYPT+1
	LDA I,RCOPYR/100
	LDY I,RCOPYR&0FF
	LDX I,36
	JSR LOADRAM		;DISPLAY COPYRIGHT
	JSR DSPLIF		;DISPLAY PLAYER LIVES
	JSR EOLSEQ		;END OF LIFE SEQUENCE
	JSR STATES		;DISPLAY STATES (HSTB...)
	JSR ALPHAS		;DISPLAY ALPHANUMERICS
	JSR VGHALT		;HALT VG (W/ CNTR)
	JSR SOUNDS
	LDX I,2
45$:	LDA AX,PKYRAN
	STA AX,PKYRAN+1
	DEX
	BPL 45$
	LDA A,POKEY+0A
	STA A,PKYRAN
	DEC A,PKYCNT
	BNE 65$
	LDA A,POKEY+0A		;POKEY RANDOM
	LDX I,3
50$:	CMP AX,PKYRAN		;CHECK WITH PREVIOUS RANDOMS
	BNE 55$			;X > 0 (SHOULD BE PLAY)
	DEX
	BPL 50$
				;X=0FF (SHOULD BE ATTRACT/RTP)
55$:	TXA
	EOR A,PKYCNT+1
	STA A,STATUS+1		;SET POKEY STATUS
	LDA I,10		;CHECK POKEY EVERY 10 FRAMES
	STA A,PKYCNT		;RESET COUNTER
65$:	JSR RANDOM		;MAINTAIN PSEUDO RANDOM (POLY COUNTER)
	JSR PERCENT		;GAME PERCENTAGING
	JSR INTWAIT		;WAIT FOR EOF
	LDA BUFFER
	EOR I,80
	STA BUFFER		;SWITCH FLAG (D7)
	JSR PLPROP		;SWITCH PLANE PROP
	LDA I,0A4		;SWITCH BUFFER
	LDY I,35
70$:	EOR NY,COPYPT		;CHECK FOR ATARI COPYRIGHT
	DEY
	BPL 70$
				;SET STATUS (SHOULD BE 4)
	LDX A,5*5-4+HSCRES
	BNE 75$
	LDA I,4
75$:	EOR A,VGRAM+1
80$:	STA A,VGRAM+1
	STA A,VGON		;START VG
	INC FRAME
	LDA $LMTIM
	BEQ 85$
	LDA I,0F6		;ALL SOUNDS
85$:	STA A,SLAMSN
	LDA S.VAL		;SHELL NOISE COUNTER
	BEQ 90$
	DEC S.VAL		;DEC ONCE PER FRAME
90$:	JMP MAIN		;CONTINUE



PLPROP:	LDY PROP.F		;GET PICTURE OFFSET
	BMI 20$			;NO PLANE PROP
	INY
	INY
	CPY I,6
	BCC 5$
	LDY I,0
5$:	STY PROP.F
	BIT BUFFER
	BMI 10$
	LDA AY,.PROPS+6		;GET PICTURE JSRL
	LDX AY,.PROPS+7
	STA A,VGRAM+0F94
	STX A,VGRAM+0F95
	BNE 20$			;ALWAYS
10$:	LDA AY,.PROPS
	LDX AY,.PROPS+1
	STA A,VGRAM+0794	;AND STORE IN 'VECTOR' LOCATION
	STX A,VGRAM+0795
20$:	LDY PLYPRP
	INY
	INY
	CPY I,0E
	BCC 40$
	LDY I,0
40$:	BIT GMEND1
	BMI 60$
	LDA GAMODE
	AND I,2
	BNE 60$			;NOT WITH HST INFO
	STY PLYPRP
	LDA AY,LNEPRP+1		;GET JSRL
	LDX AY,LNEPRP
	BIT BUFFER
	BMI 50$
	STA A,VGRAM+0813
	STX A,VGRAM+0812
	RTS
50$:	STA A,VGRAM+013
	STX A,VGRAM+012
60$:	RTS
;
;	WAIT FOR FRAME END (INTERRUPT COUNT SETS FLAG) AND VG HALT
;
INTWAIT:LSR CALFLG		;WAIT FOR FRAME TIME
	BCC INTWAIT
	INC S.FLAG		;CLR NMI VG RESTART FLAG
5$:	LSR INTFLG		;WAIT FOR VG FRAME
	BCC 5$
10$:	BIT A,TESTSW		;CHECK FOR VG HALT
	BVC 10$
	RTS
;
;SET DIVIDE COUNT
;
SETDIV:	LDA I,D.NBIT
	STA A,DD.NL		;SET DIVIDE BIT(S)
	LDA I,0
	STA A,D.NMLL		;CLR LOWER NUMERATOR 16 BITS
	STA A,D.NMLH
	RTS

;
;CHECK CREDIT
;	-IF CREDIT & IN ATTRACT THEN RTP
;
CREDIT:	LDX I,50.		;MAX CREDITS @ 50.
	CPX $$CRDT
	BCS 4$
	STX $$CRDT		;SET TO MAX
4$:	LDA GAMODE		;ATTRACT?
	AND I,0C4
	BNE 20$			;HSTD INPUT/RTP/PLAY
5$:	LDA $$CRDT		;CREDIT?
	BNE 6$			;CREDIT
	LDA $CMODE		;FREE PLAY ?
	AND I,3
	BNE 10$			;NO
	INC $$CRDT		;FP
	INC $$CRDT
6$:	CMP I,2
	BCS 8$
	LDA OPTION
	AND I,40
	BEQ 8$			;NOT 2 PLAY MINIMUM
	LDA STARTF
	BEQ 15$			;GAME HAS NOT STARTED (NEED 2 CREDITS)
8$:	LDA GAMODE
	CMP I,8
	BCC 7$
	LDA I,0			;CLR 2 COIN MINIMUM STATE (D3)
7$:	AND I,33		;FREEZE, DISPLAY STATUS
	ORA I,.STRTP		;SET READY TO PLAY (RTP)
	STA GAMODE
	RTS
10$:	LDA $CNCT		;COINS
	BEQ 20$			;NO
15$:	LDA GAMODE		;ELSE 2-COIN MIN
	ORA I,0B		;D3 SET (AND FREEZE BITS)
	STA GAMODE
	RTS
20$:	STA STARTF		;CLR START FLAG (IN ATTRACT)
	RTS
;
;MAINTAIN PLAY MODE SOUNDS
;
SOUNDS:	LDA EXCNTR		;ANY EXPLOSION?
	BEQ 10$			;NO
	DEC EXCNTR
	LDA EXPVAL		;ELSE COUNT DOWN SOUND
	SEC
	SBC I,10
10$:	STA EXPVAL		;TOP NIBBLE EXPLOSION BITS
	BIT GAMODE
	BPL 30$			;NOT PLAY
	LDX A,POINT+4		;OTHER SOUNDS ON ? (HIGHER PRIORITY)
	BNE 70$			;YES
	LDA GMEND1
	BMI 30$			;EOL
	LDA I,0A1
	STA A,POKEY+5		;TONES/VOLUME
	STA A,POKEY+7
	BIT GRMODE
	BPL 20$
	LDA PLSTAT+6
	AND I,20
	BNE 60$			;PLANE NOT COMING @ PLAYER
20$:	LDA ATGVAL+1
	BEQ 60$			;DEFAULT FREQ.
	TAX
	STX A,POKEY+4		;SET FREQUENCY
	LSR
	LSR
	LSR
	LSR
	LSR
	STA TEMP1
	TXA
	CLC
	ADC TEMP1		;FREQUENCY *(1+1/32)
	SEC
	SBC I,8
	STA A,POKEY+6
	CLC
	LDA ATGVAL		;STEP FREQUENCY
	ADC A,ATGDEL
	STA ATGVAL
	LDA ATGVAL+1
	ADC A,ATGDEL+1
	STA ATGVAL+1
	CMP I,30
	BCS 70$
30$:	LDA I,0
	STA ATGVAL+1
	STA A,POKEY+5		;CLR TONES
	STA A,POKEY+7
	RTS
60$:	LDX I,0F8		;MAINTAIN BACKGROUND 'HUM'
	STX A,POKEY+4
	DEX
	STX A,POKEY+6
70$:	RTS
;
; CHECK FOR PF SOUND CLR ( GROUND MODE )
;
PFSCLR:	CPX A,PFSNDF		;PROPER PF MOUNTAIN
	BNE PFSX		;NO
PFSOFF:	BIT GRMODE
	BPL PFSX		;ONLY IN GROUND MODE
	LDA I,0
	STA ATGVAL+1		;SHUT OFF SOUND
PFSX:	RTS
;
; END OF LIFE SEQUENCE
;
EOLSEQ:	BIT GMEND1
	BMI 30$			;EOL ( END OF LIFE )
	BIT GREND
	BPL 10$			;NOT EOL BY SHELLS/GROUND COLLISION
	LDA I,0
	LDX I,0C0
	BVC 5$
	LDA I,0F
	LDX I,0A0
5$:	STA EOGTMR
	STX GMEND1
	LDA I,82
	STA GMEND0		;PLANES FLY AWAY
	JSR PLNZD0		;SET Z DELTAS
	JMP 30$			;CONTINUE EOL
10$:	BIT GMEND0
	BVC 30$			;NO SHELLS FROM BEHIND
	LDA PLSTAT+7
	LSR
	BCS 15$
	JSR SPRAY		;TIME ENEMY SHELLS W/ RETURNING PLANE
15$:	LDA PLSTAT+7
	CMP I,0C
	BNE 25$
	LDA ENSIDE		;CHECK FOR PLAYER DEATH
	EOR PLDELX
	BPL 20$			;SORRY WRONG X
	LDA PLDELX
	JSR SPABS
	CMP I,1C
	BCC 20$			;PLAYER DIES
	BIT BEFLAG
	BPL 17$			;FIRST TIME FREE
	JSR RANDOM
	BMI 20$			;AFTER - ONLY 50/50
17$:	LDA I,-1
	STA BEFLAG		;SET FLAG
	BMI 30$			;ALWAYS
20$:	LDA GMEND0		;EOL BY RETURNING PLANE
	ORA I,1
	STA GMEND0
25$:	LDA GMEND0
	LSR
	BCC 30$			;PLAYER DOES NOT DIE
	LDA B.HOLE
	CMP I,0C
	BCS 30$
	INC B.HOLE		;STEP BULLET HOLE SEQUENCE
30$:	JSR WNDSHD
	LDA GMEND1		;EOL?
	BPL 35$			;NO
	LDA I,0
	STA S.VAL		;CLR SHELL SOUND
	STA GUN.ST		;CLR OVERHEATED GUNS
	STA PLDELX		;NO PLAYER MOTION
	STA PLDELY
	STA PLDELY+1
	LDA EOGTMR
	INC EOGTMR
	TAX
	BNE 40$
	LDA I,0
	STA SPIRAL		; INSURE SPIRAL HDWR IS CHARGED
	LDA I,40		;ELSE - SCROLL HORIZON, ROTATE PLAYFIELD
	ORA GMEND1
	STA GMEND1		;(D6=PF EOL FLAG)
35$:	RTS
40$:	CMP I,.TIME2
	BCC 45$
	JMP ENDLFE		;END OF LIFE SEQUENCE DONE
45$:	JSR PFTRIG
	BIT GREND		;RAN INTO GROUND
	BVC 50$
	LDA GREND
	AND I,3F
	TAX
	LDA AX,PFOBJ+6
	AND I,0F
	STA SAVY+1		;MOUNTAIN #
	JSR SCENE1
	JSR SCENE2
	JMP 60$
50$:	LDA GMEND0
	LSR
	BCS 60$			;DEATH BY OVERHEAD PLANE
	LDA GMEND1
	ASL
	ASL
	BMI 60$			;NO DISPLAY DURING STAR SEQUENCE
	JSR VGCNTR
	LDX I,3
55$:	LDA AX,BULPOS
	STA ZX,XCOMP
	DEX
	BPL 55$
	LDA I,0
	STA VGBRIT		;NO INTENSITY
	STA OBJECT+5
	TAY
	JSR TRIG		;NO ROTATION
	LDA I,0E0
	STA OBJECT+4
	LDX I,XCOMP
	JSR VGVCTR		;POSITION VCTR
	JSR DSPGRS		;DISPLAY SHELL
60$:	LDX EOGTMR
	CPX I,.TIME1		;TIME FOR STARFIELD ?
	BCC 75$			;NOT YET
	BNE 70$
	LDA GMEND1
	ORA I,70
	STA GMEND1
	LDA I,0
	STA SPIRAL		;CLR SPIRAL
	LDX I,5
65$:	STA ZX,PLOBDB
	DEX
	BPL 65$
	BIT GAMODE
	BPL ENDLFE		;NO COLLISION SEQUENCE UNLESS GAME
	LDA I,0F0
	STA EXPVAL
	LDA I,8
	STA EXCNTR		;START EXPLOSION SOUND
	STA GTIMER+1		;PLANE EXP TIMER
70$:	JMP PLCRSH
75$:	LDA I,2
	STA SPIRAL
	CLC
	LDA I4YPOS
	ADC I,.EXSCP&0FF
	TAY
	LDA I4YPOS+1
	ADC I,.EXSCP&0FF00/100
	BPL 80$
	LDA I,0
	TAY
80$:	STY I4YPOS
	STA I4YPOS+1
	LDA PFROTN		;ROTATE PF
	ADC I,70		;CARRY CLR
	STA PFROTN
	BCC 85$
	INC PFROTN+1
85$:	RTS
ENDLFE:	LDA SCRTAB+3
	BNE 10$
	STA GRMODE		;CLR GROUND MODE
	BIT GAMODE
	BPL INITIAL		;ATTRACT (RESTART)
	DEC LIVES		;TAKE LIFE IN PLAY
	LDA LIVES
	BNE INITIAL
	LDA I,8
	STA ST.LED		;CLEAR START LED
	JMP NW.HSC		;CHECK FOR HSTB ENTRY		
10$:	RTS
;
;GAME INITIALIZATION
;
GMINIT:	LDX I,0
	STX A,PKYCNT		;RESET POKEY CHECK COUNTER
	STX A,POKEY+0F		;INIT POKEY
	STX MODECT
	LDA AX,MCOUNT
	STA NEWCT
	LDY I,7
	STY A,POKEY+0F
	LDA I,0
10$:	STA AY,POKEY		;CLR SOUND REGS
	DEY
	BPL 10$
	STA A,POKEY+8
	LDA GAMODE
	STA A,PKYCNT+1		;SAVE GAME MODE
	BMI INITIAL		;GAME
	STX A,POKEY+0F		;SHUT OFF RANDOM NUMBERS IN ATTRACT/RTP
INITIAL:LDA I,WO.CNT	
	STA PLSTAT+7		;DISABLE PLANE
	JSR PLNCLR
	LDA I,0
	LDX I,MESTM2-PLDELX
10$:	STA ZX,PLDELX		;CLR PLAYER/TIMING/SOUNDS
	DEX
	BPL 10$
	STA BLOBJ+18		;CLR BLIMP
	LDA I,10
	STA I4YPOS		;INITIALIZE HORIZON Y POSITION
	LDA I,2
	STA I4YPOS+1
	LDX I,N.PFOB		;CLR EOL MOUNTAIN AS WELL
	LDY I,6
30$:	LDA I,0
	STA AX,PFOBJ		;X OFFSET = 0
	STA AX,PFOBJ+2
	LDA I,PF.XZ&0FF00/100
	STA AX,PFOBJ+3		;X DEPTH
	LDA AY,PFOBIZ
	STA AX,PFOBJ+4		;Y DEPTH
	LDA AY,PFOBIZ+1
50$:	STA AX,PFOBJ+5		;Z MSB
	CMP I,11		;CHECK INITIAL POSITION
	TYA
	BCC 57$
	ORA I,80		;ON HORIZON
57$:	STA AX,PFOBJ+6
	BCS 58$
	LDA AX,PFOBJ+4
	STA AX,PFOBJ+2		;X DEPTH=Y DEPTH (FREE OBJECT)
	LDA AX,PFOBJ+5
	STA AX,PFOBJ+3
58$:	LDA AY,PFOBIZ+9		;X POSITION MSB
	STA AX,PFOBJ+1
	DEY
	DEY
	TXA
	SEC
	SBC I,L.PFOB
	TAX
	BCS 30$			;DO ALL ROUND OBJECTS
	LDX I,NGRSHL
60$:	LDA I,0
	STA AX,GRSHLS+5		;CLR ALL GROUND SHELLS
	TXA
	SEC
	SBC I,GRLSHL
	TAX
	BCS 60$
	LDY I,N.SHL
70$:	LDA I,0
	STA AY,SHELLS+7		;CLR ALL PLAYER SHELLS
	TYA
	SEC
	SBC I,L.SHL
	TAY
	BCS 70$
	RTS

;
;TABLE OF COUNTS BETWEEN PLANE/GROUND WAVES
;
MCOUNT:	.BYTE 4,2,3,2
	.BYTE 1,3,4,2

;
;GROUND OBJECTS - INITIAL DEPTH
;+8             - INITIAL X POS
;
PFOBIZ:	.WORD 8200,6E0,3220,0D20
	.WORD -0C00,-400,400,0C00
;
	BIT1	=MCOUNT+1
	BIT2	=MCOUNT
;
;PLAYER EOL CRASH
;
PLCRSH:	LDA I,4
	LDY I,0A0
	JSR VGSTAT
	JSR TRNS0		;ROTATE ABOUT 0
	LDA EOGTMR
	CMP I,.TIME1+8		;ONLY STARS
	BCS 5$
	JSR VGCNTR		;CENTER BEAM
	LDA I,80
	STA O.DPTH
	LDA I,1
	STA O.DPTH+1		;SCALE FACTOR
	CLC 
	LDA GTIMER+1
	ADC I,6
	STA GTIMER+1		;STEP COUNT
	LDA I,40
	STA PLSTAT+6
	JSR PLANE		;DISPLAY EXPLODED PLANE
	JSR UPPLX0		;UPDATE PIECE ROTATION
5$:	LDA EOGTMR
	SEC
	SBC I,.TIME1+4
	BCC 45$
	ASL			;STAR PATTERNS
	TAX
	STX SAVX		;ITERATION COUNT (*2
	LDX I,4
10$:	STX SAVX+1
	LDA ZX,PLOBDB+1		;START ROTATION
	LDY ZX,PLOBDB
	JSR TRIG
	LDA SAVX+1		;STAR #
	CLC
	ADC SAVX		;+ INTERATION COUNT
	TAX
	LDA AX,PLCRSC
	STA OBJECT+4
	LDA AX,PLCRSC+1
	STA OBJECT+5
	BMI 30$			;NO STAR THIS COUNT
	JSR VGCNTR
	LDA SAVX+1
	LSR
	LSR
	LDX I,0A		;ASSUME STAR0 (10. POINTS)
	LDY I,.STAR0
	PHP
	BCC 15$
	INX			;STAR1 (12. POINTS)
	LDY I,.STAR1
15$:	JSR PLNABZ
	LDX I,.STAR0*2
	PLP
	PHP
	BCC 20$
	LDX I,.STAR1*2
20$:	JSR D.LOOP		;SCALE BY DEPTH
	LAH DESTR0
	LXL DESTR0
	PLP
	BCC 25$
	LAH DESTR1
	LXL DESTR1
25$:	JSR DCMPA0
30$:	LDX SAVX+1
	DEX
	DEX
	BPL 10$
	LDA PLOBDB		;ROTATE STAR 0
	SBC I,80
	STA PLOBDB
	BCS 35$
	DEC PLOBDB+1
35$:	LDA PLOBDB+2		;ROTATE STAR 1
	ADC I,60
	STA PLOBDB+2
	BCC 40$
	INC PLOBDB+3
40$:	LDA PLOBDB+4		;ROTATE STAR 2
	SBC I,70
	STA PLOBDB+4
	BCS 45$
	DEC PLOBDB+5
45$:	RTS
;
PLCRSC:	.WORD -1,-1,8000,2000,800,200,80,20,-1,-1
;	
;INITIALIZE GROUND MODE
;
INITGR:	LDA I,2
	STA GRNDCT
	LDA I,1
	STA GTIMER		;MOUNTAIN OBJECT TIME-OUT COUNTER
	LDA I,0C0
	STA GRMODE		;TO GROUND MODE
				;CONDITIONAL BLIMP
;
;BLIMP INITIALIZATION
;
;
CINTBP:	LDA BLOBJ+18		;ACTIVE BLIMP?
	BMI INTBP0		;YES
INITBP:	JSR LVLSTP		;STEP LEVEL FOR EACH BLIMP
	LDA I,0
	STA GRDSP
	STA BLOBJ+7		;CLR EXPLOSION TIMER
	STA BLOBJ+2		;Y LSB
	STA BLOBJ+4		;Z LSB
	STA BLOBJ+14		;Y ANGLE LSB
	LDA I,2
	STA BLOBJ+3		;Y MSB
	LDA I,10
	STA BLOBJ+5		;Z MSB
	LDX I,3
	LDY I,0C0
	BIT PLDELX
	JSR DPABS		;-X SIDE
	STX TEMP1
	CLC
	TYA
	ADC UNIV4X
	STA BLOBJ		;X LSB
	TXA
	ADC UNIV4X+1
	STA BLOBJ+1		;X MSB
	LDA I,-2
	BIT TEMP1
	JSR SPABS
	STA BLOBJ+15		;Y ANGLE MSB
	LDX I,-1
	LDY I,-8
	BIT TEMP1
	JSR DPABS
	STA BLOBJ+0D		;X VEL MSB
	STY BLOBJ+0C		;LSB
	LDA I,80
	STA BLOBJ+6		;IN FLIGHT
	STA BLOBJ+18		;ACTIVE
INTBP0:	RTS
;
;CLR PLANE NON/EXPLODING DRONES
;
PLNCLR:	LDX I,0
	STX PLSTAT+6		;CLR PLANE
	BIT P.1ST+18
	BPL 5$			;DRONE OBJECT
	BIT P.1ST+6		;BLIMP OBJECT
	BVC 7$			;CLR
	BVS 10$			;EXPLOSION
5$:	LDA P.1ST+6
	AND I,4
	BNE 10$			;DRONE 1 EXPLOSION
7$:	STX P.1ST+6		;ELSE CLR
10$:	LDA P.2ST+6
	AND I,4
	BNE 20$			;DRONE 2 EXPLOSION
	STX P.2ST+6
20$:	RTS

SPRAY:	LDY I,0C0
	BIT ENSIDE		;CHECK ENEMY X (+ OR -)
	BMI 10$
	LDY I,80
10$:	BIT GAMODE
	BPL 20$
	INC S.VAL		;STROBE SOUND FOR ENEMY SPRAY
20$:	JMP NWSHL0		;SET ENEMY SHELL
;
;SEQUENCE SCREEN BULLET HOLES
;
WNDSHD:	BIT GAMODE
	BPL 10$			;NOT PLAY
	LDA B.HOLE
	AND I,0E
	TAX
	BNE EOLBH
10$:	RTS

EOLBH:	LDA I,SEQUNA&0FF00/100
	LDY I,SEQUNA&0FF
	BIT ENSIDE
	BPL 10$			;ENEMY STARTS + X
	LDA I,SEQUNB&0FF00/100	;ELSE - X
	LDY I,SEQUNB&0FF
10$:	JMP LOADRAM		;WIND SCREEN BULLET HOLES
;
;DISPLAY PLAYER'S LIVES
;
;
DSPLIF:	JSR VGCNTR		;CENTER BEAM
	LDA I,-500./4
	LDX I,352./4		;POSITION BEAM (-500,352)
	LDY I,0			;INTENSITY (OFF)
	JSR VGVTR
	LDX LIVES
	DEX
	CPX I,5
	BMI DLIVES
	LDX I,4
	JSR DLIVES
	LDA I,-160./4
	LDX I,-20/4
	JSR VGVTR1
	LDA LIVES
	SEC
	SBC I,5
	TAX
DLIVES:	STX SAVX
5$:	DEC SAVX
	BMI 10$
	LDA I,LPLANE&0FF00/100
	LDX I,LPLANE&0FF
	JSR VGJSRL		;DISPLAY LIFE PLANES
	JMP 5$
10$:	RTS
	
;
;COUNT IN SCORE (W/AUDIO)
;
SCOREM:	LDX I,2
10$:	LDA ZX,SCRTAB+1		;MOVE SCORES UP IN TABLE
	BNE 20$
	LDY ZX,SCRTAB
	STY ZX,SCRTAB+1
	STA ZX,SCRTAB
20$:	DEX
	BPL 10$
	LDA A,POINT+4		;WAIT FOR OTHER SOUNDS (PLANE ENTRY)
	ORA A,POINT+2		;(300 PT SOUND)
	ORA EXCNTR		;(EXPLOSIONS)
	BNE 30$
	LDA SCRTAB+3		;ANY SCORES?
	BEQ 21$			;NO
	DEC SCRTIM
	BNE 22$
	LDA BNTIME		;BONUS LIFE SOUND ?
	BEQ 25$			;NO
	DEC BNTIME		;WAIT FOR SOUND TO FINISH
21$:	LDA I,STINIT
	STA SCRTIM
22$:	RTS
25$:	LDX I,-1
	LDA I,1			;ASSUME UNITS
	LDY SCRTAB+3
	CPY I,10.
	LDY I,STINIT
	BCC 26$			;<10.
	LDY I,STINIT*2
	LDX I,-10.
	LDA I,10
26$:	STY SCRTIM		;RESET COUNTER
	SED			;ADD POINTS TO SCORE
	CLC
	ADC SCORE
	STA SCORE
	LDA SCORE+1
	ADC I,0
	STA SCORE+1
	CLD
	CLC
	TXA
	ADC SCRTAB+3		;DEC SCORE TO ADD
	STA SCRTAB+3
	SOUND 0			;10 POINT SOUND
	CPX I,-1
	BEQ 27$
	SOUND 4			;100 POINT SOUND
27$:	JSR SNDON		;SCORE SOUND
	LDA OPTION		;CHECK FOR BONUS LIFE
	AND I,0C
	LSR
	LSR
	CLC
	ADC EXLIFE
	TAX
	LDA SCORE+1
	CMP AX,BONUSL
	BCC 30$
	CLC
	LDA EXLIFE
	ADC I,4
	STA EXLIFE		;EXTRA LIFE
	SOUND 2			;BONUS LIFE SOUND
	JSR SNDON		;START BONUS LIFE SOUND
	LDA I,0C
	STA BNTIME		;SET TIMER
	LDA I,30.
	STA MESTM0		;BONUS LIFE MESSAGE TIMER
	INC LIVES
30$:	RTS
;
BONUSL:	.BYTE 2,4,6,0FF		;BONUS LIFE LEVELS (0FF=NONE)
	.BYTE 10,15,20,0FF
	.BYTE 30,40,50,0FF
	.BYTE 0FF,0FF,0FF,0FF
;
;MANTAIN PERCENTAGE INFO IN EAROM
;
PERCENT:LDA A,PRCTIM
	ORA A,PRCTIM+1
	ORA A,PRCTIM+2
	BNE 10$			;PRESENT
	LDA EAFLG		;EAROM IN USE
	BNE 10$
	LDA OPTION
	LSR
	LSR
	AND I,0F
	TAX
	LDA AX,GTOPTS
	LSR
	ROR TEMP1
	LSR
	ROR TEMP1
	LSR
	ROR TEMP1
	STA A,PRCTIM+1
	LDA TEMP1
	AND I,0E0
	STA A,PRCTIM
10$:	RTS
;
;EXPECTED GAME TIMES PER OPTIONS
;
GTOPTS:	.BYTE 90.		;NORM GAME TIME
	.BYTE 75.
	.BYTE 60.
	.BYTE 45.
;
	.BYTE 105.
	.BYTE 90.
	.BYTE 75.
	.BYTE 60.
;
	.BYTE 120.
	.BYTE 105.
	.BYTE 90.
	.BYTE 75.
;
	.BYTE 135.
	.BYTE 120.
	.BYTE 105.
	.BYTE 90.

	.SBTTL STATES
;
;MAINTAIN DISPLAY STATES
;
STATES:	LDA GAMODE
	AND I,0BF
	BEQ 10$			;ATTRACT/RTP
	CMP I,BNRBIT+3
	BNE 5$
	JMP DSPBNR		;ATTRACT BANNER
5$:	AND I,0F
	CMP I,7
	BEQ 25$			;GET INPUT FOR HIGH SCORE TABLE
	CMP I,3
	BNE 15$			;PLAY/EOG
	JMP HSTBL		;DISPLAY HIGH SCCORES
10$:	DEC TIMER		;ATTRACT/RTP
	BNE 15$
	LDA I,156.
	STA HSTMER
	STA TIMER		;HSTB EVERY 20 SECONDS
	LDA A,HSCRES
	ORA A,HSCRES+1
	BEQ 20$
	LDA I,3
	ORA GAMODE
	STA GAMODE
15$:	RTS			
20$:	JMP NWBNNR		;CHECK FOR ATTRACT BANNER
25$:	LDY LETR+2
	LDX I,1
30$:	JSR LETCHK		;JOYSTICK CONTROLS LETTER CHANGE
	DEX
	BPL 30$
	STY LETR+2
	CLC
	LDA LETR
	ADC LETR+1
	TAX
	TYA
	BMI 35$
	CMP I,3
	LDA AX,INITL
	BCC 45$
	ADC I,1			;CARRY SET
	CMP I,04C
	BCC 40$
	LDA I,16
	BCS 40$			;ALWAYS
35$:	CMP I,-3
	LDA AX,INITL
	BCS 45$
	SBC I,1			;-2 (CARRY CLR)
	CMP I,16
	BCS 40$
	LDA I,04A
40$:	STA AX,INITL
	LDA I,0
	STA LETR+2		;RESET
45$:	BIT SWSTAT
	BMI 50$
	LDA I,80
	STA FR.DB		;INITIALIZE DEBOUNCE
	BNE 70$			;ALWAYS
50$:	ASL FR.DB		;DEBOUNCE
	BCC 70$
	LDA I,0
	STA LETR+2
	LDX LETR+1
	INX
	CPX I,3
	BCC 65$			;NOT YET ALL 3 INITIALS
55$:	LDA GAMODE
	AND I,0F8		;D2 CLR ( + GAME STATUS)
	ORA I,3
	STA GAMODE		;DISPLAY TABLE
	LDA I,80.		;FOR COUNTS
	STA HSTMER
	LDX #6*6-1
	STX EAX			;START @ END
	INX
	STX EABC
	STX A,EACNT		;MAX COUNT
	LDA #EAFILL/100
	STA EASRCE+1
	LDA #EAFILL&0FF
	STA EASRCE
	LDA LETR
	CMP #15.
	BCC 60$
	LDX #6*3-1
	STX EAX
	INX
	STX EABC
	STX A,EACNT
60$:	JSR STEAROM		;CHECK EAROM STORE
	JMP GMINIT		;REINIT POKEY
65$:	STX LETR+1
	TXA
	CLC
	ADC LETR
	TAX
	LDA I,16
	STA AX,INITL
70$:	LDA I,18.
	JSR MESSAGE		;DISPLAY HIGH-SCORE INITIAL INFO
	LDA I,38.
	JSR MESSAGE
	LDA I,40.
	JSR MESSAGE
	LDA I,42.
	JSR MESSAGE
	JSR VGCNTR		;CENTER BEAM
	LDA I,-24./4
	LDX I,0
	LDY I,0
	JSR VGVTR		;POSITION BEAM
	LDX LETR
	JSR HSINTL
	DEC TIMER
	BNE 85$
	DEC TIMER+1
	BNE 85$
	LDX LETR
	LDY I,0
75$:	LDA AX,INITL
	CMP I,04C		;IF UNDERLINE
	BNE 80$
	LDA I,0
	STA AX,INITL		;BLANK
80$:	INX
	INY
	CPY I,3
	BCC 75$
	JMP 55$			;ALWAYS
85$:	RTS

	.SBTTL HIGH SCORE TABLE ROUTINES

;
;CHECK FOR NEW HIGH SCORE TABLE ENTRY
;
NW.HSC:	LDA A,PRCTIM+2
	STA TEMP1+1
	LDA A,PRCTIM+1
	STA TEMP1
	LDA A,PRCTIM
	JSR DIV32		;DETERMINE 1 SAMPLE
	SEC
	LDA SECCNT		;NEW SAMPLE
	SBC TEMP1		;-AVERAGE SAMPLE
	TAX
	LDA SECCNT+1		;MIDDLE BYTE
	SBC TEMP1+1
	TAY
	LDA I,0			;MSB
	SBC TEMP1+2
	PHA
	CLC
	TXA
	ADC A,PRCTIM		;ADD NEW DIFFERENCE TO AVERAGE SUM
	STA A,PRCTIM
	TYA
	ADC A,PRCTIM+1		;MIDDLE BYTE
	STA A,PRCTIM+1
	PLA
	ADC A,PRCTIM+2		;MSB
	STA A,PRCTIM+2
	LDX I,0
	TXA
	BIT OPTION
	BPL 9$
	LDA A,PRCTIM+2		;DETERMINE 1 SAMPLE
	STA TEMP1+1
	LDA A,PRCTIM+1
	STA TEMP1
	LDA A,PRCTIM
	JSR DIV32
	BEQ 5$
	LDA I,20
	BNE 9$			;TIME VERY LARGE
5$:	LDA OPTIONS
	LSR
	LSR
	AND I,0F
	TAX			;OPTION SELECTION
	SEC
	LDA TEMP1
	SBC AX,GTOPTS
	STA TEMP1
	LDA TEMP1+1
	SBC I,0
	CMP I,80
	ROR
	ROR TEMP1
	LDX TEMP1
	TAY
	BPL 7$
	CPX I,-10
	SBC I,-1
	LDA I,-1
	BCS 9$
	LDX I,-10
	BMI 9$			;ALWAYS
7$:	CPX I,21
	SBC I,0
	LDA I,0
	BCC 9$
	LDX I,20
9$:	STA A,PRPDEL+1
	STX A,PRPDEL
	STA A,PRMDEL+1
	TXA
	ASL
	ASL
	STA A,PRMDEL
	LDX I,0
	STX LETR+1		;START @ FIRST LETTER
	STX LETR+2		;INITIAL CHANGE DEBOUNCE
	LDY I,2			;3 BYTES OF GAME COUNT
11$:	INC AX,GCOUNT
	BNE 12$			;NO CARRY
	INX
	DEY
	BPL 11$			;PROPAGATE CARRY
12$:	CLC
	LDA SECCNT
	ADC A,GTIME
	STA A,GTIME		;ADD CURRENT GAME TIME TO SUM
	LDA SECCNT+1
	ADC A,GTIME+1
	STA A,GTIME+1		;MSB
	BCC 14$			;NO CARRY
	LDY I,2			;5 TOTAL BYTES OF GAME TIME SUM
	LDX I,0			;START WITH THIRD BYTE
13$:	INC AX,GTIME+2		;ADD IN CARRY
	BNE 14$			;NO MORE
	INX
	DEY
	BPL 13$			;CONTINUE CARRY
14$:	LDY AX,HSCRES
	CPY SCORE
	LDA AX,HSCRES+1
	SBC SCORE+1
	BCC 20$			;X=PLACE IN TABLE
	TXA
	ADC I,4			;ADD 5 (CARRY SET)
	TAX
	CPX I,7*5		;7 HIGH SCORES
	BCC 14$
	LDA A,HSCRES
	ORA A,HSCRES+1
	BEQ 15$			;NO HST
	LDA I,80.
	STA HSTMER
	LDA I,3
15$:	STA GAMODE		;ATTRACT
	JMP GMINIT		;REINIT POKEY
20$:	STX LETR
	SEC
	LDA I,3*5		;3 ENTRIES * 5
	SBC LETR		;INVERT ENTRY #
	TAX
	CPX I,5
	BEQ 22$
	CPX I,10.
	BEQ 21$
	INX
21$:	INX
22$:	INX
;	STX EABC		;BYTE COUNT = 6 * # OF ENTRIES
	LDA I,7
	STA GAMODE		;GET HIGH SCORE INITIALS
	LDA I,4
	STA TIMER+1
	LDA I,0
	STA TIMER		;TIMEOUT @ APPROX. 2 MINUTES FOR INITIALS
	LDX I,6*5
25$:	CPX LETR
	BEQ 30$
	LDA AX,HSCRES-5		;MOVE SCORE DOWN
	STA AX,HSCRES
	LDA AX,HSCRES-4
	STA AX,HSCRES+1
	LDA AX,INITL-5
	STA AX,INITL
	LDA AX,INITL-4
	STA AX,INITL+1
	LDA AX,INITL-3
	STA AX,INITL+2
	TXA
	SEC
	SBC I,5
	TAX
	BCS 25$			;ALWAYS
30$:	LDA SCORE
	STA AX,HSCRES
	LDA SCORE+1
	STA AX,HSCRES+1
	LDA I,016
	LDX LETR
	STA AX,INITL		;CLR FIRST INITIAL
	LDA I,04C
	STA AX,INITL+1		;INITIALIZE TO UNDERLINE
	STA AX,INITL+2
	JMP INITIAL
;
;	DIVIDE BY 32.
;
DIV32:	ASL
	ROL TEMP1
	ROL TEMP1+1
	ROL
	ROL TEMP1
	ROL TEMP1+1
	ROL
	ROL TEMP1
	ROL TEMP1+1
	ROL
	AND I,3
	STA TEMP1+2
	RTS
;
;CHANGE LETTER OFFSET (BY POT VALUES)
;
LETCHK:	SEC
	LDA ZX,PTRNGE
	SBC ZX,POTVAL
	STA TEMP1
	LDA ZX,PTRNGE
	LSR
	LSR
	LSR
	CMP TEMP1		;TOP 1/8 RANGE PREVIOUS LETTER
	PHA			;SAVE DATA
	TXA			;WHICH AXIS
	BEQ 30$
	PLA			;RESTORE DATA
	BCS 10$			;TOP 1/8 VERTICAL
	CMP ZX,POTVAL
	BCC 20$
5$:	INY			;BOTTOM 1/8 VERTICAL
	RTS
10$:	DEY
20$:	RTS
30$:	PLA
	BCS 5$			;TOP 1/8 HORIZONTAL
	CMP ZX,POTVAL
	BCS 10$			;BOTTOM 1/8 HORIZONTAL
	RTS
;
; DISPLAY HSTD
;
HSTBL:	LDA I,20.
	JSR MESSAGE		;HIGH SCORES
	LDY I,0
10$:	STY SAVY
	LDA AY,HSCRES
	ORA AY,HSCRES+1
	BEQ 22$			;NO MORE HIGH SCORES
	JSR VGCNTR
	LDA SAVY
	LDX I,-32./10		;DETERMINE Y POSITION
	JSR MULTPL
	TYA
	CLC
	ADC I,32./4		;START @ 32. Y
	TAX
	LDA I,-132./4		;-132. X
	JSR VGVTR1
	LDX SAVY
	JSR HSINTL		;DISPLAY INITIALS & BUMP SAVX TO NEXT INITIAL SET
	LDA I,72./4
	LDX I,0
	JSR VGVTR1		;OFFSET VCTR
	LDY SAVY
	LDA AY,HSCRES
	STA TEMP2
	LDA AY,HSCRES+1
	STA TEMP2+1
	LDX I,TEMP2+1
	JSR DIGT1S
	JSR ALPH.0		;TRAILING 0
	LDA SAVY
	CLC
	ADC I,5
	TAY
	CPY I,5*7
	BCC 10$
22$:	DEC HSTMER
	BNE 30$
	JSR INITIAL
	LDA I,0FC
	AND GAMODE
	STA GAMODE		;CLR TABLE
	LDA I,0
	STA OBJKLD+1
	LDA I,10.	
	STA OBJKLD
	STA N.PLNZ
	JMP NWBNNR		;CHECK FOR ATTRACT BANNER
30$:	RTS
;
;DISPLAY THREE INITIALS
;X=FIRST (LEFT) INITIAL (IN INITL)
;
HSINTL:	LDA I,2
	STA TEMP1
10$:	STX SAVX
	LDA AX,INITL
	AND I,0FE
	CMP I,4E
	BCC 20$
	LDA I,0
20$:	TAY
	JSR DSPALP		;DISPLAY ALPHA
	LDX SAVX
	INX
	DEC TEMP1
	BPL 10$
	INC SAVX		;POINT @ NEXT INITIAL
	RTS
;
;DISPLAY CHARACTER
; Y = CHAR OFFSET ( INTO VGMSGA )
;
DSPALP:	LDX AY,VGMSGA+1
	LDA AY,VGMSGA
	JMP VGADD2
;
; SET-UP NEW BANNER
;
NWBNNR:	LDA GAMODE
	BNE 10$			;ONLY ATTRACT
	LDA A,HSCRES+<7*5-4>	;WAIT FOR 7 HIGH SCORES
	BEQ 2$
	BIT A,STATUS+1		;IS POKEY THERE
	BMI 2$
	DEC S.FLAG		;NO [PLAY WITH VG RESTART]
2$:	LDA I,0
	LDX I,L.OBJ-1
5$:	STA ZX,PLSTAT		;CLR PLANE DB
	DEX
	BPL 5$
	JSR STPLNE		;SET-UP PLANE
	LDA I,0
	STA PLSTAT+2
	STA PLSTAT+3
	LDA I,BNRBIT+3
	STA GAMODE
10$:	RTS
;
; DISPLAY BANNER ( ATTRACT SEQUENCE )
;
DSPBNR:	LDX I,N.MOB
	STX SAVX+2
	JSR PLNLBS		;POSITION PLANE
	BCS 5$			;NOT VISIBLE
	JSR PLANE		;DISPLAY PLANE
	LDX I,N.MOB
	JSR PLNLBS		;POSITION BEAM
	LAH BANNER
	LYL BANNER
	LDX I,.BNNR
	JSR LOADRAM		;BANNER OUTLINE
	LDA I,36.
	JSR MESSAGE		;DISPLAY ' RED BARON '
5$:	CLC
	LDA PLSTAT		;UPDATE X POSITION
	ADC I,0E0
	STA PLSTAT
	LDA PLSTAT+1
	ADC I,0FF
	STA PLSTAT+1
	SEC
	SBC UNIV4X+1
	CMP I,0F4		;DESTINATION POSITION
	BPL 10$
	LDA GAMODE		;CLR BANNER (TO NEW MODE)
	AND I,0C0
	STA GAMODE
	JMP INITIAL
10$:	RTS

	.SBTTL NEW MOTION OBJECTS
	
	.SBTTL	GENERATE NEW SHELLS
	
;	ENTRY		EXIT
;ACC	DC		BLITZED
;X	DC		BLITZED
;Y	DC		BLITZED
;
NEWSHL:	BIT SWSTAT		;FIRE BUTTON?
	BPL NWSHL1		;NO
	LDA S.XFLG		;TOGGLE D6 (ALTERNATE BETWEEN
	EOR I,40		; LEFT & RIGHT GUNS)
	STA S.XFLG
	BIT GUN.ST
	BVC 10$
	RTS
10$:	INC GUN.ST		;INC GUN USE COUNTER (OVERHEAT)
	LDY S.XFLG		;PLAYER SHELLS
NWSHL0:	LDX I,N.SHL		;ELSE CHECK FOR FREE SHELL
5$:	LDA AX,SHELLS+7		;AVAILABLE?
	BPL SETSHL		;YES
	TXA
	SEC
	SBC I,L.SHL
	TAX
	BCS 5$
	RTS
NWSHL1:	SEC
	LDA GUN.ST
	SBC I,3			;GUNS COOL 3 TIMES AS FAST AS HEAT
	BCS 10$
	LDA I,0
10$:	STA GUN.ST		;UPDATE GUN STATUS
	RTS
;
;INITIALIZE SHELL
;
SETSHL:	BIT GAMODE
	BPL 5$			;SOUNDS ONLY IN PLAY
	INC S.VAL
5$:	STY TEMP4		;TEMP4 = PLAYER/ENEMY FLAG (D7)
	STX SAVX
	LDX PFROTN+1		;PF ANGLE OF ROTATION MSB
	LDY PFROTN		;LSB
	JSR D.COMP		;COMPENSATE FOR CURRENT ROTATION
	JSR TRIG		;SET SINE/COSINE
	LDX I,S.INTX/100
	LDY I,S.INTX&0FF
	BIT TEMP4
	BVC 20$
	JSR D.COMP		;D6 = ENEMY X SIDE
20$:	STX A,MM.XM		;INITIAL X MSB
	STY A,MM.XL		;LSB
	LDA I,S.INTY&0FF
	LDX I,S.INTY&0FF00/100
	BIT TEMP4
	BPL 25$			;PLAYER
	LDA I,E.INTY&0FF
	LDX I,E.INTY&0FF00/100
25$:	CLC
	ADC I4YPOS
	STA A,MM.YL
	TXA
	ADC I4YPOS+1
	TAX
	JSR MRSAB0		;ROTATE ABOUT 0
	STX TEMP1
	JSR MULTB4
	LDX SAVX
	STA AX,SHELLS+2		;Y LSB
	LDA TEMP1
	STA AX,SHELLS+3		;Y MSB
	LDA RESULT
	ASL
	ROL RESULT+1
	ASL
	ROL RESULT+1
	CLC
	ADC UNIV4X
	STA AX,SHELLS		;X LSB
	LDA RESULT+1
	ADC UNIV4X+1
	STA AX,SHELLS+1		;X MSB
	LDA I,80
	BIT TEMP4
	BPL 30$
	LDA I,0C0		;ENEMY SHELL
30$:	STA AX,SHELLS+7
	LDA I,S.DPTH&0FF	;INITIALIZE Z (LSB)
	STA AX,SHELLS+4
	LDA I,S.DPTH&0FF00/100	;INITIALIZE Z (MSB)
	STA AX,SHELLS+5
	RTS
	
	.SBTTL	CREATE NEW PLANE
	
NWPLNE:	LDA PLSTAT+6		;PLANE #0
	AND I,0C0
	BNE 17$			;FLIGHT/EXPLOSION
	DEC PLSTAT+7		;DEC PLANE COUNT
	BNE 17$
5$:	LDX I,L.OBJ-4
10$:	STA ZX,PLSTAT		;CLR PLANE DB
	DEX
	BPL 10$
	BIT GMEND0		;RETURNING PLANE
	BPL 15$			;NO
	JMP NWENME		;ELSE - INITIALIZE
15$:	LDA SCRTAB+3		;WAIT FOR SCORES
	BEQ 20$
	LDA I,1
	STA PLSTAT+7		;CHECK NEXT FRAME
17$:	RTS
20$:	DEC NEWCT		;MODE COUNT?
	BNE 22$			;NO
	INC MODECT		;STEP MODE COUNT
	LDA MODECT
	AND I,0F
	STA MODECT
	LSR
	TAX
	LDA AX,MCOUNT
	BCC 21$
	LDA I,1
21$:	STA NEWCT
22$:	LDA MODECT
	LSR
	BCC STPLNE		;PLANE WAVE
	JMP INITGR		;GROUND WAVE
STPLNE:
	BIT GAMODE
	BPL 15$			;NOT PLAY MODE
	LDY I,1
5$:	LDX ZY,VALFRC
	INX
	CPX I,19
	BCC 10$
	LDX I,18
10$:	STX ZY,VALFRC
	DEY
	BPL 5$
15$:	JSR RANDOM		;RANDOM X POSITION
	TAY
	LDX I,2
	BIT PLDELX
	JSR DPABS
	CLC
	TYA
	ADC UNIV4X
	STA PLSTAT
	TXA
	ADC UNIV4X+1
	STA PLSTAT+1
	LDY I,MAXDEL&0FF	;TAIL TOWARDS RIGHT
	LDX I,MAXDEL&0FF00/100
	STY PLSTAT+0E		;Y DELTA MSB
	STX PLSTAT+0F		;Y DELTA
	LDA I,0FE		
	BIT PLDELX
	BPL 20$
	JSR DPABS
	LDA I,2			;TAIL TOWARDS LEFT
20$:	STA PLSTAT+15		;SET ROTATION (X/Z) 90 DEGREES
	STX PLSTAT+0D		;X DELTA
	STY PLSTAT+0C		;X DELTA MSB
	JSR RANDOM		;RANDOM Y POSITION
	CLC
	ADC I,80
	STA PLSTAT+2
	AND I,1
	ADC I,1
	STA PLSTAT+3
	SOUND 1			;PLANE ANNOUNCE SOUND
	JSR SNDON
	LDA I,P.INDP&0FF
	STA PLSTAT+4
	STA PLSTAT+19
	LDA I,P.INDP/100	;Z DEPTH (MSB)
	STA PLSTAT+5
	STA PLSTAT+1A
	LDA N.PLNZ
	CMP I,4
	BCC 25$
	JSR RANDOM
	AND I,0C
	BNE 25$
	JSR CINTBP		;RANDOM BLIMP
25$:	LDA I,0			;1 PLANE
	STA P.2ST+6		;CLR 2ND DRONE
	BIT BLOBJ+18		;IF BLIMP ONLY 1 PLANE
	BMI 35$			;BLIMP
	STA P.1ST+6		;CLR 1ST DRONE
	LDX SCORE+1
	BEQ 30$			;SCORE < 1000
	LDA I,3			;3 PLANES
30$:	LDX SCORE
	CPX I,30
	BCC 35$			;SCORE < 300
	ORA I,1			;AT LEAST 2 PLANES
35$:	STA N.OBJ		;SET # OF PLANES
	JSR RANDOM
	AND I,30
	BNE 40$
	STA N.OBJ		;RANDOM (0.25) ONLY 1 PLANE
40$:	LDA GMLEVL
	LDX I,0B0
	CMP I,4
	BCC 50$			;NORMAL PLANE
	CMP I,5
	BEQ 45$
	JSR RANDOM
	LSR
	BCS 50$			;STILL NORMAL
45$:	LDX I,0B8		;@ PLAYER
50$:	STX PLSTAT+6
	LDA I,20
	STA PLSTAT+7		;GIVE PLANE ^20 FRAMES TO CROSS CENTER
	LSR N.OBJ		;DRONE #1 ?
	BCC 65$			;NO
	LDX I,N.MOB
	LDY I,0			;INITIALIZE DRONE #1
	JSR PLNXCG
	LDA I,2
	STA P.1ST+6		;FORMATION FLIGHT (=2)
	LDA I,DRINZ/100
	STA P.1ST+5
	LDX I,3
55$:	LDA AX,PLANE1
	STA ZX,P.1ST
	DEX
	BPL 55$
	LSR N.OBJ		;DRONE #2 ?
	BCC 65$			;NO
	LDX I,N.MOB
	LDY I,L.OBJ
	JSR PLNXCG		;INITIALIZE DRONE #2
	LDA I,2
	STA P.2ST+6		;FORMATION FLIGHT (=2)
	LDA I,DRINZ/100
	STA P.2ST+5
	LDX I,3
60$:	LDA AX,PLANE2
	STA ZX,P.2ST
	DEX
	BPL 60$
65$:	RTS
;
	.SBTTL	CHKSUM 3 (5000-57FF) [FF]
CHKSM3:	.BYTE 66
;

PLNZD:	LDA GAMODE
	BPL PLNZD0
	INC N.PLNZ		;COUNT # OF PLANES IN GAME
PLNZD0:	LDX I,10
	LDA OBJKLD+1
	BNE 2$
	LDA OBJKLD
	LSR
	CMP I,10
	BCS 2$
	TAX
2$:	LDA AX,PLNLVL
	STA GMLEVL
	TAX
	LDA AX,PLPOSZ
	STA PLSTAT+1B		;PLANE MOTION DEPTH DELTA
	LDA N.PLNZ
	LSR
	LDA I,0
	BCS 5$
	LDA I,20
5$:	CLC
	ADC I,20
	ADC A,PRPDEL		;CARRY CLR (ADD PERCENTAGE DELTA)
	STA TEMP1
	LDA A,PRPDEL+1		;MSB
	ADC I,0
	STA TEMP1+1
	LDA N.PLNZ
	LDX I,-8
	JSR MULTPL
	TYA
	SEC
	SBC TEMP1
	TAY
	TXA
	SBC TEMP1+1
10$:	BIT GMEND0
	BPL 15$			;NORMAL
	STA TEMP1
	TYA
	JSR MULTB4
	TAY
	LDX TEMP1
	JSR D.COMP		;RETURNING
15$:	STY PLSTAT+10		;Z DELTA
	STA PLSTAT+11		;Z DELTA
	RTS
;
PLNZND:	STY A,MM.YL
	LDY I,3
10$:	LDA AY,PLNSND
	STA AY,MM.AL
	DEY
	BPL 10$
	STA ATGVAL
	JSR MRSAB0
	STX TEMP2		;MSB
	LSR TEMP2
	ROR
	ROR TEMP2
	ROR			;RESULT /4 MSB
	STA A,ATGDEL+1		;SET PLANE CLOSER SOUND(S)
	LDA TEMP2
	ROR
	AND I,0C0		;/4 LSB
	STA A,ATGDEL
	LDA I,0F8
	STA ATGVAL+1
	RTS
;
;BUMP GAME LEVEL
;
LVLSTP:	BIT GAMODE
	BPL 10$			;NOT IN ATTRACT
	INC OBJKLD
	BNE 10$
	INC OBJKLD+1
10$:	RTS



PLNLVL:	.BYTE 0,0,0,0,1,2,2,2,3,3,3,4,4,4,4,4,5

PLANE1:	.WORD -100,100
PLANE2:	.WORD -100,-100
PLPOSZ:	.BYTE -4,-10,-20,-30,-40,-50,-60,-70,-80
PLNSND:	.WORD 2800,0

	.SBTTL	CREATE RETURNING PLANE

NWENME:	CLC
	LDA I4YPOS
	ADC I,.EXPSY&0FF
	STA PLSTAT+2		;SET Y POSITION OF PLANE
	LDA I4YPOS+1
	ADC I,.EXPSY&0FF00/100
	STA PLSTAT+3
	LDX I,.EXPSX&0FF00/100
	LDY I,.EXPSX&0FF
	BIT PLDELX		;ENEMY ENTERS ON SIDE TO INTERCEPT PLAYER
	JSR DPABS
	TYA
	CLC
	ADC UNIV4X
	STA PLSTAT
	TXA
	ADC UNIV4X+1
	STA PLSTAT+1
	JSR PLNZD
	LDA I,80
	STA PLSTAT+6		;ENABLE PLANE
	LDA I,1
	STA PLSTAT+5
	LDA GMEND0
	AND I,81
	STA GMEND0		;SET FLAG
	LSR
	BCC 10$			;NOT EOL
	BIT GAMODE
	BPL 10$			;ONLY IN PLAY
	LDA I,80
	STA GMEND1		;EOL
10$:	RTS
	.PAGE
	.SBTTL UPDATE OBJECTS (POSITION, ROTATION, & STATUS)
;
;PLANE/DRONE MOTION
;
PLMOTN:	LDX I,N.MOB		;CHECK ALL 3 PLANES
10$:	STX SAVX+1
	TXA
	BNE 12$			;ONLY PLANE/DRONE
	LDA ZX,PLOBDB+18
	BMI 20$			;BLIMP
12$:	LDA ZX,PLOBDB+6
	BMI 17$			;PLANE FLIGHT (D7)
	ASL
	BMI 16$			;PLANE EXPLOSION (D6)
	LSR
	LSR
	BCC 20$			;ABSENT/DRONE EXPLOSION
	JSR UPDRNE		;UPDATE DRONE
	JMP 20$
16$:	LDA GMEND1
	AND I,10
	BNE 20$			;EOL
	JSR UPDPLN
	JSR UPPLEX
	JMP 20$
17$:	AND I,20		;(D5)
	BEQ 18$			;ALREADY ROTATED & CENTER CROSSED
	JSR FORMTN
	LDX SAVX+1
18$:	LDA PROP.F
	AND I,7F		;ALLOW PLANE PROP
	STA PROP.F
	JSR UPDPLN		;CHECK FOR ATTACK (OR @ 17$)
	JSR UPDMOB
	JSR PLONSN
20$:	LDA SAVX+1
	SEC
	SBC I,L.OBJ
	TAX
	BCS 10$
	RTS
;
	.SBTTL	UPDATE PLANE POSITION AND ROTATION
;
;	ENTRY			EXIT
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	DC			BLITZED
;
UPDPLN:	LDA PLSTAT+0C	
	STA TEMP2
	LDA PLSTAT+0D
	JSR DIVBY4
	TAY
	LDA TEMP2
	CLC
	ADC PLSTAT		;UPDATE X POSITION
	STA PLSTAT
	TYA
	ADC PLSTAT+1		;MSB BYTE
	STA PLSTAT+1
	LDA PLSTAT+0E
	STA TEMP2
	LDA PLSTAT+0F
	JSR DIVBY4
	TAY
	LDA TEMP2
	CLC
	ADC PLSTAT+2		;UPDATE Y POSITION
	STA TEMP2
	TYA
	ADC PLSTAT+3		;MSB BYTE
	TAY
	LDA TEMP2
	CMP I,PFPLOW&0FF
	TYA
	SBC I,PFPLOW/100
	BCS 10$
	LDA I,PFPLOW&0FF
	LDY I,PFPLOW/100
	BPL 20$			;BLIMP
10$:	LDA TEMP2
	CMP I,PFPHI&0FF
	TYA
	SBC I,PFPHI/100
	LDA TEMP2
	BCC 20$
	LDY I,PFPHI/100
	LDA I,PFPHI&0FF
20$:	STY PLSTAT+3
	STA PLSTAT+2
30$:	RTS
;
;
;
UPDMOB:	LDY PLSTAT+0C
	LDX PLSTAT+0D
	JSR DPABS
	CPY I,P.MAXR&0FF
	SBC I,P.MAXR&0FF00/100
	LDY PLSTAT+0C
	LDX PLSTAT+0D
	BCC 5$
	LDY I,P.MAXR&0FF
	LDX I,P.MAXR&0FF00/100
	BIT PLSTAT+0D
	JSR DPABS
5$:	JSR D.COMP
7$:	STY PLSTAT+12		;PLANE X/Y ROTATION=-4*DELTA X
	STX PLSTAT+13
	LDA PLSTAT+6
	AND I,10
	BEQ 25$			;PLANE ROTATED AWAY (X/Z ROTATION)
12$:	LDA PLSTAT+15
	BMI 15$
	ORA PLSTAT+14
	BEQ 25$			;ROTATED
14$:	LDA I,-40
	LDY I,-1
	BMI 20$			;ALWAYS
15$:	LDA I,40
	LDY I,0
20$:	CLC
	ADC PLSTAT+14
	STA PLSTAT+14
	TYA
	ADC PLSTAT+15
	STA PLSTAT+15
	RTS
25$:	LDA PLSTAT+6
	AND I,0EF
	STA PLSTAT+6		;D4=0 (PLANE FACING AWAY)
	JSR FREPAR		;FREE PARALLEL DRONES
	LDA PLSTAT+0B		;Y POSITION/4
	LDX PLSTAT+0A
	STX TEMP2
	JSR DIVBY4
	TAX
	LDY TEMP2
	JSR D.COMP
	STX PLSTAT+17		;DEFINED Y/Z ROTATION
	STY PLSTAT+16
	LDA PLSTAT+6
	AND I,30		;CHECK CENTER WINDOW CROSSING & ROTATION (X/Z)
	BEQ 35$			;YES
	JMP PLNDEL
35$:	CLC
	LDA PLSTAT+4		;UPDATE PLANE MOTION DEPTH
	ADC PLSTAT+10
	STA PLSTAT+4
	LDA PLSTAT+5
	ADC PLSTAT+11
	STA PLSTAT+5
	BIT GMEND0		;NORMAL PLANE
	BPL 50$			;YES
	LDA PLSTAT+1B
	JSR COMP
	JSR MULTB4
	CLC
	ADC PLSTAT+19
	STA PLSTAT+19
	LDA TEMP1
	AND I,3
	ADC PLSTAT+1A
	STA PLSTAT+1A
	LDX I,0			;RETURNING PLANE
	STX PLVALU
	LDA PLSTAT+5
	CMP I,P.MNDM		;MIN DEPTH?
	BCC 40$			;NO
	LDX I,0
	STX PLSTAT+19
	BIT GMEND1
	BMI 45$
	STX GMEND0		;CLR RETURNING (X=0)
	JSR PLNZD
	JSR PLNZND		;PLANE SOUND DELTAS
	LDA I,10
	STA PLSTAT+1A		;INITIALIZE DEPTH
40$:	RTS
45$:	LDA I,WO.END		;DISABLE PLANE (WO.END COUNTS)
	STA PLSTAT+7
	JMP PLNCLR
50$:	CLC
	LDA PLSTAT+19
	ADC PLSTAT+1B
	STA PLSTAT+19
	BCS 52$
	DEC PLSTAT+1A
52$:	LDA PLSTAT+5
	LDX VALFRC		;GET SCORE MULTIPLIER
	JSR MULTPL		;DEPTH*FRAC
	TXA
	STY TEMP2
	JSR DIVBY4
	JSR DIVBY4
	LDA TEMP2
	CMP VALMIN
	BCS 55$
	LDA VALMIN
55$:	STA PLVALU
	LDY PLSTAT+4
	CPY I,P.MNDP&0FF	;NORMAL PLANE
	LDA PLSTAT+5
	SBC I,P.MNDP&0FF00/100
	BPL PLNDEL		;NOT YET
P.UPD0:	BIT GMEND0
	BMI 5$
	LDA I,0C0		;ENABLE ENEMY & RETURNING PLANE SHELLS
	STA GMEND0
	LDA I,10
	STA MESTM2		;BEHIND YOU MESSAGE TIMER
	LDA PLSTAT+9
	AND I,80
	STA ENSIDE		;D7 = SIGN OF X POSITION
5$:	LDA I,WO.RTN
	STA PLSTAT+7		;DISABLE PLANE FOR WO.RTN FRAMES
	LDA I,0
	STA PLVALU		;CLR PLANE VALUE
	STA ATGVAL+1		;INSURE LOW FREQUENCY BACKGROUND SOUND
	STA PLSTAT+6		;CLR PLANE
	RTS
PLNDEL:	LDA PLSTAT+6
	AND I,20
	BEQ 2$
	RTS
2$:	LDX I,2			;CENTER CROSSED
	SEC
	LDA ZX,PLSTAT+8		;PLSTAT+10.
	SBC I,HORIZN
	STA XPOS
	LDA ZX,PLSTAT+9		;PLSTAT+11.
	SBC I,0
	STA XPOS+1
P.WINDW:STX SAVX		;OFFSET FOR Y DELTA
	LDA GMLEVL
	CMP I,5
	BCC 5$
	LDA I,4
5$:	ASL
	STA SAVY
	LDA ZX,PLSTAT+0D
	STA FLAG		;SET DELTA DIRECTION FLAG
	EOR XPOS+1
	STA FLAG+1		;POSITION .EOR. DELTA (SIGNS)
	LDY XPOS
	LDX XPOS+1
	JSR DPABS
	STY TEMP1		;X,Y=ABSOLUTE (POSITION)
	TYA
	LDY SAVY
	CMP AY,P.OLIM		;CHECK OUTER WINDOW (LSB)
	TXA
	SBC AY,P.OLIM+1		;		    (MSB)
	BCC P.INSD		;INSIDE
	LDA PLSTAT+19
	CMP I,4
	BCS 10$			;W/I DEPTH NO RETURN TO SCREEN
	LDA FLAG+1
	EOR I,0FF
	STA FLAG+1		;RETURN TO WARDS SCREEN CENTER
10$:	JMP P.WCHK
	
P.INSD:LDA TEMP1
	CMP AY,P.ILIM		;CHECK INNER WINDOW (LSB)
	TXA
	SBC AY,P.ILIM+1		;		    (MSB)
	BCC P.INER		;INSIDE INNER WINDOW
	LDA I,0FF
	STA FLAG+1		;NO DIRECTION CHANGES
	LDA I,.LEVLS*2
	JMP P.INR0		;POINT @ INNER WINDOW LIMITS
	
P.INER:	LDA FLAG+1
	EOR I,0FF
	STA FLAG+1		;REVERSE FLAG (HEAD AWAY FROM CENTER)
	LDA I,.LEVLS*4
P.INR0:	CLC
	ADC SAVY
	TAY
				;CONTINUE TO P.WCHK
;
;
	.SBTTL	PLANE WINDOW CHECK
;
P.WCHK:	LDA AY,P.ODLX
	STA DELTA
	LDA AY,P.ODLX+1
	STA DELTA+1
	LDX SAVX
	BIT FLAG+1		;DELTA TOWARDS LIMIT
	BPL 40$			;NEED TO REVERSE DIRECTION
	LDY ZX,PLSTAT+0C
	LDA ZX,PLSTAT+0D
	TAX
	JSR DPABS
	TYA			;X,Y=ABSOLUTE (DELTA)
	SEC
	SBC DELTA		;CURRENT DELTA-MAX DELTA
	STA TEMP1
	TAY
	TXA
	SBC DELTA+1
	TAX
	ORA TEMP1
	BEQ 25$			;CURRENT DELTA=MAX DELTA
	PHP			;SAVE CARRY
	TXA
	JSR DPABS		;ACC,Y=ABSOULTE (DELTA-MAX)
	CPY I,ACCEL+1
	SBC I,0
	BCS 30$			;ACCELERATE SO DELTA=MAX
	PLP			;	> ABSOLUTE (ACCELERATION)
	LDX DELTA+1		;ELSE SET DELTA TO MAX
	LDY DELTA
	BIT FLAG
	JSR DPABS
	LDX SAVX
	STA ZX,PLSTAT+0D	;SET DELTA
	STY ZX,PLSTAT+0C
25$:	LDX SAVX
	JMP P.WITR
30$:	PLP
	LDA I,ACCEL
	BCC 35$			;INCREASE DELTA (+ ACCEL)
	LDA I,-ACCEL		;ELSE DECEASE (- ACCEL)
35$:	LDX SAVX
	LDY ZX,PLSTAT+0D	;CURRENT DELTA
	BPL 50$			;PLUS
	BMI 45$			;ALWAYS
40$:	LDA I,ACCEL		;CHANGE DIRECTON
	LDY ZX,PLSTAT+0D	;CURRENT DELTA
	BMI 50$			;- (ACCEL +)
45$:	JSR COMP		;ELSE + (ACCEL -)
50$:	CLC
	LDY I,0
	ORA I,0			;SET SIGN
	BPL 55$
	DEY
55$:	ADC ZX,PLSTAT+0C
	STA ZX,PLSTAT+0C
	TYA
	ADC ZX,PLSTAT+0D
	STA ZX,PLSTAT+0D
P.WITR:	DEX	
	DEX
	LDA ZX,PLSTAT+8		;X DISPLAY
	STA XPOS
	LDA ZX,PLSTAT+9
	STA XPOS+1
	TXA
	BMI 10$
	JMP P.WINDW
10$:	RTS

;
PLONSN:	BIT GMEND0
	BMI 5$			;KEEP RETURNING ON SCREEN
	LDA N.PLNZ
	CMP I,5
	BCS 50$			;ELSE ONLY FIRST FOUR
5$:	LDA PLSTAT+19		;PLANE DEPTH
	STA A,MM.AL
	LDA PLSTAT+1A
	STA A,MM.AM
	LDA I,0A0		;SCALE WINDOW SIZE (1A0*1A0) BY DEPTH
	STA A,MM.XL
	LDX I,1
	STX A,MM.XM
	DEX			;X=0
	STX A,MM.YL	
	JSR MRSAB0		;MULTIPLIED
	LDA RESULT
	STA RESULT+1		;RESULT * ^100
	LDX I,0
	STX RESULT
	STA A,MM.XM
	STX A,MM.XL
	STX A,MM.YL
	LDY PFROTN
	LDX PFROTN+1
	JSR D.COMP		;ROTATE BY INVERSE OF UNIVERSE ROTATION
	JSR TRIG
	LDX RESULT
	JSR MRSLT0		;ROTATE WINDOW LIMIT (RESULT,+1=X,Y LIMIT(S))
	LDX I,2
10$:	STX SAVX
	SEC
	LDA ZX,PLSTAT		;PLANE POSITION
	SBC ZX,UNIV4X		;- UNIVERSE CENTER
	TAY
	LDA ZX,PLSTAT+1
	SBC ZX,UNIV4X+1
	STA TEMP2
	TAX
	JSR DPABS		;ABSOLUTE OF POSITION ON SCREEN
	LDX SAVX
	CPY RESULT		;COMPARE TO LIMIT
	SBC RESULT+1
	BCC 40$			;PLANE W/I WINDOW
	LDY RESULT		;ELSE SET POSITION TO LIMIT
	LDX RESULT+1
	BIT TEMP2
	JSR DPABS
	PHA
	LDX SAVX
	CLC
	TYA
	ADC ZX,UNIV4X		;ADD TO UNIVERSE CENTER
	STA ZX,PLSTAT		;SET PLANE POSITION
	PLA
	ADC ZX,UNIV4X+1
	STA ZX,PLSTAT+1
40$:	DEX
	DEX
	BPL 10$
50$:	RTS
	
P.OLIM:	.WORD 40		;RETURN TO CENTER LIMIT
	.WORD 80
	.WORD 120
	.WORD 1A0
	.WORD 200
	
P.ILIM:	.WORD 20,30,80		;HEAD AWAY FROM CENTER LIMIT
	.WORD 120,160
	
P.ODLX:	.2WORD 90,8C,84,7C	;OUTER DELTAS
	.WORD 80*2
	
	
P.IDLX:	.3WORD 8,14,1C,24	;MIDDLE DELTAS
	.WORD 2C*3

P.IIDL:	.3WORD 0,10,18,28	;INNER DELTAS
	.WORD 40*3
	
;
	.SBTTL	EXPLODING PLANE UPDATE
;
UPPLEX:	CLC
	LDA PLSTAT+0E
	ADC I,EX.ACY
	STA PLSTAT+0E
	LDA PLSTAT+0F
	ADC I,EX.ACY&0FF00/100
	STA PLSTAT+0F
	INC PLSTAT+7		;STEP EXPLOSION COUNTER
	LDA PLSTAT+7
	CMP I,.EXPL1
	BCC 20$
	BNE 10$
	LDX I,0
	STX SPIRAL		;CLR SPIRAL
	LDX I,10.		;START EXPLOSION SOUND/PICTURE
	STX EXCNTR
	LDX I,0F0
	STX EXPVAL
10$:	INC GTIMER+1
	LDX I,0
	STX PLSTAT+16
	STX PLSTAT+17
	CMP I,.EXPL2		;FINISHED?
	BCS UPPLX1		;YES
	BCC UPPLX0		;ALWAYS
20$:	LDY PLSTAT+16		;ROTATE TOWARDS GROUND
	CPY I,1
	LDA PLSTAT+17		;ABOUT X AXIS
	SBC I,0FE
	BMI UPPLX0
25$:	SEC
	TYA
	SBC I,60
	STA PLSTAT+16
	BCS UPPLX0
	DEC PLSTAT+17
UPPLX0:	CLC
	LDA PLSTAT+12		;ROTATE ABOUT Z AXIS
	ADC I,80
	STA PLSTAT+12
	LDA PLSTAT+13		;MSB
	ADC I,1
	STA PLSTAT+13
	RTS
UPPLX1:	BIT DRNSFL	
	BPL 20$			;NO DRONES IN FLIGHT (D7)
	LDX DRNSET
	LDA I,0
	STA DRNSFL		;CLR SELECT FLAG
	STA ZX,PLOBDB+6		;CLR DRONE
	LDY I,N.MOB
	JSR PLNXCG		;NEW PLANE=DRONE
	LDA I,0
	LDX I,5
5$:	STA ZX,PLSTAT+0C	;CLR VELOCITIES/ACCL
	DEX
	BPL 5$
	LDA I,20
	STA PLSTAT+7		;TIMEOUT FOR WINDOW CROSS
	JSR PLNZD0		;SET DEPTH 
	SOUND 1			;ANNOUNCE PLANE SOUND
	JSR SNDON		;ANNOUNCE PLANE
	LDA I,0A0
	LDX GMLEVL
	CPX I,5
	BCC 10$
	LDA I,0A8
10$:	STA PLSTAT+6		;PLANE IN FLIGHT
	RTS
20$:	LDA I,0
	STA PLSTAT+6		;CLR PLANE (DRONE(S) EXPLODING)
	LDA I,WO.CNT
	STA PLSTAT+7		;DISABLE FOR COUNTS
	RTS
;
;
;
PLNSCR:	LDA PLVALU
	LDX PLSTAT+5
	CPX I,10
	BCC NWSCRE		;PLANE PAST BONUS DEPTH
DRNSCR:	SOUND 3			;300 POINT SOUND
	JSR SNDON
	LDA I,DRNPNT		;XTRA POINTS IF DIM
NWSCRE:	CMP I,DRNPNT
	BNE 10$
	LDX I,14.		;300 POINT MESSAGE
	STX MESTM1
10$:	STA SCRTAB		;QUEUE SCORE
	RTS
;
;UPDATE FREE DRONES
;
UPDRNE:	LDY I,4			;ASSUME DRONE 1
	TXA
	BNE 10$
	LDY I,0			;DRONE 0
10$:	STY SAVY
	LDA AY,DRPOST		;COMPARE X POSITION TO DESTINATION
	CMP ZX,PLOBDB+8
	LDA AY,DRPOST+1
	LDY I,0
	SBC ZX,PLOBDB+9
	BMI 20$			;X > DEST
	LDA I,10		;ADD 10
	BPL 30$			;ALWAYS
20$:	LDA I,-10		;ADD -10
	DEY			;Y=0FF
30$:	CLC
	ADC ZX,PLOBDB
	STA ZX,PLOBDB
	TYA
	ADC ZX,PLOBDB+1
	STA ZX,PLOBDB+1
	LDY SAVY
	LDA AY,DRPOST+2		;COMPARE Y POSITION TO DESTINATION
	CMP ZX,PLOBDB+2
	LDA AY,DRPOST+3
	LDY I,0
	SBC ZX,PLOBDB+3
	BMI 40$			;Y > DEST
	LDA I,10		;ADD 10
	BPL 50$
40$:	LDA I,-10		;ADD -10
	DEY			;Y=0FF
50$:	CLC
	ADC ZX,PLOBDB+2
	STA ZX,PLOBDB+2
	TYA
	ADC ZX,PLOBDB+3
	STA ZX,PLOBDB+3
	BIT DRNSFL		;DRONE GROWTH?
	BPL 60$			;NO
	CPX DRNSET		;SELECTED DRONE?
	BNE 60$			;NO
	LDA I,0
	CMP ZX,PLOBDB+4
	LDA I,0E
	SBC ZX,PLOBDB+5
	BCS 60$
	LDA ZX,PLOBDB+4
	SBC I,60
	STA ZX,PLOBDB+4
	BCS 60$
	DEC ZX,PLOBDB+5
60$:	BIT GMEND1
	BMI 90$
	SEC
	LDA ZX,PLOBDB
	SBC UNIV4X
	TAY
	LDA ZX,PLOBDB+1
	SBC UNIV4X+1
	TAX
	STA TEMP1
	JSR DPABS		;DRONE SCREEN POSITION
	CPY I,0C0
	SBC I,5
	BCC 90$
	LDY I,0C0
	LDX I,5
	BIT TEMP1
	JSR DPABS
	STX TEMP1
	LDX SAVX+1
	TYA
	CLC
	ADC UNIV4X
	STA ZX,PLOBDB
	LDA TEMP1
	ADC UNIV4X+1
	STA ZX,PLOBDB+1
90$:	RTS
;
DRPOST:	.WORD 160,300,-180,380
;
;X=SOURCE, Y=DESTINATION
;
PLNXCG:	LDA I,L.OBJ-1		;OBJECT DB LENGTH
	STA TEMP1
10$:	LDA ZX,PLOBDB		;MOVE PLANE STATUS
	STA AY,PLOBDB		;INTO NEW DB
	INX
	INY
	DEC TEMP1
	BPL 10$
	RTS
	.SBTTL	UPDATE CENTER OF SCREEN VARIABLES
;
;
;
;
PFMOTN:				;
				;SET PLANE POSITION FLAG
				;
	LDY PLSTAT+8		;X SCREEN POSITION
	LDX PLSTAT+9
	JSR DPABS		;ABSOLUTE
	STY TEMP1
	STX TEMP1+1
	LDY PLSTAT+0A		;Y SCREEN POSITION
	LDX PLSTAT+0B
	JSR DPABS		;ABSOLUTE
	CLC
	TYA
	ADC TEMP1
	TAY
	TXA
	ADC TEMP1+1
	STA TEMP1
	TYA
	JSR MULTB4		;TEMP2=MSB(Y*4)+MSB(X*4)
	LDA PLSTAT+5
	ASL			;ADD MSB (Z POSITION)
	CLC
	ADC TEMP1
	TAX
	LDA I,20
	CPX I,8*3
	BCS 10$
	ASL
	CPX I,4*3
	BCS 10$
	ASL
10$:	BIT GRMODE
	BPL 20$
	LDA I,40		;GROUND MODE (SLOW MOTION)
20$:	STA TEMP3		;D7=CLOSE, D6=MIDDLE, D5=FAR
	LDX I,0
	LDA PLDELX
	BPL 30$
	DEX
30$:	STX TEMP1
	JSR MULTB4
	JSR DISCHK		;DISTANCE/POT CORRECTION
	STX A,PLYRDL
	STA A,PLYRDL+1		;SAVE PLAYER X DELTA
	TAY			;Y=MSB SCALED X DELTA
	CLC
	TXA
	ADC UNIV4X		;UPDATE UNIVERSE CENTER
	STA UNIV4X
	TYA
	ADC UNIV4X+1		;MSB
	STA UNIV4X+1
	CLC
	TXA
	ADC PFXSCR		;UPDATE PF CENTER
	STA PFXSCR
	TYA
	ADC PFXSCR+1		;MSB
	STA PFXSCR+1
	LDX I,0
	LDA PLDELX		;PLAYER DELTA X
	BPL 40$
	DEX
40$:	STX PFROTN+1
	ASL
	ASL
	ROL PFROTN+1
	ASL
	ROL PFROTN+1
	STA PFROTN
	TAY
	LDX PFROTN+1
	JSR DPABS
	CPY I,0
	SBC I,1
	BCC 50$
	LDX I,1
	LDY I,0
	BIT PFROTN+1
	JSR DPABS
	STX PFROTN+1
	STY PFROTN
50$:	LDA PLDELY
	LDX PLDELY+1
	STX TEMP1
	JSR DISCHK		;DISTANCE/POT CORRECTION
	STX RESULT+2
	STA RESULT+3
	STX A,PLYRDL+2		;Y PLAYER DELTA
	STA A,PLYRDL+3
	TXA
	LDX RESULT+3
	CLC
	ADC I4YPOS		;PLAYER Y POSITION
	TAY
	TXA
	ADC I4YPOS+1		;MSB OF Y POSITION
	TAX
	CPY I,PLYMIN&0FF
	SBC I,PLYMIN/100	;CHECK MIN
	BPL 60$
	LDY I,PLYMIN&0FF	;BELOW MIN SET TO MIN
	LDX I,PLYMIN/100
	BPL 70$			;ALWAYS
60$:	CPY I,PLYMAX&0FF	;CHECK MAX
	TXA
	SBC I,PLYMAX/100
	BMI 70$			;LESS THAN MAX
	LDY I,PLYMAX&0FF	;SET TO MAX
	LDX I,PLYMAX/100
70$:	STY I4YPOS		;SET PLAYER Y POSITION
	STX I4YPOS+1
;	JMP PFOBMN		;CONTINUE TO PFOBMN

PFOBMN:	LDX I,N.PFOB
	LDA GRNDCT
	BNE 10$
	LDA I,0
5$:	ORA AX,PFOBJ+8
	ORA AX,PFOBJ+9
	ORA AX,PFOBJ+0A
	TAY
	TXA
	SEC
	SBC I,L.PFOB
	TAX
	TYA
	BCS 5$
	LDX I,N.PFOB
	AND I,0C0		;CHECK FOR VISIBLE GROUND OBJECTS
	BNE 10$
	BIT GRMODE
	BPL 10$
	BIT GREND
	BMI 10$
	STA GRMODE
	JSR PFSOFF		;CLR GROUND SOUNDS
	LDA I,1
	STA PLSTAT+7		;START PLANES NEXT FRAME
10$:	LDA AX,PFOBJ+6		;STATUS
	STX SAVX
	BPL 15$
	JMP 45$			;PF ON HORIZON
15$:	SEC			;FREE PF OBJECTS
	LDA AX,PFOBJ
	SBC A,PLYRDL
	STA AX,PFOBJ
	TAY
	LDA AX,PFOBJ+1
	SBC A,PLYRDL+1
	STA AX,PFOBJ+1
	JSR WRAPIT
	BCC 20$
	LDX SAVX
	STA AX,PFOBJ+1
	TYA
	STA AX,PFOBJ
20$:	LDX SAVX
	CLC
	BIT GRMODE		;GROUND SEQUENCE ?
	BPL 25$			;NO
	LDA AX,PFOBJ+2		;DIVISOR
	STA A,DD.DML
	LDA AX,PFOBJ+3
	STA A,DD.DMM
	LDY I4YPOS		;DIVIDEND
	LDX I4YPOS+1
	JSR DDIVIT		;SCALE
	SEC
	TYA
	SBC I4YPOS		;SUBTRACT HORIZON POSITION
	TAY
	TXA
	SBC I4YPOS+1
	CPY I,0			;CHECK FOR VISIBILITY
	SBC I,8
	LDX SAVX
	BCC 25$			;STILL VISIBLE
	JSR PFSCLR		;CHECK PF SOUND CLR
	LDA I,80
	STA AX,PFOBJ+7		;DISABLE MOUNTAIN RANGE
	LDA I,0
	STA AX,PFOBJ+8		;CLEAR GROUND OBJECTS
	STA AX,PFOBJ+9
	STA AX,PFOBJ+0A
25$:	CLC
	LDA I,20		;STANDARD DELTA
	ADC A,PRPDEL		;ADD PERCENTAGING DELTA
	STA TEMP1
	SEC
	LDA AX,PFOBJ+4		;ADD DELTA TO EPTH
	SBC TEMP1
	STA AX,PFOBJ+4		;Y DEPTH LSB
	STA AX,PFOBJ+2		;X DEPTH LSB
	TAY
	LDA AX,PFOBJ+5		;MSB DELTA ADD
	SBC I,0
	STA AX,PFOBJ+5		;Y DEPTH MSB
	STA AX,PFOBJ+3
	CPY I,0C0		;MINIMUM DEPTH
	SBC I,1
	BCS 35$			;NO
	JSR PFSCLR		;CHECK PF SOUND CLR
	LDA AX,PFOBJ+6		;ON HORIZON
	ORA I,80
	STA AX,PFOBJ+6
	LDA I,0
	STA AX,PFOBJ+2
	STA AX,PFOBJ+4
	LDA I,0
	STA AX,PFOBJ+7
	LDA I,PF.XZ/100
	STA AX,PFOBJ+3
	LDA I,P.OBZI&0FF00/100
	STA AX,PFOBJ+5
35$:	TXA
	SEC
	SBC I,L.PFOB
	TAX
	BCC 40$
	JMP 10$
40$:	RTS
45$:	LDA I,0
	STA AX,PFOBJ+7		;CLR GROUND SEQUENCE PARAMS
	STA AX,PFOBJ+8		;CLR EXPLOSION COUNTERS
	STA AX,PFOBJ+9
	STA AX,PFOBJ+0A
	CLC			;PF OBJECT STILL PART OF HORIZON
	LDA I,P.OBDZ&0FF	;STANDARD DELTA
	ADC A,PRMDEL		;ADD PERCENT DELTA
	STA TEMP1
	LDA I,P.OBDZ/100	;MSB
	ADC A,PRMDEL+1
	STA TEMP1+1
	SEC
	LDA AX,PFOBJ+4		;Y DEPTH LSB
	SBC TEMP1		;DELTA LSB
	STA AX,PFOBJ+4		;NEW Y EPTH LSB
	TAY
	LDA AX,PFOBJ+5		;Y DEPTH MSB
	SBC TEMP1+1		;DELTA MSB
	STA AX,PFOBJ+5		;Y DEPTH MSB
	CPY I,P.MAXZ&0FF
	SBC I,P.MAXZ&0FF00/100	;MAX Y DEPTH ?
	BCS 35$			;NO
	LDA AX,PFOBJ+6		;ELSE START PF OBJECT 'FALL'
	AND I,0F
	STA AX,PFOBJ+6
	LDY PFXSCR
	LDX PFXSCR+1
	JSR D.COMP
	STA TEMP1
	LDX SAVX
	TYA
	STA AX,PFOBJ
	CLC
	LDA I,-3
	ADC AX,PFOBJ+6
	ASL
	ASL
	CLC
	ADC TEMP1
	AND I,1F
	CMP I,10
	BCC 50$
	ORA I,0F0		;SIGN EXTEND
50$:	STA AX,PFOBJ+1
	BIT GRMODE
	BPL 60$
	TAY
	JSR SPABS
	DEC GTIMER
	BMI 55$			;PF OBJECT TIME-OUT
	CMP I,8
	BCS 60$
55$:	LDA GRNDCT
	BEQ 60$
	DEC GRNDCT
	STX A,PFSNDF		;SET PF SOUND FLAG
	LDA I,0
	STA ATGVAL
	LDA I,0F8
	STA ATGVAL+1
	LDX I,-1B
	LDA A,PRPDEL
	CMP I,80
	ROR
	CLC
	ADC I,10
	JSR MULTPL
	STX A,ATGDEL+1
	STY A,ATGDEL
	LDX SAVX
	LDA I,1
	STA GTIMER
	JSR RANDOM
	AND I,3
	STA TEMP1
	ASL
	ADC TEMP1
	STA AX,PFOBJ+7		;RANDOM PF OBJECT GROUPS
	LDA I,80
	STA AX,PFOBJ+8
	STA AX,PFOBJ+9
	STA AX,PFOBJ+0A
60$:	LDA I,0
	STA AX,PFOBJ+2		;SET MOUNTAIN DEPTH ( MOTION & DISPLAY )
	LDA I,10
	STA AX,PFOBJ+3
	JMP 35$
;
;DISTANCE TO POT CORRECTION CONVERSION
;
DISCHK:	TAX			;X = LSB
	LDA TEMP1		;A = MSB
	STX TEMP2		;TEMP2 = LSB
	BIT TEMP3		;DISTANCE FLAG
	BVS 10$			;0.5 RANGE (0.625 * VALUE)
	BMI 10$			;0.25 RANGE (0.375 * VALUE)
	TXA
	ASL
	TAX
	LDA TEMP1
	ADC TEMP1		;1.0 RANGE (1.0 * VALUE)
	RTS
10$:	JSR DIVBY4		;GET 1/4 * VALUE
	STA TEMP2+1
	TXA
	BIT TEMP3
	BVS 20$
	SEC
	SBC TEMP2
	TAX
	LDA TEMP1
	SBC TEMP2+1		;ACC = MSB
	RTS
20$:	CLC
	ADC TEMP2
	TAX
	LDA TEMP1
	ADC TEMP2+1
	RTS
;
;
;
FREPAR:	LDX I,L.OBJ
10$:	JSR FRDRNE
	TXA
	SEC
	SBC I,L.OBJ
	TAX
	BCS 10$
	RTS
;
;
;
FRDRNE:	LDA ZX,PLOBDB+6
	CMP I,2			;PARALLEL
	BNE 10$			;NO
	LSR ZX,PLOBDB+6		;FREE DRONE
	CLC
	LDA PLSTAT
	ADC ZX,PLOBDB		;X LSB (OFFSET FROM PLANE)
	STA ZX,PLOBDB		;ABSOLUTE LOCATION
	LDA PLSTAT+1
	ADC ZX,PLOBDB+1		;X MSB
	STA ZX,PLOBDB+1
	CLC
	LDA PLSTAT+2
	ADC ZX,PLOBDB+2
	STA ZX,PLOBDB+2		;Y LSB (ABSOLUTE)
	LDA PLSTAT+3
	ADC ZX,PLOBDB+3
	STA ZX,PLOBDB+3		;Y MSB (ABSOLUTE)
10$:	RTS
;
;CHECK FOR FORMATION CHANGES
;
FORMTN:	LDY PLSTAT+8
	LDX PLSTAT+9
	JSR DPABS
	CPY I,0E0
	SBC I,0
	BCC 10$
	DEC PLSTAT+7
	BNE 20$
10$:	JSR PLNZD
	JSR PLNZND		;SET SOUND DELTAS
	LDA PLSTAT+6
	AND I,0DF
	STA PLSTAT+6
20$:	RTS
;
	.SBTTL	CHKSUM 4 (5800-5FFF) [FF]
CHKSM4:	.BYTE 0E8
	.PAGE
	.SBTTL GROUND SEQUENCE
;
;GROUND SEQUENCE
;
GRDISP:	LDA AX,PFOBJ+8
	ORA AX,PFOBJ+9
	ORA AX,PFOBJ+0A
	AND I,0C0
	BNE 5$
	RTS
5$:	STA FLAG+1		;SET (<>0)
	JSR SCENE1		;POSITION BEAM (X SAVED IN SAVX+1)
	LDY I,2
10$:	STY SAVY+2
	TYA
	CLC
	ADC SAVX+1
	STA SAVX+2
	TAX
	LDA AX,PFOBJ+8
	BMI 15$			;OBJECT PRESENT
	JMP 60$			;NO OBJECT
15$:	LDA OBJECT+4
	STA A,DD.DML
	LDA OBJECT+5
	STA A,DD.DMM
	LDX SAVX+1
	LDA SAVY+2
	ASL
	ASL
	STA TEMP2+1		;GROUND OBJECT # * 4
	LDA AX,PFOBJ+6
	AND I,0F
	STA TEMP1
	ASL
	ADC TEMP1		;CARRY CLR
	ASL
	STA TEMP3
	ADC TEMP2+1		;CARRY CLR
	STA TEMP2+1
	TAY
	LDX AY,PFOFFS+1
	LDA AY,PFOFFS
	TAY
	JSR DDIVIT
	STX A,MM.EM
	STY A,MM.EL
	LDY TEMP2+1
	LDX AY,PFOFFS+3
	LDA AY,PFOFFS+2
	TAY
	JSR DDIVIT
	STX A,MM.FM
	STY A,MM.FL
	LAH PFPNT0
	LXL PFPNT0
	LDY I,0
	STY VGBRIT		;NO INTENSITY
	JSR PROJECT		;PROJECT CENTER (0,0)
	LDA SAVY+2
	CLC
	ADC TEMP3+8
	TAY
	LDA AY,PFOBJN		;GET OBJECT #
	STA TEMP2		;TEMP2=OBJECT #
	TAX
	LDA V.BRIT
	CPX I,4
	BCC 24$
	ADC I,01F		;ADD 20
24$:	TAY
	LDA I,4
	JSR VGSTAT		;SET INTENSITY
	LDY I,4
	JSR PFXPOS		;DETERMINE POSITION
	BCS 26$
	JSR VGCNTR		;CENTER BEAM
	JSR VGVTR2		;POSITION BEAM
	CLC
	DEC FLAG		;VISIBLE OBJECT
26$:	LDX SAVX+2
	LDA AX,PFOBJ+8
	AND I,40
	BNE 40$			;EXPLOSION
	BCS 27$			;NOT ON SCREEN
	LDY TEMP2
	LDX AY,PFLOB		;OBJECT POINT LIST
	LDA AY,PFLOB+1
	PHA
	TYA
	LSR
	TAY
	LDA AY,.PFLOB
	TAY
	PLA
	JSR PROJECT		;PROJECT OBJECT POINTS
	LDY TEMP2
	LDA AY,PFODEC+1
	LDX AY,PFODEC
	JSR DECMAP		;DECODE POINTS
	JSR GRCOLN		;CHECK FOR SHELL TO GROUND OBJ COLLISION
27$:	LDA TEMP2
	CMP I,4
	BCC 35$			;PASSIVE GROUND OBJECTS
28$:	LDA SAVY+2
	ASL
	ASL
	ADC TEMP3		;CARRY CLR
	TAY
	LDA AY,PFOBLN
	ADC UNIV4X		;CARRY CLR
	STA XCOMP
	LDA AY,PFOBLN+1
	ADC UNIV4X+1
	STA XCOMP+1
	LDA AY,PFOBLN+2
	STA XCOMP+2
	LDA AY,PFOBLN+3
	STA XCOMP+3
	JSR SHLAUN		;LAUNCH SHELL AT PLAYER
35$:	JMP 60$
40$:	BCS 35$			;NOT ON SCREEN
	LDX SAVX+2
	LDA AX,PFOBJ+8
	AND I,0F
	STA TEMP1
	TAY
	LDA AY,PFEXSZ		;PF EXPL SCALE SIZE
	BMI 45$
	JSR VGSCA1
	LDA I,EXCRCL/100
	LDX I,EXCRCL&0FF
	JSR VGJSRL
45$:	LDY TEMP1
	LDA AY,PFEXSZ+6		;PF EXPL SCALE SIZE
	BMI 50$
	JSR VGSCA1
	LDA I,EXCRCL/100
	LDX I,EXCRCL&0FF
	JSR VGJSRL
50$:	LDA I,1
	JSR VGSCA1		;RESTORE PROPER SCALE
	LDX SAVX+2
	INC AX,PFOBJ+8
	LDA AX,PFOBJ+8
	CMP I,0C6
	BCC 60$
	LDA I,0
	STA AX,PFOBJ+8
55$:	LDX SAVX+1
	LDA AX,PFOBJ+8
	ORA AX,PFOBJ+9
	ORA AX,PFOBJ+0A
	AND I,0C0
	BNE 60$
	JSR PFSCLR
60$:	LDY SAVY+2
	DEY
	BMI 65$
	JMP 10$
65$:	RTS
;
;	GROUND SHELL MOTION ROUTINE ( INCLUDE DISPLAY & PLAYER CD )
;
;	ENTRY			EXIT
;ACC	DC			DC
;X	DC			DC
;Y	DC			DC
;
;USES - GRSHLS,OBJECT,SAVX+1,POINTR(+1),GREND,XPOS,BULPOS,TEMP1(+1)
;CALLS - POSITP,SETGRS,DSPGRS
GRSMTN:	LDX I,NGRSHL		;GROUND SHELLS
5$:	STX SAVX+1
	LDA AX,GRSHLS+5		;SHELL IN FLIGHT?
	BMI 10$
	JMP 55$			;NO
10$:	LDY I,0
15$:	LDA AX,GRSHLS
	STA AY,OBJECT
	INX
	INY
	CPY I,6
	BCC 15$
	AND I,3F		;ACC = OBJECT+5
	STA OBJECT+5		;D7=STATUS BIT 
	JSR POSITP		;ADD HORIZN ADJ
	JSR SETGRS
	BCC 20$
	LDY OBJECT+4
	LDA OBJECT+5
	CPY I,1
	SBC I,3
	BCS 40$
	LDX SAVX+1
	JMP 52$
20$:	JSR DSPGRS
	LAH H.MAP
	STA POINTR+1
	LXL H.MAP
	STX POINTR
	LDA OBJECT+4
	CMP I,0
	LDA OBJECT+5
	SBC I,1
	BCS 40$
	BIT GREND
	BMI 40$			;EOL
	LDA I,80
	STA GREND		;SHELL CD
	LDX I,3
30$:	LDA ZX,XPOS
	STA AX,BULPOS
	DEX
	BPL 30$
40$:	LDX SAVX+1		;SHELL OFFSET
	LDA AX,GRSHLS+5		;Z POS MSB
	STA TEMP1
	AND I,3F
	STA TEMP1+1
	BEQ 52$
	CLC
	LDA AX,GRSHLS+0B	;STEP X POSITION
	ADC AX,GRSHLS+6
	STA AX,GRSHLS+0B	;FRACTIONAL
	LDA AX,GRSHLS+7
	ADC AX,GRSHLS
	STA AX,GRSHLS
	LDA AX,GRSHLS+0A
	ADC AX,GRSHLS+1		;MSB OF POSITION
	STA AX,GRSHLS+1
	CLC
	LDA AX,GRSHLS+0D	;STEP Y POSITION
	ADC AX,GRSHLS+8
	STA AX,GRSHLS+0D
	LDA AX,GRSHLS+9
	ADC AX,GRSHLS+2
	STA AX,GRSHLS+2
	LDA AX,GRSHLS+0C
	ADC AX,GRSHLS+3		;MSB Y POSITION
	STA AX,GRSHLS+3
	LDA I,-1
	BIT TEMP1
	BVC 45$
	ASL
45$:	CLC
	ADC TEMP1+1
	STA TEMP1+1
	PHP
	LDA AX,GRSHLS+5
	AND I,0C0
	ORA TEMP1+1
	STA AX,GRSHLS+5
	PLP
	BMI 50$
	BNE 55$
50$:	LDA I,80
	STA AX,GRSHLS+5
	LDA I,0E0
	STA AX,GRSHLS+4
	BNE 55$			;ALWAYS
52$:	LDA I,0
	STA AX,GRSHLS+5		;CLR SHELL
55$:	TXA
	SEC
	SBC I,GRLSHL
	TAX
	BCC 60$
	JMP 5$			;DO ALL SHELLS
60$:	RTS
;
PFEXSZ:	.BYTE 5,4,3,2,-1,-1
	.BYTE -1,-1,5,4,3,2
;
;
GRCOLN:	LDY I,N.SHL
1$:	STY SAVY		;SHELL OFFSET
	LDA AY,SHELLS+7
	BPL 4$			;SHELL NOT ACTIVE
	ASL
	BMI 4$			;ENEMY SHELL
	SEC
	LDX AY,SHELLS+5		;SHELL DEPTH
	LDA AY,SHELLS+4
	SBC OBJECT+4		;DIFF WITH OBJECT DEPTH
	TAY
	TXA
	SBC OBJECT+5
	TAX
	JSR DPABS		;ABSOLUTE OF DEPTH DIFF
	CPY I,40
	SBC I,2
	LDY SAVY
	BCC 5$
4$:	JMP 40$			;NO COLLISION (Z AXIS)
5$:	SEC
	LDA AY,SHELLS		;SHELL X POS
	SBC UNIV4X		; - UNIVERSE X POS
	STA TEMP1
	LDA AY,SHELLS+1		;MSB X POS
	SBC UNIV4X+1
	TAX
	LDA TEMP1		;ACTUAL X POS
	SEC
	SBC OBJECT		;- OBJECT CENTER X POS
	STA XCOMP		;XCOMP = SHELL X - OBJECT X
	TXA			;MSB X POS
	SBC OBJECT+1
	STA XCOMP+1		;MSB
	SEC
	LDA AY,SHELLS+2
	SBC OBJECT+2
	STA YCOMP		;YCOMP=OBJECT-SHELL(YPOS)
	LDA AY,SHELLS+3
	SBC OBJECT+3
	STA YCOMP+1
	LDA SAVY+2
	ASL
	ASL
	ASL
	STA TEMP1
	LDX SAVX+1
	LDA AX,PFOBJ+6
	AND I,0F
	STA TEMP1+1
	ASL
	ADC TEMP1+1		;CARRY CLR
	ASL
	ASL
	ADC TEMP1		;CARRY CLR
	TAY
	INY
	INY
	LDX I,2			;START WITH Y
10$:	LDA ZX,XCOMP
	CMP AY,PFOCOL
	LDA ZX,XCOMP+1
	SBC AY,PFOCOL+1
	BMI 40$			;LESS THAN MIN
	LDA AY,PFOCOL+4
	CMP ZX,XCOMP
	LDA AY,PFOCOL+5
	SBC ZX,XCOMP+1
	BMI 40$			;MORE THAN MAX
	DEY
	DEY
	DEX
	DEX
	BPL 10$			;REPEAT FOR X
	LDA TEMP2		;POINTS BY OBJECT TYPE
	LSR
	TAY
	LDA AY,PFSCRE		;PF OBJECT SCORES
	JSR NWSCRE		;GIVE SCORE
	JSR LVLSTP
	LDA I,0F0
	STA EXPVAL
	LDA I,7
	STA EXCNTR
	LDY SAVY
	LDA I,0
	STA AY,SHELLS+7		;CLEAR SHELL
	LDX SAVX+2
	LDA AX,PFOBJ+8		;EXPLOSION
	ORA I,040
	STA AX,PFOBJ+8
40$:	LDA SAVY		;SHELL OFFSET
	SEC
	SBC I,L.SHL
	TAY
	BCC 45$
	JMP 1$
45$:	RTS
;
PFOBJN:	.BYTE 0,2,6
	.BYTE 0,0,6
	.BYTE 4,2,6
	.BYTE 4,4,6
;
PFOBLN:	PFCOL -96.,27.
	PFCOL 56.,3
	PFCOL 72.,3
	PFCOL -120.,3
	PFCOL 24.,19.
	PFCOL 40.,19.
	PFCOL -8,3
	PFCOL 8,3
	PFCOL 40.,19.
	PFCOL -104.,19.
	PFCOL 72.,3
	PFCOL 88.,3
;
PFOBJL:	PFCOL 0,8

PFSCRE:	.BYTE 10.,10.,25.,25.	;PF OBJECT SCORE VALUES
;
;STANDARD PLAYER COLLISION DETECT
;XPOS,+1,YPOS,+1=CENTER OF OBJECT (SCREEN POSITION)
;POINTR,+1=TABLE OF DECODE POINT OFFSETS (FOR DECMAP)
;CS=COLLISION
;
PLYCOL:	LDY I,0
10$:	LDA NY,POINTR
	STY SAVY
	CMP I,0FF
	BEQ 30$			;NO MORE POINTS
	AND I,0FE
	TAX
	STX SAVX		;POINT OFFSET
	JSR PCOLX		;CHECK X CD
	BCC 12$			;X W/I WINDOW
	LDA TEMP1
	STA TEMP1+1
	LDX I,0F0
	JSR PCOLX		;CHECK PREV X
	BCC 12$
	LDA TEMP1
	EOR TEMP1+1
	BPL 20$			;BOTH X SAME SIGN
12$:	LDX SAVX
	JSR PCOLNY		;NORMALIZE Y
	BPL 15$
	LDX I,0F0
	JSR PCOLNY		;NORMALIZE PREV Y
	BMI 20$			;NO Y CD
15$:	CLC			;GROUND COLLISION
	RTS
20$:	LDA SAVX
	CLC
	ADC I,3
	TAX
	LDY I,3
25$:	LDA AX,DB.TRP+2
	STA AY,DB.TRP+0F2	;PREV=CURRENT
	DEX
	DEY
	BPL 25$
	LDY SAVY
	INY
	BPL 10$			;ALWAYS
30$:	SEC
	RTS
;
;PLAYER COLLISION DETECT X AXIS CHECK
;
PCOLX:	CLC
	LDA AX,DB.TRP+2		;X LSB
	ADC XPOS
	TAY
	LDA AX,DB.TRP+3		;X MSB
	ADC XPOS+1
	TAX
	STA TEMP1
	JSR DPABS		;ABSOLUTE
	CPY I,PCDX&0FF
	SBC I,PCDX/100
	RTS
;
;NORMALIZE Y VALUE TO SCREEN POSITION (POSITIVE)
;
PCOLNY:	CLC			;X=OFFSET
	LDA AX,DB.TRP+4
	ADC YPOS		;SCREEN POSITION CENTER OF OBJECT
	TAY
	LDA AX,DB.TRP+5
	ADC YPOS+1
	CPY I,PCDY&0FF
	SBC I,PCDY/100
	RTS
;
;
;MODIFIES-GRSHLS,SAVX,TEMP1.+1,TEMP2
;
;OBJECT..+5 POSITION OF OBJECT
;XCOMP,+1;YCOMP,+1 OFFSET FOR GUN BARREL
;XPOS,+1 SCREEN X POSITION OF OBJECT
;
SHLAUN:	LDA FRAME
	AND I,3			;1 OUT OF 4 FRAMES
	STA SHMODE
	BEQ SHLAU0
SHLAUX:	RTS
SHLAU0:	LDY XPOS		;X POSITION LSB
	LDX XPOS+1		;MSB
	JSR DPABS
	CPY I,1
	SBC I,3
	BCS SHLAUX		;X OFF SCREEN
	LDX GMLEVL
	DEX
	DEX
	BMI SHLAUX		;NO GROUND SHELLS @ LOWER LEVELS
	LDY AX,GRSLVL		;GET NUMBER OF SHELLS (OFFSET)
SHLAU1:	LDA AY,GRSHLS+5
	BPL 10$
	JMP SHLAU2		;IN USE
10$:	LDA I,10		;16 BIT DIVIDE
	STA A,DD.NL
	LDA I,0
	STA TEMP2
	STA AY,GRSHLS+0B	;FRACTIONAL POSITION
	STA AY,GRSHLS+0D
	LDA OBJECT+4
	STA AY,GRSHLS+4
	LDA SHMODE
	LSR
	AND I,40
	ORA OBJECT+5
	ORA I,80		;D7 = 1 SHELL IN FLIGHT
	STA AY,GRSHLS+5
	LDX OBJECT+5
	INX
	LDA I,0FF
	BIT SHMODE
	BPL 15$
	LDA I,0FE
15$:	STA TEMP1
	TXA
	AND TEMP1
	BIT SHMODE
	BPL 40$
	JSR DIVBY2
40$:	STA A,DD.DMM
	LDA TEMP2
	STA A,DD.DML
	BIT SHMODE		;SHELL MODE
	BPL 45$
	ASL A,PLYRDL
	ROL A,PLYRDL+1
	ASL A,PLYRDL+2
	ROL A,PLYRDL+3
45$:	INY
	INY			;POINT @ Y VALUES
	LDX I,2
50$:	STX SAVX		;UNIVERSE VALUE OFFSET
	CLC
	LDA ZX,OBJECT		;LAUNCHING VALUE OFFSET
	ADC ZX,XCOMP		;GUN OFFSET IN OBJECT
	STA AY,GRSHLS		;SHELL POSITION
	STA TEMP1
	LDA ZX,OBJECT+1		;MSB LAUNCH
	ADC ZX,XCOMP+1
	STA AY,GRSHLS+1		;MSB SHELL POSITION
	STA TEMP1+1
	SEC
	LDA ZX,UNIV4X		;ESTABLISH SHELL DELTA TO PLAYER
	SBC TEMP1
	STA A,D.NMLH
	LDA ZX,UNIV4X+1
	LDX I,0
	SBC TEMP1+1		;MSB OF DELTA
	JSR GRSRAN		;DIVIDE BY DEPTH OF SHELL ( + RANDOM OFFSET)
	DEY
	DEY
	LDX SAVX
	DEX
	DEX
	BPL 50$
	JMP SETDIV		;RESET DIVIDE REGISTERS (DEFAULT)
SHLAU2:	TYA
	SEC
	SBC I,GRLSHL
	TAY
	BCC SHLAU3
	JMP SHLAU1
SHLAU3:	RTS			;NO SHELLS AVAILABLE
;
GRSRAN:	BPL 5$
	DEX			;X = 0FF
5$:	STA A,D.NMHL
	STX A,D.NMHH		;MSB
	STA A,D.SZXD		;START DIVIDE
	MATSTT
	LDA A,YLOW		;MIDDLE
	STA TEMP1
	LDA A,YHIGH		;MSB
	STA TEMP1+1
	STA A,D.DYPL		;DISPLAY LOW QUOTIENT
	LDA A,YHIGH		;LSB
15$:	STA TEMP2
	TYA
	LSR
	LSR
	BCS 30$			;ODD GROUND SHELLS
	JSR RANDOM
	CLC
	ADC TEMP2		;TO DELTA (LSB)
	STA AY,GRSHLS+6		;DELTA LSB
	LDX I,0
	PHP			;SAVE CARRY
	LDA POLYH
	AND I,1F
	CMP I,10
	BCC 20$
	DEX
	ORA I,0F0
20$:	PLP			;RESET CARRY
	ADC TEMP1
	STA AY,GRSHLS+7		;DELTA MIDDLE
	TXA
	ADC TEMP1+1
	STA AY,GRSHLS+0A	;DELTA MSB
	RTS
30$:	LDA TEMP2
	STA AY,GRSHLS+6		;LSB
	LDX SAVX
	LDA AX,PLYRDL
	CLC
	ADC TEMP1		;COMPENSATE FOR PLAYER'S MOTION
	STA AY,GRSHLS+7		;MIDDLE
	LDA AX,PLYRDL+1
	ADC TEMP1+1
	STA AY,GRSHLS+0A	;MSB
	RTS
;
GRSLVL:	.BYTE 0,GRLSHL
	.BYTE GRLSHL*3,NGRSHL
;
;BLIMP MOTION
;
BLMOTN:	LDA BLOBJ+18		;STATUS
	BMI 5$
2$:	JMP 45$			;NOT IN FLIGHT
5$:
	JSR PFTRIG
	LDX I,5
10$:	LDA ZX,BLOBJ		;SET OBJECT PARAMS
	STA ZX,OBJECT
	DEX
	BPL 10$
	JSR POSITP		;CALCULATE POSITION
	JSR SETBM		;SET BEAM
	LDX I,3
15$:	LDA ZX,XPOS
	STA ZX,BLOBJ+8		;SAVE POSITION
	DEX
	BPL 15$
	BCS 2$			;NOT VISIBLE
	BIT BLOBJ+6
	BVC 30$
	LDX BLOBJ+7
	LDY I,.BLEX
	JSR BLEXPL
	CLC
	LDA BLOBJ+7
	ADC I,3
	STA BLOBJ+7
	CMP I,20
	BCC 25$
	JMP 40$
25$:	RTS
30$:	LDY I,0C0
	LDA I,4
	JSR VGSTAT
	LDX I,7			;BLOBJ OBJECT
	LDY I,.BLMP
	JSR PLNABZ		;ROTATE ABOUT Z
	LDY BLOBJ+14
	TYA
	ORA BLOBJ+15
	BEQ 32$			;NO ROTATION
	LDA BLOBJ+15
	JSR TRIG		;ANGLE ABOUT Y
	LDX I,.BLMP*2
	JSR YAXIS		;ROTATE ABOUT Y
32$:	LDA A,DB.TRP+<35.*6+3>	;BLIMP GUN POINT
	STA TEMP1
	LDA A,DB.TRP+<35.*6+2>
	JSR MULTB4
	STA XCOMP
	LDA TEMP1
	STA XCOMP+1
	LDA A,DB.TRP+<35.*6+5>
	STA TEMP1
	LDA A,DB.TRP+<35.*6+4>
	JSR MULTB4
	STA YCOMP
	LDA TEMP1
	STA YCOMP+1
	JSR SHLAUN		;LAUNCH SHELL @ PLAYER
	LDX I,.BLMP*2
	JSR D.LOOP		;SCALE BY DEPTH
	LAH DBLIMP
	LXL DBLIMP
	JSR DCMPA0		;DECODE POINTS
	CLC
	LDA BLOBJ		;UPDATE X POSITION
	ADC BLOBJ+0C
	STA BLOBJ
	TAY
	LDA BLOBJ+1		;MSB
	ADC BLOBJ+0D
	STA BLOBJ+1
	TAX
	SEC
	TYA
	SBC UNIV4X
	TAY
	TXA
	SBC UNIV4X+1
	JSR WRAPIT
	BCC 35$
	CLC
	TYA
	ADC UNIV4X
	STA BLOBJ
	TXA
	ADC UNIV4X+1
	STA BLOBJ+1
35$:	CLC
	LDA BLOBJ+4		;UPDATE Z POSITON
	ADC I,-80
	STA BLOBJ+4
	LDA BLOBJ+5		;MSB
	ADC I,-1
	STA BLOBJ+5
	CMP I,1
	BPL 55$	
40$:	LDA I,0			;CLR BLOBJ
	STA GRDSP
	STA BLOBJ+18
	STA BLOBJ+6		;NO DRONE
45$:	BIT GMEND0
	BMI 50$
	BIT GRMODE
	BPL 50$			;ONLY IN GROUND MODE
	LDA GRDSP
	CMP I,11
	BCC 50$
	JMP INITBP
50$:	RTS
55$:	LDA BLOBJ+14
	TAY
	ORA BLOBJ+15
	BEQ 60$
	LDX BLOBJ+15
	BMI 65$
	TYA
	ADC I,-28
	STA BLOBJ+14
	BCS 60$
	DEC BLOBJ+15
60$:	RTS
65$:	TYA
	ADC I,28
	STA BLOBJ+14
	BCC 70$
	INC BLOBJ+15
70$:	RTS
;
BLEXPL:	STX TEMP1
10$:	STY SAVY
	LDX AY,BLEXVC
	LDA TEMP1
	JSR MULTPL
	STX XCOMP+1		;VCTR X
	STY XCOMP
	LDY SAVY
	LDX AY,BLEXVC+1
	LDA TEMP1
	JSR MULTPL
	STX YCOMP+1		;VCTR Y
	STY YCOMP
	LDA I,0
	STA VGBRIT		;NO INTENSITY
	JSR VGVTR2		;POSITION VCTR
	LDY SAVY
	LDX AY,BLEXPC+1
	LDA AY,BLEXPC
	LDY I,0C0
	JSR VGVTR		;PICTURE VCTR
	LDY SAVY
	DEY
	DEY
	BPL 10$
	RTS
;
BLEXVC:	.BYTE 0,-4,2,0,2,-4,-4,0
	.BYTE 0,-2,-2,0,-4,0,0,2
	.BYTE -2,2,2,2,0,2,2,0
	.BYTE 2,-2,0,-2
;
BLEXPC:	.BYTE 1,4,4,0,2,-2,0,4
	.BYTE -2,2,-2,4,3,1,2,0
	.BYTE 1,1,1,2,1,-3,-3,-3
	.BYTE -1,-3,-1,2
;
.BLEX	=.-BLEXPC-2
;
;
;
WRAPIT:	TAX
	STA TEMP1		;SAVE X SIGN
	JSR DPABS		;ABSOLUTE X POSITION
	CPY I,1
	SBC I,0C
	BCC 10$			;< OFF SCREEN LIMIT
	LDX I,-0C01&0FF00/100
	LDY I,-0C01&0FF
	BIT TEMP1		;CHANGE SIDES (CROSSED LIMIT BY MOTION)
	JSR DPABS
	SEC			;LIMIT CROSS
10$:	RTS
;
;
;
DSPGRS:	LDY I,0C0
	LDA I,4
	JSR VGSTAT		;INTENSITY
	JSR TRNS0		;ROTATE ABOUT 0
	LDA OBJECT+5
	LSR
	BCS 10$			;ALTERNATE SHELL PICTURES
	LAH BULLT0
	LXL BULLT0
	BCC 20$			;ALWAYS
10$:	LAH BULLT1
	LXL BULLT1
20$:	STA POINTR+1
	STX POINTR
	LDY I,17		;4 POINTS
30$:	LDA NY,POINTR
	STA AY,DB.TRP		;SET POINTS IN RAM
	DEY
	BPL 30$
	LDX I,12
	JSR D.LOOP
	LAH BULLDE
	LXL BULLDE
	JMP DCMPA0		;DECODE POINTS
;
	.SBTTL	CHKSUM 5 (6000-67FF) [FF]
CHKSM5:	.BYTE 64
	.SBTTL DISPLAY

	.SBTTL	PLAYFIELD
SCENE:	LDY I,0
	STY FLAG
	STY FLAG+1
	STY OBJECT+2		;Y POSITION
	STY OBJECT+3
	STY OBJECT+4
	LDA I,HORZ/100
	STA OBJECT+5
	LDY PFXSCR		;LEFT EDGE X COOR (*4)
	LDX PFXSCR+1
	JSR D.COMP
	AND I,7
	SEC
	SBC I,10
	STY TEMP2
	STY OBJECT
	STA OBJECT+1		;X POSITION = -(EDGE OF SCREEN - OFFSET)
	STA TEMP2+1		;TEMP2,TEMP2+1= X COOR
	LDX PFXSCR+1
	LDA PFXSCR
	BNE 10$
	DEX
10$:	TXA
	CLC
	ADC I,8
	AND I,18
	STA SAVX+1
	LSR
	LSR
	STA TEMP1
	LSR
	ADC SAVX+1		;CARRY CLR
	ADC TEMP1
	STA SAVX+1		;SAVX=DB OFFSET (PFOBJ 11. BYTES/)
	LDA I,3
	STA SAVX+2		;SAVX+2=COUNTER
	JSR POSITH		;ADD HORIZN ADJ
	JSR PLACBM
	LDX SAVX+1		;SEGMENT OFFSET
15$:	STX SAVX+1		;PF OBJECT DB OFFSET
	LDA AX,PFOBJ+6		;SEGMENT STILL IN PLACE
	BPL 20$			;NO (DISPLAY STRAIGHT LINE)
	AND I,0F
	STA SAVY+1
	LDA AX,PFOBJ+2
	STA OBJECT+4
	LDA AX,PFOBJ+3
	STA OBJECT+5
	LDA TEMP2
	STA OBJECT		;X CENTER OF OBJECT (LSB)
	CLC
	LDA TEMP2+1
	ADC I,PF.SGX&0FF00/100
	STA OBJECT+1		;X CENTER (MSB)
	LDY I,PF.BRT
	STY V.BRIT		;INTENSITY
	LDA I,4
	JSR VGSTAT		;GET INTENSITY REGISTER
	JSR POSITH		;ADD HORIZN ADJ
	LDX SAVX+1
	LDA AX,PFOBJ+4		;Y DEPTH (ON HORIZON)
	STA OBJECT+6
	LDA AX,PFOBJ+5
	STA OBJECT+7
	JSR PFDSPL		;DISPLAY OBJECT
	JMP 30$
20$:	LDX I,3
22$:	LDA ZX,XPOS
	STA ZX,XPOINT
	DEX
	BPL 22$
	LDX SAVX+1
	LDY I,PF.BRT		;HORIZON INTENSITY
	LDA AX,PFOBJ+3
	CMP I,0F
	BCC 25$
	LDY I,0
	CMP I,10
	BCS 25$
	LDA AX,PFOBJ+2
	LSR
	EOR I,060
	AND I,60
	TAY
25$:	LDA I,4
	JSR VGSTAT		;SET INTENSITY REG
	JSR SCENE0		;CONSTRUCT HORIZON (256. ALONG X-AXIS)
30$:	CLC
	LDA TEMP2+1
	ADC I,PF.QTX&0FF00/100
	STA TEMP2+1
	LDX I,1
32$:	LDA ZX,TEMP2
	STA ZX,OBJECT
	LDA I,0
	STA ZX,OBJECT+2
	DEX
	BPL 32$
	STA OBJECT+4
	LDA I,HORZ/100
	STA OBJECT+5
	JSR POSITH		;ADD HORIZN ADJ
	LDA SAVX+1
	CLC
	ADC I,L.PFOB
	CMP I,N.PFOB+1
	BCC 35$
	LDA I,0
35$:	TAX
	DEC SAVX+2
	BMI 40$
	JMP 15$
40$:	LDX I,N.PFOB
50$:	LDA AX,PFOBJ+6		;PF OBJECT SCROLLING
	BMI 60$			;NO
	AND I,0F
	STA SAVY+1		;PF OBJECT #
	LDA AX,PFOBJ+7
	BMI 60$			;GROUND SEQ INVISIBLE
	AND I,0F
	STA TEMP3+8
	JSR SCENE1		;DISPLAY PF OBJECT
	JSR SCENE2
	BIT GRMODE
	BPL 55$
	LDX SAVX+1
	JSR GRDISP		;DISPLAY GROUND OBJECTS
55$:	LDX SAVX+1
60$:	TXA
	SEC
	SBC I,L.PFOB
	TAX
	BCS 50$
	BIT GRMODE
	BPL 70$
	LDA FLAG+1
	BEQ 65$
	BIT FLAG
	BMI 70$
65$:	INC GRDSP
70$:	RTS

;
;
;
SCENE0:	CLC
	LDA TEMP2
	STA OBJECT
	LDA TEMP2+1
	ADC I,PF.QTX&0FF00/100
	STA OBJECT+1
	JSR POSITH		;ADD HORIZN ADJ
	LDX I,3
10$:	LDA ZX,XPOS
	STA AX,DB.TRP+2
	DEX
	BPL 10$
	LDX I,H.MAP&0FF
	LDA I,H.MAP&0FF00/100
	JMP DECMAP		;DISPLAY VCTR
;
;
;
SCENE1:	LDA AX,PFOBJ+3
	ASL
	ASL
	ASL
	BPL 10$
	LDA I,70
10$:	AND I,0F0
	STA V.BRIT
	LDA I,.PFOBJ
	SEC
	SBC V.BRIT
	AND I,0F0
	STX SAVX+1		;SAVE OFFSET
	STA V.BRIT		;INTENSITY SET TO DEPTH
	LDY I,0
20$:	LDA AX,PFOBJ
	STA AY,OBJECT		;ESTABLISH POSITION
	LDA I,0
	STA AY,OBJECT+2		;ALTITUDE=0
	LDA AX,PFOBJ+2
	STA AY,OBJECT+4
	INX
	INY
	CPY I,2
	BCC 20$
	JSR TRNS0		;ROTATE ABOUT 0,0
	JMP POSITH		;POSITION BEAM
;
;PLAYFIELD OBJECT DISPLAY
;
SCENE2:	LDX SAVX+1
	LDA AX,PFOBJ+4
	STA OBJECT+4
	STA OBJECT+6
	LDA AX,PFOBJ+5
	STA OBJECT+5
	STA OBJECT+7
PFDSPL:	LDY SAVY+1		;OBJECT OFFSET
	LDX AY,SSEGS		;OBJECT POINT TABLE ADDR
	LDA AY,SSEGS+1		;ADDR MSB
	PHA
	TYA
	LSR
	TAY
	LDA AY,.SSEG
	TAY
	PLA
	JSR PROJECT		;PROJECT POINTS
	LDA SAVY+1		;OBJECT #*2
	ASL
	ASL
	STA SAVY+1		;OBJECT #*8
	LDX I,3
	STX TEMP4		;LOOP COUNT
10$:	LDA SAVY+1
	LSR
	TAX
	LDY AX,PFOPOS		;LEFT EDGE
	LDA I,0
	STA TEMP1
	JSR PFXPOS		;CALCULATE POSITION
	BCC 20$			;ON SCREEN
15$:	LDA SAVY+1
	LSR
	TAX
	LDY AX,PFOPOS+10	;RIGHT EDGE
	JSR PFXPOS		;CALCULATE POSITION
	BCS 35$			;OFF SCREEN
	DEC TEMP1
20$:	LDA I,0
	STA VGBRIT		;VCTR 0 INTENSITY
	JSR VGCNTR		;CENTER BEAM
	JSR VGVTR2		;POSITION BEAM
	LDY V.BRIT
	LDA I,4
	JSR VGSTAT
	LDY SAVY+1
	LDA AY,SCMAP+1		;DISPLAY BRIGHTER SEGMENTS
	LDX AY,SCMAP
	BIT TEMP1
	BPL 28$
	LDX AY,SCMAP+20
	LDA AY,SCMAP+21
28$:	JSR DECMAP
	LDA OBJECT+4
	CMP I,1
	LDA OBJECT+5
	SBC I,2
	BCS 29$
	BIT GREND
	BMI 29$			;ALREADY EOL
	JSR PLYCOL
	BCS 29$
	LDA SAVX+1		;MOUNTAIN OFFSET OF CRASH
	ORA I,0C0
	STA GREND		;D6=GROUND COLLISION
29$:	LDA V.BRIT
	SEC
	SBC I,30
	BCS 30$
	LDA I,20
30$:	TAY
	LDA I,4
	JSR VGSTAT		;SET INTENSITY REGISTER
	LDY SAVY+1
	LDA AY,SCLMAP+1		;DISPLAY DIM SEGMENTS
	BMI 35$			;NO DIM LINES FOR THIS PIECE
	LDX AY,SCLMAP
	JSR DECMAP
35$:	INC SAVY+1		;NEXT PIECE
	INC SAVY+1
	DEC TEMP4
	BMI 40$
	JMP 10$
40$:	RTS
;
;	ENTRY	EXIT
;ACC	DC	XCOMP+1
;X	DC	0FE
;Y	POINTY	POINTY-4
;
PFXPOS:	LDX I,2		;Y OFFSET
10$:	CLC
	LDA AY,DB.TRP
	STA AX,DB.TRP+0F2	;IN CASE OF CD
	STA ZX,XPOINT
	ADC ZX,XPOS
	STA ZX,XCOMP
	LDA AY,DB.TRP+1
	STA AX,DB.TRP+0F3
	STA ZX,XPOINT+1
	ADC ZX,XPOS+1
	STA ZX,XCOMP+1
	DEY
	DEY
	DEX
	DEX
	BPL 10$
;	JMP DSTNCE	;CONTINUE TO DSTNCE
;
; DISTANCE CALCULATION XCOMP = X POSITION
;			YCOMP = Y POSITION
;
DSTNCE:	LDY XCOMP
	LDX XCOMP+1
	JSR DPABS		;ABSOLUTE OF X POS
	STY RESULT
	STX RESULT+1
	LDY YCOMP
	LDX YCOMP+1
	JSR DPABS		;ABSOLUTE OF Y POS
	CPY RESULT
	SBC RESULT+1
	LDX I,2			;ASSUME Y < X
	BCC 10$
	LDX I,0			;X < Y
10$:	LDA ZX,XCOMP+1		;1/2 * SMALLER
	CMP I,80
	ROR
	TAY
	LDA ZX,XCOMP
	ROR
	CPX I,1
	LDX I,0			;ASSUME X > Y
	BCS 20$
	LDX I,2			;Y > X
20$:	CLC
	ADC ZX,XCOMP		;+ LARGER
	STA RESULT
	TYA
	ADC ZX,XCOMP+1
	LDY RESULT
	TAX
	JSR DPABS		;ABSOLUTE
	CPY I,80
	SBC I,2			;COMPARE TO SCREEN EDGE
	RTS


;
	.SBTTL	PLANE MO
;
;	ENTRY			EXIT
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	DC			BLITZED
;
MOTOBJ:	LDX I,N.MOB
10$:	STX SAVX+2
	TXA
	BNE 15$			;DRONE/PLANE
	LDA ZX,PLOBDB+18
	BMI 50$			;BLIMP
15$:	LDA ZX,PLOBDB+6
	BIT A,BIT1		;PARALLEL?
	BEQ 20$			;NO
	CLC
	LDA PLSTAT
	ADC ZX,PLOBDB		;DRONE X,Y IS OFFSET FROM
	STA OBJECT		;PLANE
	LDA PLSTAT+1
	ADC ZX,PLOBDB+1
	STA OBJECT+1
	CLC
	LDA PLSTAT+2
	ADC ZX,PLOBDB+2
	STA OBJECT+2
	LDA PLSTAT+3
	ADC ZX,PLOBDB+3
	JSR PLNLB0		;CONSTRUCT LABS
	BCC 30$			;VISIBLE
	BCS 50$			;NOT VISIBLE
20$:	AND I,0C5		;FL EX X X X EX X FL
	BEQ 50$			;PLANE/DRONE NOT PRESENT
	JSR PLNLBS		;CONSTRUCT LABS
	BCS 50$			;NOT VISIBLE
30$:	LDX SAVX+2
	LDA ZX,PLOBDB+6
	BMI 47$			;PLANE FLIGHT
	BIT A,BIT6
	BNE 49$			;EXPLOSION
	BIT A,BIT2
	BNE 42$			;DRONE EXPLOSION
	BIT DRNSFLG
	BPL 35$
	CPX DRNSET
	BNE 35$
	JSR PLNSHL
35$:	JSR DRONE		;DRONE FLIGHT
	JMP 50$
42$:	JSR DRNEXP		;DRONE EXPLOSION
	JMP 50$
47$:	LDX I,3
48$:	LDA AX,PFOBJL
	STA ZX,XCOMP
	DEX
	BPL 48$
	BIT GMEND0
	BMI 49$			;RETURNING PLANE
	LDX SAVX+2
	JSR PLNSHL
49$:	JSR PLANE
50$:	LDA SAVX+2
	SEC
	SBC I,L.OBJ
	TAX
	BCC 60$
	JMP 10$
60$:	LDA I,0
	STA DRNFLG
	RTS
;
;CHECK PLANE FIRE
;
PLNSHL:	LDA ZX,PLOBDB+6
	AND I,8
	BEQ 10$			;PLANE DOES NOT SHOOT
	LDA I,80
	STA SHMODE		;FAST SHELLS
	LDA FRAME
	LSR
	BCS 10$			;EVERY OTHER FRAME
	JMP SHLAU0		;FIRE SHELLS
10$:	RTS
;
;X=PLANE OFFSET
;	SET PLANE POSITION (BY CENTER W/VCTR) CC=VISIBLE PLANE
PLNLBS:	LDA ZX,PLOBDB+19	;POSITION DEPTH
	STA OBJECT+4
	LDA ZX,PLOBDB+1A
	STA OBJECT+5
	LDA ZX,PLOBDB+5
	ASL
	ASL
	ASL
	AND I,.MOTOBJ
	EOR I,.MOTOBJ		;SET BRIGHTNESS BY DEPTH
	CMP I,60
	BCS 10$
	LDA I,60
10$:	STA V.BRIT
	TAY
	LDA I,4
	JSR VGSTAT
	LDX SAVX+2
	LDA ZX,PLOBDB		;X POSITION (LSB)
	STA OBJECT
	LDA ZX,PLOBDB+1		;X POSITION (MSB)
	STA OBJECT+1
	LDA ZX,PLOBDB+2		;Y POSITION (LSB)
	STA OBJECT+2
	LDA ZX,PLOBDB+3		;Y POSITION (MSB)
PLNLB0:	STA OBJECT+3
	JSR PFTRIG		;PF ROTATION
	JSR POSITP
	JSR SETBM
	LDX SAVX+2
	LDA ZX,PLOBDB+4
	STA O.DPTH
	LDA ZX,PLOBDB+5
	STA O.DPTH+1
	LDY I,3
10$:	LDA AY,XPOS
	STA ZX,PLOBDB+11.
	DEX
	DEY
	BPL 10$
	RTS
;
;DISPLAY FULL PLANE
;
DSPPLN:	LDX I,40		;BUFFER 0(2640)
	LDA I,26
	BIT BUFFER
	BPL 10$
	LDA I,2E		;BUFFER 1(2E40)
10$:	JMP VGJSRL
;
;DISPLAY DRONE
;
DSPDRN:	LDX I,30
	LDA I,25
	BIT BUFFER		;BUFFER 0(2530)
	BPL 10$
	LDA I,2D		;BUFFER 1(2D30)
10$:	JMP VGJSRL		;STORE JSRL TO DRONE
;
;	ROTATE BIPLANE (ON ALL AXES) AND PROJECT ONTO XY MONITOR
;
;	DB.PLN	= Z LOCATION	(S7654321)
;	DB.PLN+1= X LOCATION	(S7654321)
;	DB.PLN+2= Y LOCATION	(S7654321)
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	DC			BLITZED
;
;
PLANE:	JSR DSPPLN
	LDA RAMPTR
	STA TEMP4		;SAVE VG POINTER
	LDA RAMPTR+1
	STA TEMP4+1
	LDA I,0A0
	STA RAMPTR
	LDA I,VGRAM/100+7
	BIT BUFFER
	BPL 10$
	LDA I,VGRAM/100+0F
10$:	STA RAMPTR+1		;PROPS START AT SET ADDRESS (BY BUFFER)
	JSR PLNPRP
	LDA I,40
	STA RAMPTR
	LDA I,VGRAM/100+6	;ASSUME BUFFER 0
	BIT BUFFER
	BPL 20$
	LDA I,VGRAM/100+0E	;ELSE BUFFER 1
20$:	STA RAMPTR+1
	BIT PLSTAT+6
	BVC 30$
	LDA GTIMER+1
	BEQ 30$
	JSR PLNEXP
	LDA PROP.F
	ORA I,80		;NO PLANE, PROP
	STA PROP.F
	JMP 40$
30$:	LDX I,0			;FULL PLANE
	JSR PLTEST
	JSR PLDECD
	LDY V.BRIT
	LDA I,4
	JSR VGSTAT
	LDA I,4
	TAY
	JSR VGSTAT		;2 BYTES FOR PROP
40$:	JSR VGRTSL
	LDA TEMP4
	STA RAMPTR
	LDA TEMP4+1
	STA RAMPTR+1
	RTS
;
;
;
DRONE:	BIT DRNFLG
	BMI 40$			;DRONE PICTURE DB IN USE
	DEC DRNFLG		;SET (=0FF)
	LDA RAMPTR
	STA TEMP4
	LDA RAMPTR+1
	STA TEMP4+1
	LDX I,30
	LDA I,VGRAM/100+5
	BIT BUFFER
	BPL 10$
	LDA I,VGRAM/100+0D
10$:	STA RAMPTR+1		;DRONE PICTURE DB POINTER
	STX RAMPTR
	JSR DRNPIC
	JSR VGRTSL
	LDA TEMP4
	STA RAMPTR		;RESTORE RAM POINTER
	LDA TEMP4+1
	STA RAMPTR+1
35$:	JMP DSPDRN		;DISPLAY DRONE (JSRL TO PICTURE, DB)
40$:	BIT DRNSFL
	BPL 35$			;NO GROWTH
				;CONTINUE INTO DRNPIC
DRNPIC:	LDA PLSTAT+6		;PLANE ROTATED
	AND I,10
	BEQ 20$			;YES
	LDA I,DROFFZ&0FF	;ELSE SMALL SCALE PLANE
	STA A,DD.DML
	LDA I,DROFFZ&0FF00/100
	STA A,DD.DMM
	JSR DRNTST		;SCALE DOWN PLANE POINTS
	LDX I,DB.MAP&0FF
	LDA I,DB.MAP&0FF00/100
	JMP DCMPA0		;DECODE POINTS TO GRAPH
20$:	LDY I,.DRPNT-3
	LDX I,0
	JSR PLNABZ		;2-D DRONE POINTS
	LDX I,.DRPNT-3*2
	JSR D.LOOP		;SCALE
	LDX I,DB.MAR&0FF
	LDA I,DB.MAR&0FF00/100
	JMP DCMPA0
;
;ROTATE & PROJECT POINTS (POINTP FORMAT)
;X=SOURCE OFFSET
;
PLTEST:	STX SAVX+1
	CLC			;Z AXIS ROTATION
	LDA PLSTAT+12
	ADC PFROTN
	TAY
	LDA PLSTAT+13
	ADC PFROTN+1
	JSR TRIG
	LDX SAVX+1
	LDY AX,PPNTS
	JSR PLNABZ
	LDA PLSTAT+6
	AND I,10
	BNE 5$			;UNTIL FULL ROTATION NEED Y AXIS ROTATION
	LDA GAMODE
	AND I,BNRBIT		;CHECK FOR BANNER DISPLAY
	BEQ 10$			;NOT BANNER
5$:	LDA PLSTAT+15		;Y AXIS ROTATION
	LDY PLSTAT+14
	JSR TRIG
	LDX SAVX+1
	LDA AX,PPNTS
	ASL
	TAX
	JSR YAXIS
	JMP 15$
10$:	LDA PLSTAT+17		;X AXIS ROTATION
	LDY PLSTAT+16
	JSR TRIG
	LDX SAVX+1
	LDA AX,PPNTS
	ASL
	TAX
	JSR XAXIS
15$:	LDX SAVX+1
	LDA AX,PPNTS
	ASL
	TAX
	JMP D.LOOP
;
;DECODE PLANE POINTS (FULL 3D)
;
PLDECD:	LDX I,DB.MAP&0FF
	LDA I,DB.MAP&0FF00/100
	JSR DCMPA0
	LDA V.BRIT
	STA TEMP2
	SEC
	SBC I,60
	BCS 10$
	LDA I,0
10$:	TAY			;ADD LIGHTER LINES
	LDA I,4
	JSR VGSTAT
	LDX I,DB.LNS&0FF
	LDA I,DB.LNS&0FF00/100
	JMP DECMAP
;
;CONSTRUCT PLANE PROP PICTURES
;
PLNPRP:	LDX I,1
	JSR PLTEST		;CONSTRUCT PROP POINTS
	LDX I,3
5$:	LDA AX,DB.TRP+2
	STA ZX,XPOINT
	STA ZX,TEMP3		;SAVE ORIGIN POINT
	DEX
	BPL 5$
	LDY I,4
10$:	STY SAVY+1		;PICTURE OFFSET
	LDA AY,PROPS+1
	LDX AY,PROPS
	JSR DECMAP		;DECODE ONE PROP BLADE PAIR
	JSR VGRTSL		;CONSTRUCT RTSL (VG)
	LDX I,3
15$:	LDA ZX,TEMP3
	STA ZX,XPOINT		;RESET ORIGIN FOR NEXT PAIR
	DEX
	BPL 15$
	LDY SAVY+1
	DEY
	DEY
	BPL 10$			;DO ALL THREE BLADE PAIRS
	RTS
	.PAGE
	.SBTTL	EXPLOSIONS
;
;	DISPLAY PLANE EXPLOSION PIECES
;
;	ENTRY			EXIT
;
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	DC			BLITZED
;
;USES - SAVY+2,PLCDLT(S),GTIMER,XCOMP,+1,YCOMP,+1,VGBRIT,P.STAT(S),PLPCLN(S)
;	PLPCL2(S),PLPCDE(S)
;
;CALLS - MULTPL,VGVCTR,TRIG,PLNABZ,YAXIS,XAXIS,D.LOOP,DECMAP
;
PLNEXP:	LDY I,6			;4 PIECES
10$:	STY SAVY+2
	LDX AY,PLCDLT		;X DELTA
	LDA GTIMER+1		;INTERVAL TIMER
	JSR MULTPL
	STX XCOMP+1		;VCTR X
	STY XCOMP
	LDY SAVY+2
	LDX AY,PLCDLT+1		;Y DELTA
	LDA GTIMER+1		;TIMER
	JSR MULTPL
	STX YCOMP+1		;VCTR Y
	STY YCOMP
	LDA I,0
	STA VGBRIT		;NO INTENSITY
	JSR VGVTR2		;CONSTRUCT VCTR
	CLC
	LDA PFROTN
	ADC PLSTAT+12
	TAY
	LDA PFROTN+1
	ADC PLSTAT+13
	JSR TRIG		;ANGLE ABOUT Z
	LDA SAVY+2
	LSR
	TAX
	LDA AX,PLPCLN
	TAY
	TXA
	CLC
	ADC I,3
	TAX
	JSR PLNABZ		;ROTATE ABOUT Z
	LDA PLSTAT+17
	LDY PLSTAT+16
	JSR TRIG		;ANGLE ABOUT X
	LDA SAVY+2
	LSR
	TAX
	LDA AX,PLPCL2
	TAX
	JSR XAXIS		;ROTATE ABOUT X
	LDA SAVY+2
	LSR
	TAX
	LDA AX,PLPCL2
	TAX
	JSR D.LOOP		;PROJECT BY DEPTH
	LDY SAVY+2
	LDA AY,PLPCDE+1
	LDX AY,PLPCDE
	JSR DCMPA0		;DECODE POINTS
	LDY SAVY+2
	DEY
	DEY
	BPL 10$
	RTS
;
;PLANE EXPLOSION PIECES DELTAS (X,Y)
;
PLCDLT:	.BYTE 0,14
	.BYTE 14,-2
	.BYTE -28,0
	.BYTE 14,-16
;
;DRONE EXPLOSION ROUTINE
;
DRNEXP:	INC ZX,PLOBDB+7
	LDA ZX,PLOBDB+7
	CMP I,10
	BCS 20$			;FINISHED W/ EXPLOSION
	STA TEMP1
	LDY I,8
10$:	STY SAVY
	LDX AY,DPCDEL
	LDA TEMP1
	JSR MULTPL
	STX XCOMP+1
	STY XCOMP
	LDY SAVY
	LDX AY,DPCDEL+1
	LDA TEMP1
	JSR MULTPL
	STX YCOMP+1
	STY YCOMP
	LDA I,0
	STA VGBRIT
	JSR VGVTR2
	LDY SAVY
	LDA AY,DPCTBL
	LDX AY,DPCTBL+1
	JSR VGADD2
	LDY SAVY
	DEY
	DEY
	BPL 10$
	RTS
20$:	LDA I,0
	STA ZX,PLOBDB+6		;CLR DRONE (& EXPLOSION)
	RTS
;
	.SBTTL	CHKSUM 6 (6800-6FFF) [FF]
CHKSM6:	.BYTE 6C
	.PAGE
	.SBTTL	SHELLS
;
;UPDATE SHELL POSITION, DISPLAY AND CHECK FOR COLLISIONS
;
SHLMOT:	JSR CDSSET		;SET COLLISION DETECT FRAMES
	CLC
	JSR DSPSHL		;DISPLAY SHELLS
	JSR PSTSHL		;UPDATE SHELL POSITION
	SEC
	JSR DSPSHL
	JSR PSTSHL
	CLC
	JSR DSPSHL
	JSR PSTSHL
	SEC
	JSR DSPSHL
	JMP PSTSHL


;
;	 ENTRY			EXIT
;ACC
;X
;Y
;
PSTSHL:	LDX I,N.SHL		;POINT @ LAST SHELL
10$:	LDA AX,SHELLS+7
	BPL 20$
	INC AX,SHELLS+5		;UPDATE Z (DEPTH)
	LDA AX,SHELLS+5
	CMP I,S.MAXZ&0FF	;MAX SHELL DEPTH ?
	BCC 20$			;NO
	LDA I,0			;ELSE CLEAR SHELL
	STA AX,SHELLS+7		;FLAG CLEARED (BIT D7)
20$:	TXA
	SEC
	SBC I,L.SHL
	TAX
	BCS 10$
	RTS



;
DSPSHL:	LDX I,0
	BCC 5$
	DEX
5$:	STX FLAG
	JSR PFTRIG		;SET SINE/COSINE
	LDX I,N.SHL
10$:	LDA AX,SHELLS+7
	BPL 20$			;NOT ACTIVE
	STX SAVX
	LDA AX,SHELLS+5
	ASL
	ASL
	ASL
	EOR I,0F0
	AND I,0F0
	TAY			;DEPTH DEFINES INTENSITY
	LDA I,4
	JSR VGSTAT
	LDY SAVX
	LDX I,0
15$:	LDA AY,SHELLS
	STA ZX,OBJECT
	INY
	INX
	CPX I,6
	BCC 15$
	JSR POSITP		;CALCULATE POSITION
	BIT FLAG
	BMI 16$
	JSR SETBM		;SET BEAM POSITION
	BCS 17$			;BEAM OFF SCREEN
	LDA I,20
	JSR VGDOT		;DISPLAY DOT (Z REG)
16$:	LDX SAVX
	LDA AX,SHELLS+7
	ASL
	BMI 17$			;ENEMY SHELL
	JSR SHCDCK		;CHECK FOR SHELL COLLISIONS
17$:	LDX SAVX
20$:	TXA
	SEC
	SBC I,L.SHL		;DO NEXT SHELL
	TAX
	BCS 10$
	RTS
;
	.SBTTL	ALPHANUMERICS
;
ALPHAS:	LDA OPTION
	AND I,3
	STA LANG		;OPTIONS DEFINE LANGUAGE
	JSR VGCNTR		;CENTER BEAM
	LDA I,-316./4
	LDX I,320./4
	LDY I,0
	JSR VGVTR		;POSITION BEAM
	LDX I,SCORE+1
	JSR DIGT1S
	JSR ALPH.0
	BIT GRMODE
	BMI 10$
	LDA I,160./4
	LDX I,0
	JSR VGVTR1		;POSITION BEAM FOR PLANE'S VALUE
	LDA PLVALU
	JSR DECIMAL
	LDX PLSTAT+5
	CPX I,10
	BCC 5$
	LDA I,30		;PLANE BONUS VALUE
	STA NUMB1
5$:	LDY I,0
	LDX I,NUMB1
	JSR DIGTYS
	JSR ALPH.0
10$:	JSR VGCNTR
	LDA I,204./4
	LDX I,336./4
	JSR VGVTR1		;POSITION BEAM FOR HIGH SCORE
	LDA I,2
	JSR VGSCA1
	LDA A,HSCRES
	STA TEMP3
	LDA A,HSCRES+1
	STA TEMP3+1
	LDX I,TEMP3+1
	JSR DIGT1S
	JSR ALPH.0
	LDY I,0
	JSR DSPALP
	LDX I,0
	JSR HSINTL
	LDA I,1
	JSR VGSCA1
	LDA I,24.		;PLAYER DATA STRINGS
	JSR MESSAGE
	BIT GRMODE
	BMI 20$
	LDA I,26.
	JSR MESSAGE
20$:	LDA I,44.
	JSR MESSAGE
	BIT GUN.ST		;OVERHEATED GUNS ?
	BVC 25$			;NO
	LDA I,16.		;ELSE DISPLAY MESSAGE
	JSR MESSAGE
25$:	BIT GAMODE
	BMI 60$			;PLAY MODE
	LDA GAMODE
	AND I,4
	BNE 60$			;BNE 94$
	LDA I,32.
	JSR MESSAGE
	LDA $$CRDT		;# OF CREDITS
	CMP I,50.
	BCC 35$
	LDA I,50.
35$:	JSR DECIMAL
	LDX I,NUMB1
	LDY I,0
	JSR DIGTYS
	LDA $CNCT		;ANY HALF CREDITS ?
	BEQ 40$			;NO
	LDX I,HALF&0FF
	LDA I,HALF/100
	JSR VGJSRL		;DISPLAY 1/2
40$:	BIT GAMODE
	BVC 45$
	JMP 90$			;RTP
45$:	LDA OPTION
	AND I,40
	BEQ 50$
	JSR VGCNTR
	LDX LANG
	LDA AX,PLY2MN
	LDX I,112./4
	JSR VGVTR1
	LDA I,34.
	JSR MESSAGE
	LDA I,10.
	JSR MESSAGE
	LDA I,14.
	JSR MESSAGE
50$:	LDA GAMODE
	AND I,8
	BEQ 55$
	LDA FRAME
	AND I,8
	BNE 60$			;BNE 94$
55$:	JSR VGCNTR
	LDX I,1			;ASSUME 1 COIN
	LDA $CMODE		;D1,D0=COIN MODES
	AND I,3
	BNE 65$
60$:	JMP 94$
65$:	SEC
	SBC I,1
	ASL
	ASL
	STA TEMP2
	CMP I,8
	BCC 70$			;1 COIN
	INX			;ELSE 2 COINS
70$:	STX TEMP3		;TEMP3=# OF COINS
	LDA LANG
	ORA TEMP2
	TAY
	LDA AY,CMMESS		;X POSITION OF MESSAGE
	LDX I,152./4		;Y POSITION
	JSR VGVTR1		;POSITION BEAM
	LDX I,TEMP3
	LDY I,0
	JSR DIGTYS		;DISPLAY # OF COINS
	LSR TEMP3
	LDA I,4			;ASSUME COIN
	BCS 75$
	LDA I,6			;COINS
75$:	JSR MESSAGE		;DISPLAY COIN(S)
	LDX I,1
	LDA TEMP2
	BNE 80$
	INX			;X=2
80$:	STX TEMP3		;TEMP3=# OF PLAYS
	LDX I,TEMP3
	LDY I,0
	JSR DIGTYS		;DISPLAY # OF PLAYS
	LSR TEMP3
	LDA I,8			;ASSUME PLAY
	BCS 85$
	LDA I,10.		;ELSE PLAYS
85$:	JSR MESSAGE		;DISPLAY PLAY(S)
	LDA FRAME
	AND I,8			;FLASH INSERT COINS
	BNE 94$
	LDA I,2
	JSR MESSAGE		;DISPLAY 'INSERT COINS'
	JMP 94$
90$:	LDA $CMODE
	AND I,3			;COIN MODE(S)
	BNE 92$			;CREDIT MODES
	LDA I,28.		;FREE PLAY
	JSR MESSAGE
92$:	LDA FRAME
	AND I,4
	BNE 94$
	JSR MESSAGE		;DISPLAY 'PRESS START'
94$:	LDX I,2			;3 MESSAGES
95$:	STX SAVX
	LDA ZX,MESTM0		;MESSAGE COUNTER
	BEQ 96$
	DEC ZX,MESTM0		;DEC COUNTER
	LSR
	BCS 96$			;FLASH MESSAGE
	LDA AX,MESFL		;MESSAGE NUMBER
	JSR MESSAGE		;DISPLAY MESSAGE
96$:	LDX SAVX
	DEX
	BPL 95$			;DO ALL MESSAGES
99$:	RTS
;
MESFL:	.BYTE 22.,30.,12.
;
ALPH.0:	LDX I,JSCHR0&0FF00/100	;DISPLAY 0 (ZERO)
	LDA I,JSCHR0&0FF
	JMP VGADD2
	.PAGE	
;
;
;
DRNTST:	LDX I,.PLPNT-3*2
10$:	STX SAVX
	LDY AX,DB.TRP+2
	LDA AX,DB.TRP+3
	TAX
	JSR DDIVIT
	LDX SAVX
	STA AX,DB.TRP+3
	TYA
	STA AX,DB.TRP+2
	LDY AX,DB.TRP+4
	LDA AX,DB.TRP+5
	TAX
	JSR DDIVIT
	LDX SAVX
	STA AX,DB.TRP+5
	TYA
	STA AX,DB.TRP+4
	TXA
	SEC
	SBC I,6
	TAX
	BCS 10$
	RTS
	.SBTTL COLLISION DETECT
;
;	SET COLLISION WINDOWS FOR PLANE,DRONES, & BLIMP
;
;	ENTRY			EXIT
;ACC	DC			BLITZED
;X	DC			BLITZED
;Y	DC			BLITZED
;
CDSSET:	JSR PFTRIG
	LDY I,0			;Y = COLLISION SET FLAG
	STY TEMP4
	BIT BLOBJ+18		;BLIMP ?
	BPL 5$			;NO
	BIT BLOBJ+6
	BVS 5$			;EXPLOSION
	LDA BLOBJ+4		;BLIMP DEPTH LSB
	STA A,DD.DML
	STA O.DPTH
	LDA BLOBJ+5
	STA A,DD.DMM
	STA O.DPTH+1
	LDX I,9
	LDY I,.BLCL
	JSR PLNABZ		;ROTATE ABOUT Z
	LDA BLOBJ+14
	LDY BLOBJ+13
	JSR TRIG
	LDX I,.BLCL*2
	JSR YAXIS		;ROTATE ABOUT Y
	LDX I,.BLCL*2
	JSR D.LOOP
	LDX I,.BLCL*2+4
	JSR MNMX0		;DETERMINE MIN/MAX OF X,Y&Z
	LDX I,0B
2$:	LDA AX,DB.TRP
	STA AX,DB.TRP+20
	DEX
	BPL 2$
	LDY I,4
	STY TEMP4
5$:	LDA PLSTAT+6		;D7 PLANE STATUS
	BPL 10$			;NO COLLISION DETECT
	LDA PLSTAT+4		;PLANE DEPTH
	STA A,DD.DML
	STA O.DPTH
	LDA PLSTAT+5		;MSB
	STA A,DD.DMM
	STA O.DPTH+1
	LDX I,2
	JSR PLTEST		;COLLISION FRAME
	JSR MINMAX		;SET MIN,MAX OF X,Y
	LDA TEMP4
	ORA I,1
	TAY
10$:	LDX I,0B+0C		;DB.TRP OFFSET
				;X = DEST OF DRONE COLLISION FRAME
	LDA P.1ST+6
	ORA P.2ST+6		;DRONE STATS
	AND I,3
	BEQ 20$			;NO FLIGHT
	TYA
	ORA I,2
	PHA 			;SAVE COLLISION CHECK STATUS
	LDY I,0B
15$:	LDA AY,DRNFRM
	STA AX,DB.TRP		;SET DRONE FRAME
	DEX
	DEY
	BPL 15$
	PLA
	TAY
20$:	STY TEMP4		;COLLISION CHECK STATUS
	RTS
;
;
;
SHCDCK:	LDA TEMP4		;CHECK FOR PLANE COLLISION
	LSR
	BCS 5$
2$:	JMP 40$			;NO
5$:	LDA GMEND0
	AND I,3			;CHECK EOL
	BNE 2$			;EOL RETURNING PLANE
	LDA I,0
	STA POINTR+1
	LDA I,PLSTAT+8
	STA POINTR
	LDY I,2
	STY SAVY
	LDA O.DPTH
	LDY O.DPTH+1
	JSR COLSTP		;CHECK PLANE/SHELL COLLISION
	BCC 40$			;NO COLLISION
	STA ATGVAL+1		;CLR PLANE CLOSE SOUND
	BIT PLSTAT+6
	BVS 38$			;ALREADY HIT (SHELL IS DEAD)
	JSR PLNSCR
	JSR LVLSTP
	LDA I,2
	STA SPIRAL		;SPIRAL SOUND
	JSR FREPAR
	LDX I,0			;DRONE 0 OFFSET
	LDY I,L.OBJ		;DRONE 1
	LDA P.1ST+6
	LSR			;DRONE 0 IN FLIGHT?
	BCS 10$			;YES
	LDX I,L.OBJ		;DISABLE DRONE 0 SELECT
10$:	LDA P.2ST+6
	LSR 			;DRONE 1 IN FLIGHT?
	BCS 15$			;YES
	LDY I,0
	TXA
	BNE 30$			;NEITHER DRONE PRESENT
15$:	LDA POLYL
	LSR
	TXA
	BCC 25$
	TYA
25$:	STA DRNSET		;DRONE SELECTED
	TAX
	LDA PLSTAT+6
	AND I,8
	ORA ZX,PLOBDB+6
	STA ZX,PLOBDB+6
	LDA I,0FF
	STA DRNSFL		;DRONE GROWTH FLAG
30$:	LDY I,0
	JSR RANDOM
	BPL 35$
	DEY
35$:	STA PLSTAT+0C		;RANDOM X DELTA
	STY PLSTAT+0D
	LDA I,40
	STA PLSTAT+6
	ASL			;ACC=80
	STA PLSTAT+10		;DELTA FOR XY ROTATION
	LDA I,0
	STA PLSTAT+7		;INITIALIZE DIVE PIC TIMER
	STA PLSTAT+16
	STA PLSTAT+17
	STA GTIMER+1		;CLR EXPLOSION PIC TIMER
	STA GMEND0		;NEXT PLANE IS NORMAL
	LDA I,1
	STA PLSTAT+11
38$:	JMP 99$			;SHELL IS GONE
40$:	LDA TEMP4		;DRONE COLLISION CHECK
	AND I,2
	BEQ 70$			;NO
	LDX I,L.OBJ
45$:	STX SAVX+1
	LDA ZX,PLOBDB+6
	AND I,3
	BEQ 60$			;TRY OTHER DRONE
	CLC
	TXA
	ADC I,PLOBDB+8
	STA POINTR
	LDY I,0E
	STY SAVY		;DRONE FRAME OFFSET
	LDY I,15
	LDA I,0			;DRONE DEPTH (LSB)
	STA POINTR+1
	JSR COLSTP		;CHECK DRONE/SHELL COLLISION
	BCC 60$
	JSR LVLSTP
	LDA I,0F0		;START EXPLOSION SOUND
	STA EXPVAL
	LDA I,10.
	STA EXCNTR
	JSR DRNSCR		;DRONE POINTS
	LDX SAVX+1
	JSR FRDRNE		;IF PARALLEL, THEN FREE
	BIT DRNSFL
	BPL 56$
	CPX DRNSET
	BNE 56$
	LDY I,L.OBJ
	TXA
	BEQ 50$
	LDY I,0
50$:	LDX ZY,PLOBDB+6
	CPX I,1
	BNE 52$
	STY DRNSET
	BEQ 54$			;ALWAYS
52$:	LDA I,0
	STA DRNSFL
54$:	LDX SAVX+1
56$:	LDA I,4
	STA ZX,PLOBDB+6		;EXPLOSION
	LDA I,1
	STA ZX,PLOBDB+7		;COLLISION OF DRONE
60$:	LDA SAVX+1
	SEC
	SBC I,L.OBJ
	TAX
	BCS 45$			;ONLY DRONES
70$:	LDA TEMP4
	AND I,4
	BEQ 99$			;NO BLIMP
	LDA I,BLOBJ+8&0FF
	STA POINTR
	LDA I,BLOBJ+8/100
	STA POINTR+1
	LDY I,22
	STY SAVY		;DB.TRP OFFSET
	LDY BLOBJ+5
	LDA BLOBJ+4
	JSR COLSTP
	BCC 99$			;NO COLLISION
	LDA BLOBJ+6
	ORA I,40
	STA BLOBJ+6		;BLIMP EXPLOSION
	LDA I,0F0
	STA EXPVAL
	LDA I,10.
	STA EXCNTR
	LDA I,20.
	JMP NWSCRE		;200 POINTS
99$:	RTS
;
;DRONE POINT FRAME
;
DRNFRM:	.WORD 0,-0C,-0C
	.WORD 200,0C,0C
;
;
;
;
;RETRIEVE MIN/MAX OF POINTS
;
MINMAX:	LDX I,.COLLD-3*2+4
MNMX0:	TXA
	SEC
	SBC I,2
	STA TEMP1
1$:
	STX SAVX+1
10$:	LDA AX,DB.TRP
	STA MIN
	STA MAX
	LDA AX,DB.TRP+1
	STA MIN+1
	STA MAX+1
20$:	LDA MIN
	CMP AX,DB.TRP
	LDA MIN+1
	SBC AX,DB.TRP+1
	BMI 30$
	LDA AX,DB.TRP		;NEW MINIMUM
	STA MIN
	LDA AX,DB.TRP+1
	STA MIN+1
30$:	LDA MAX
	CMP AX,DB.TRP
	LDA MAX+1
	SBC AX,DB.TRP+1
	BPL 40$
	LDA AX,DB.TRP		;NEW MAXIMUM
	STA MAX
	LDA AX,DB.TRP+1
	STA MAX+1
40$:	TXA
	SEC
	SBC I,6
	TAX
	BCS 20$
	ADC I,6			;CARRY CLR
	TAX
	LDA MIN
	STA AX,DB.TRP		;POINT 0
	LDA MIN+1
	STA AX,DB.TRP+1
	LDA MAX
	STA AX,DB.TRP+6		;POINT 1
	LDA MAX+1
	STA AX,DB.TRP+7
	LDX SAVX+1
	DEX
	DEX
	CPX TEMP1
	BCS 1$
	RTS
;
;CHECK SHELL TO OBJECT COLLISIONS
;	DO X,Y,Z (MIN MAX) OF OBJECT FRAME & SHELL INTERSECT
;
COLSTP:	LDX SAVX		;SHELL OFFSET
	SEC
	SBC AX,SHELLS+4
	PHA			;SAVE LSB RESULT
	TYA			;MSB DEPTH
	SBC AX,SHELLS+5
	TAX
	PLA
	TAY			;LSB OF RESULT
	JSR DPABS
	CPY I,80
	SBC I,0
	BCS 30$			;OUTSIDE PLANE (+/- 256.)
	LDY I,0
	SEC
	LDA XPOS		;SHELL X POS
	SBC NY,POINTR		;PLANE X POS
	STA XPOINT		; XPOINT = SHELL X - PLANE X
	INY
	LDA XPOS+1
	SBC NY,POINTR
	STA XPOINT+1		;MSB
	SEC
	INY
	LDA YPOS		;SHELL Y POS
	SBC NY,POINTR		;PLANE Y POS
	STA YPOINT		; YPOINT = SHELL Y - PLANE Y
	INY
	LDA YPOS+1
	SBC NY,POINTR
	STA YPOINT+1		;MSB
	LDY SAVY		;DB.TRP OFFSET (COLLISION FRAME)
	LDX I,2			;CHECK X AXIS
15$:	LDA ZX,XPOINT
	CMP AY,DB.TRP+2
	LDA ZX,XPOINT+1
	SBC AY,DB.TRP+3
	BMI 30$			;<MIN
	LDA AY,DB.TRP+8
	CMP ZX,XPOINT
	LDA AY,DB.TRP+9
	SBC ZX,XPOINT+1
	BMI 30$			;>MAX
20$:	DEY
	DEY
	DEX
	DEX
	BPL 15$			;CHECK X AXIS
	LDX SAVX		;W/I MIN/MAX
	LDA I,0
	STA AX,SHELLS+7		;CLR SHELL
	SEC
	RTS
30$:	CLC			;NO COLLISION
	RTS
	.PAGE
	.SBTTL HOUSEKEEPING (I/O)
;
;POT SCALING ROUTINE
;
;
;
;
;
POTSCL:	LDA PTRNGE+1		;RANGE
	TAY
	CPY I,10		;WAIT FOR SOME POT RANGE **********
	BCS 10$
	LDX I,5			;CENTER UNTIL RANGE
	BPL 30$			;ALWAYS
10$:	LDA POTVAL+1		;CURRENT VALUE
	CMP PTRNGE+1		;FULL RANGE
	BNE 20$			;NO
	LDX I,10.		;ELSE FULL SCALE
	BPL 30$			;ALWAYS
20$:	STY A,DD.DML		;RANGE = DIVISOR
	LDY I,0			;ACC,X = DIVIDEND (VALUE)
	STY A,DD.DMM
	STY A,D.NMLL
	STA A,D.NMLH
	STY A,D.NMHL
	STY A,D.NMHH
	LDA I,10
	STA A,DD.NL
	JSR DDIV10
	TYA
	LDX I,10.		;ACC,Y = FRACTION OF FULL SCALE
	JSR MULTPL		;X = 1 OUT OF 11. VALUES (0 TO 10.)
	TYA
	BPL 30$
	INX			;ROUND UP
30$:	TXA
	ASL
	TAX
	LDA AX,POTDLY		;GET Y SCALED VALUE
	STA PLDELY
	LDA AX,POTDLY+1
	STA PLDELY+1
	LDA PFROTN+1		;ELSE RETURN TO CENTER
	BMI 55$
	ORA PFROTN
	BEQ POT.X		;ALREADY CENTERED
	LDA PFROTN
	LDX I,0FE		;ELSE RETURN (STEP=-2)
	LSR			;> 1
	BNE 57$			; YES
	INX			;ELSE = 1 (X = 0FF)
	BMI 57$			;ALWAYS
55$:	LDA PFROTN
	LDX I,2
	CMP I,0FF
	BNE 57$
	DEX			;ROTN = 0FFFF (CHANGE = 1)
57$:	LDY I,0			;ASSUME +
	TXA
	BPL 58$			;POSITIVE
	DEY			;ELSE SIGN EXTEND (Y = 0FF)
58$:	CLC
	ADC PFROTN
	STA PFROTN		;REDUCE ANGLE
	TYA
	ADC PFROTN+1
	STA PFROTN+1
POT.X:	LDA PTRNGE
	LSR			;1/2 OF RANGE
	STA TEMP1
	LDA POTVAL
	SEC
	SBC TEMP1
	SEC
	SBC PLDELX		;ACC=POT VALUE-CURRENT SETTING
	TAX			;X = DIFF (POT VALUE - CURRENT)
	BPL 5$
	JSR COMP
5$:	CMP I,3			;2 COUNTS OF HYSTERSIS
	BCC 17$			;LEAVE ALONE
	TXA
	LSR
	LSR
	LSR
	CMP I,10
	BCC 10$
	ORA I,0E0		;SIGN EXTEND (MINUS)
10$:	TAY
	BEQ 20$
15$:	CLC
	ADC PLDELX
	STA PLDELX		;STEP DELTA X
17$:	JMP SETDIV		;RESET DIVISION COUNT
20$:	TXA			;IS DIFF = 0?
	BEQ 17$			;YES
	LDA I,1			;ELSE STEP =1
	BPL 15$			;ALWAYS
;
;	DELTAS
;
POTDLY:	.4WORD -32.,-23.,-17.,-10.,-5,0,4,8,13.,18.,25.
STRGME:	BIT GAMODE
	BMI 1$			;PLAY
	BVS 2$			;RTP
1$:	RTS
2$:	LDA FRAME
	LDX I,8
	AND I,2
	BNE 4$
	TAX			;X = 0
4$:	STX ST.LED		;FLASH LED
5$:	LDA GAMODE
	AND I,4
	BNE 1$			;WAIT FOR INITIALS
	BIT SWSTAT		;CHECK STARTSW
	BVC 1$			;NO STARTSW
	DEC $$CRDT		;TAKE COIN
	LDA I,.STGME
	STA GAMODE
	STA STARTF		;SET START FLAG
	LDA OPTION		;OPTIONS DEFINE INITIAL # OF LIVES
	AND I,30
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA AX,INITLF
	STA LIVES		;INITIAL
	LDA I,0
	LDX I,EAWRTE-OBJKLD
10$:	STA ZX,OBJKLD		;CLR GAME START VARIABLES
	DEX
	BPL 10$
	LDA I,7
	STA VALFRC		;INITIALLY 7/10*DEPTH PLANE SCORE
	JMP GMINIT		;INITIALIZE PF (&OBJECTS)
;
INITLF:	.BYTE 2,3,4,5
	.SBTTL TRIG CALCULATION & Z PROJECTION
;
;GET SINES & COSINE FOR QUAD/ANGLE
;	ENTRY			EXIT
;ACC	QUAD (XXXX XQQA)	BLITZED
;X	DC			BLITZED
;Y	ANGLE (AAAA AA.FF)	BLITZED
;
;BLITZES-TEMP1,TEMP3,MBOX
;CALLS-T.SINE,D.COMP
;
PFTRIG:	LDA PFROTN+1		;PF ANGLES
	LDY PFROTN
;
TRIG:	LSR
	AND I,3
	TAX			;QUAD
	TYA
	ROR
	LSR
	TAY			;ANGLE
	LDA AX,QUADSN		;COSINE/SINE SIGNS
	STA TEMP3		;D7=COSINE SIGN, D6=SINE SIGN
	TXA
	LSR			;CARRY=D0 OF QUADRANT
	TYA
	BCC 10$			;EVEN QUADRANT (ANGLE=ANGLE)
	STY TEMP1
	LDA I,080		;ELSE ANGLE=-(ANGLE)
	SBC TEMP1		;CARRY SET
10$:	STA TEMP1
	JSR T.SINE
	BIT TEMP3		;D6=SIGN OF SINE
	BVC 20$			;PLUS
	JSR D.COMP		;ELSE 2'S COMP SINE
20$:	STX A,MM.BM		;SET MATRIX +SINE
	STY A,MM.BL
	SEC
	LDA I,080
	SBC TEMP1
	JSR T.SINE
	BIT TEMP3		;D7=SIGN OF COSINE
	JSR DPABS		;ELSE 2'S COMP COSINE
	STX A,MM.AM		;SET MATRIX COSINES
	STY A,MM.AL
	RTS
;
; ACC = ANGLE (0 TO 7F)
;
; EXIT - X,Y = MSB,LSB OF SINE OF ANGLE
;
;
;BLITZES-TEMP2,+1
;
T.SINE:	LSR
	BCC 20$			;JUST GET FRACTION
	ASL			;ELSE EXTRAPOLATE BETWEEN
	TAX
	ADC I,2			;ADD 2 (CARRY CLR)
	TAY
	SEC
	LDA AY,SINE
	SBC AX,SINE
	STA TEMP2
	LDA AY,SINE+1
	SBC AX,SINE+1
	CMP I,80		;MAINTAIN SIGN
	ROR			;EXTRAPOLATION = 0.5 * DIFF
	ROR TEMP2
	STA TEMP2+1
	CLC
	LDA AX,SINE		;GET SINE
	ADC TEMP2		;ADD EXTRAPOLATION
	TAY
	LDA AX,SINE+1
	ADC TEMP2+1
	TAX
	RTS			;X,Y = SINE
20$:	ASL
	TAX
	LDY AX,SINE
	LDA AX,SINE+1
	TAX
	RTS			;X,Y = SINE
	.PAGE
	.SBTTL NUMBERIC ROUTINES (* / COMP)
;
;MULTIPLY ROUTINE
;	ENTRY			EXIT
;ACC	MULTIPLIER		BLITZED
;X	MULTIPLICAND(SIGNED)	PRODUCT (MSB)
;Y	D.C.			PRODUCT (LSB)
;
MULTPL:	EOR I,0FF
	STA TEMP2		;LOW BITS=ADDITION
	LDY I,0
	STY RESULT		;CLR RESULTUCT
	STY RESULT+1
	TXA
	BPL 10$
	DEY
10$:	STY TEMP2+1		;SIGN EXTEND PRODUCT
	LDY I,8			;COUNTER
20$:	ASL TEMP2
	BCS 30$			;NO ADDITION
	TXA
	ADC RESULT
	STA RESULT
	LDA TEMP2+1
	ADC RESULT+1
	STA RESULT+1
30$:	DEY
	BEQ 40$
	ASL RESULT		;MULTIPLY BY 2
	ROL RESULT+1
	JMP 20$			;REPEAT FOR 8 BITS
40$:	LDX RESULT+1		;X,Y =PRODUCT
	LDY RESULT
	RTS
;
;INITIALIZE X/Y TRANSLATES TO ZERO
;
TRNS0:	LDA I,0
	LDY I,3
10$:	STA AY,MM.EL
	DEY
	BPL 10$
	RTS
;
;MRSULT RETURNS RESULT FROM MATRIX MULTIPLY
;
;	ENTRY		EXIT
;ACC	DC		Y RESULT (LSB)
;X	DC		Y RESULT (MSB)
;Y	DC		UNTOUCHED
;
;
MRSAB0:	JSR TRNS0
MRSLT0:	STX A,MM.YM
MRSULT:	MATSTT
	LDA A,M.PRDL		;GET RESULT (X PRIME)
	LDX A,M.PRDM		
	STA A,M.SYM		;START 2ND MM
	STA RESULT
	STX RESULT+1		
	MATSTT
	LDA A,M.PRDL
	STA RESULT+2		;STORE RESULT (Y PRIME)
	LDX A,M.PRDM
	STX RESULT+3
	RTS
;
;	16 BIT SIGNED(DIVIDEND) BY SIGNED(DIVISOR) DIVIDE
;
;	ENTRY			EXIT
;ACC	DC			QUOTIENT (MSB)
;X	DIVIDEND(MSB)		QUOTIENT (MSB)
;Y	DIVIDEND(LSB)		QUOTIENT (LSB)
;
DDIVIT:	STY A,D.NMHL		;STORE DIVIDEND
	STX A,D.NMHH		;
DDIV10:	STA A,D.SZXD		;START DIVIDE
	MATSTT
	LDY A,M.PRDL		;GET QUOTIENT
	LDX A,M.PRDM
	TXA
	RTS
	
DPABS:	BPL DPCMP0
;
;DO 2 BYTE 2'S COMPLEMENT
;
;	ENTRY	EXIT
;ACC	DC		MSB (COMP)
;X	MSB		MSB (COMP)
;Y	LSB		LSB (COMP)
;
D.COMP:	TYA
	EOR I,0FF		;1'S COMP LSB
	TAY
	TXA
	EOR I,0FF		;1'S COMP MSB
	TAX
	INY			;ADD 1 (LSB)
	BNE DPCMP0
	INX			;ADD CARRY (MSB)
DPCMP0:	TXA			;SET SIGN BIT
	RTS

;
; COMPLEMENT ACC (2'S COMPL)
;
SPABS:	BPL COMP.0
COMP:	EOR I,0FF
	CLC
	ADC I,1
COMP.0:	RTS
;
;DIVIDE BY 4 (2 RIGHT SHIFTS)
;
DIVBY4:	CMP I,80
	ROR
	ROR TEMP2
DIVBY2:	CMP I,80
	ROR
	ROR TEMP2
	RTS
;
;MULTIPLY BY FACTORS OF 2 (LEFT SHIFTS)
;
MULTB4:	ASL
	ROL TEMP1
MULTB2:	ASL
	ROL TEMP1
	RTS
;
; RANDOM NUMBER GENERATOR
;
;	ENTRY		EXIT
;ACC	DC		RANDOM # (LSB)
;X	DC		UNTOUCHED
;Y	DC		UNTOUCHED
;
RANDOM:	JSR RAND2		;4 TIMES
RAND2:	JSR RAND		;2 TIMES
RAND:	ASL POLYL
	ROL POLYH
	BPL 1$
	INC POLYL
1$:	LDA POLYL		;CHANGE BIT 0 DEPENDING ON BIT 1
	BIT A,BIT1
	BEQ 2$
	EOR I,01
	STA POLYL
2$:	ORA POLYH		;BEWARE 0 CASE
	BNE 3$
	INC POLYL
3$:	LDA POLYL
	RTS

;
;BIT MASKS
;
BIT6:	.BYTE 40
	.PAGE
	.SBTTL PLANE POINTS DB

	.RADIX 10
;
;PLANE POINTS
;
DB.PLN:	POINTP 0,0,40		;0 BACK TAILS
	POINTP -16,0,40
	POINTP 16,0,40
	POINTP 0,16,40
	POINTP -4,8,-36		;4 FUSELAGE FRONT
	POINTP -8,4,-36
	POINTP -8,-4,-36
	POINTP -4,-8,-36
	POINTP 4,-8,-36		;8
	POINTP 8,-4,-36
	POINTP 8,4,-36
	POINTP 4,8,-36
	POINTP -40,20,-40	;12 TOP WING
	POINTP 40,20,-40
	POINTP -40,-8,-36	;14 LOWER WING (FRONT EDGE)
	POINTP 40,-8,-36
	POINTP 0,0,18		;16 TAIL JOINT
	POINTP -6,20,-28	;WING STRUTS (FRONT EDGE)
	POINTP -3,7,-24
	POINTP 6,20,-28
	POINTP 3,7,-24		;20
	POINTP 4,-8,-24
	POINTP 8,-16,-20
	POINTP -4,-8,-24
	POINTP -8,-16,-20	;24
	POINTP 7,-20,-24	;WHEELS
	POINTP 9,-12,-24
	POINTP -7,-20,-24
	POINTP -9,-12,-24	;28
;
;BACK FACES
;
P.BACK:	POINTP -40,20,-8	;29 UPPER WING
	POINTP 40,20,-8
	POINTP -40,-8,-4	;LOWER WING
	POINTP 40,-8,-4		;32
	POINTP -6,20,-20
	POINTP 6,20,-20
	POINTP 4,-8,-16		;WHEEL STRUTS
	POINTP -4,-8,-16	;36
	POINTP 7,-20,-16	;WHEELS
	POINTP 9,-12,-16
	POINTP -7,-20,-16
	POINTP -9,-12,-16	;40
	POINTP 0,0,-36
;
.PLPNT	=.-DB.PLN
.DRPNT	=P.BACK-DB.PLN
;
BLCOLL:	POINTP 16,16,-40	;POINT CD'S
	POINTP 16,-16,-40	
	POINTP -16,16,-40		
	POINTP -16,-16,-40		
	POINTP 16,16,40		
	POINTP 16,-16,40		
	POINTP -16,16,40
	POINTP -16,-16,40
;
.BLCL	=.-BLCOLL-3
;
	.RADIX 16
;
PPNTS:	.BYTE .PLPNT-3,.DBPRP-3,.COLLD-3
;
PLNDB:	.WORD DB.PLN,DBPROP,COLLD,PIECE0
	.WORD PIECE1,PIECE2,PIECE3,BLIMP,EXCRCL
	.WORD BLCOLL,STAR0,STAR1
;
	.SBTTL	CHKSUM 7 (7000-77FF) [FF]
CHKSM7:	.BYTE 28
;
;
	.END
                                                                                                                               